// V7Keyboard.h: interface for the CV7Keyboard class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_V7KEYBOARD_H__D18E9BD1_82D8_4323_9699_BCF4C48543D4__INCLUDED_)
#define AFX_V7KEYBOARD_H__D18E9BD1_82D8_4323_9699_BCF4C48543D4__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#define BL_PROP_VK(parVK) BL_PROP_RO(_##parVK, #parVK){value = ##parVK; return TRUE;}

class CV7Keyboard : public CContextImpl<CV7Keyboard>
{
public:
	CV7Keyboard();
	virtual ~CV7Keyboard();

	static CV7Keyboard* GetV7Keyboard();
	
	BL_BEGIN_CONTEXT("Keyboard", " лавиатура");
	
	BL_PROP_VK(VK_LBUTTON);

	BL_PROP_VK(VK_RBUTTON);
	BL_PROP_VK(VK_CANCEL);
	BL_PROP_VK(VK_MBUTTON);

	BL_PROP_VK(VK_BACK);
	BL_PROP_VK(VK_TAB);

	BL_PROP_VK(VK_CLEAR);
	BL_PROP_VK(VK_RETURN);

	BL_PROP_VK(VK_SHIFT);
	BL_PROP_VK(VK_CONTROL);
	BL_PROP_VK(VK_MENU);
	BL_PROP_VK(VK_PAUSE);
	BL_PROP_VK(VK_CAPITAL);

	BL_PROP_VK(VK_KANA);
	BL_PROP_VK(VK_HANGEUL);
	BL_PROP_VK(VK_HANGUL);
	BL_PROP_VK(VK_JUNJA);
	BL_PROP_VK(VK_FINAL);
	BL_PROP_VK(VK_HANJA);
	BL_PROP_VK(VK_KANJI);

	BL_PROP_VK(VK_ESCAPE);

	BL_PROP_VK(VK_CONVERT);
	BL_PROP_VK(VK_NONCONVERT);
	BL_PROP_VK(VK_ACCEPT);
	BL_PROP_VK(VK_MODECHANGE);

	BL_PROP_VK(VK_SPACE);
	BL_PROP_VK(VK_PRIOR);
	BL_PROP_VK(VK_NEXT);
	BL_PROP_VK(VK_END);
	BL_PROP_VK(VK_HOME);
	BL_PROP_VK(VK_LEFT);
	BL_PROP_VK(VK_UP);
	BL_PROP_VK(VK_RIGHT);
	BL_PROP_VK(VK_DOWN);
	BL_PROP_VK(VK_SELECT);
	BL_PROP_VK(VK_PRINT);
	BL_PROP_VK(VK_EXECUTE);
	BL_PROP_VK(VK_SNAPSHOT);
	BL_PROP_VK(VK_INSERT);
	BL_PROP_VK(VK_DELETE);
	BL_PROP_VK(VK_HELP);

	BL_PROP_VK(VK_LWIN);
	BL_PROP_VK(VK_RWIN);
	BL_PROP_VK(VK_APPS);

	BL_PROP_VK(VK_NUMPAD0);
	BL_PROP_VK(VK_NUMPAD1);
	BL_PROP_VK(VK_NUMPAD2);
	BL_PROP_VK(VK_NUMPAD3);
	BL_PROP_VK(VK_NUMPAD4);
	BL_PROP_VK(VK_NUMPAD5);
	BL_PROP_VK(VK_NUMPAD6);
	BL_PROP_VK(VK_NUMPAD7);
	BL_PROP_VK(VK_NUMPAD8);
	BL_PROP_VK(VK_NUMPAD9);
	BL_PROP_VK(VK_MULTIPLY);
	BL_PROP_VK(VK_ADD);
	BL_PROP_VK(VK_SEPARATOR);
	BL_PROP_VK(VK_SUBTRACT);
	BL_PROP_VK(VK_DECIMAL);
	BL_PROP_VK(VK_DIVIDE);
	BL_PROP_VK(VK_F1);
	BL_PROP_VK(VK_F2);
	BL_PROP_VK(VK_F3);
	BL_PROP_VK(VK_F4);
	BL_PROP_VK(VK_F5);
	BL_PROP_VK(VK_F6);
	BL_PROP_VK(VK_F7);
	BL_PROP_VK(VK_F8);
	BL_PROP_VK(VK_F9);
	BL_PROP_VK(VK_F10);
	BL_PROP_VK(VK_F11);
	BL_PROP_VK(VK_F12);
	BL_PROP_VK(VK_F13);
	BL_PROP_VK(VK_F14);
	BL_PROP_VK(VK_F15);
	BL_PROP_VK(VK_F16);
	BL_PROP_VK(VK_F17);
	BL_PROP_VK(VK_F18);
	BL_PROP_VK(VK_F19);
	BL_PROP_VK(VK_F20);
	BL_PROP_VK(VK_F21);
	BL_PROP_VK(VK_F22);
	BL_PROP_VK(VK_F23);
	BL_PROP_VK(VK_F24);

	BL_PROP_VK(VK_NUMLOCK);
	BL_PROP_VK(VK_SCROLL);

	BL_PROP_VK(VK_LSHIFT);
	BL_PROP_VK(VK_RSHIFT);
	BL_PROP_VK(VK_LCONTROL);
	BL_PROP_VK(VK_RCONTROL);
	BL_PROP_VK(VK_LMENU);
	BL_PROP_VK(VK_RMENU);

	BL_PROP_VK(VK_PROCESSKEY);

	BL_PROP_VK(VK_ATTN);
	BL_PROP_VK(VK_CRSEL);
	BL_PROP_VK(VK_EXSEL);
	BL_PROP_VK(VK_EREOF);
	BL_PROP_VK(VK_PLAY);
	BL_PROP_VK(VK_ZOOM);
	BL_PROP_VK(VK_NONAME);
	BL_PROP_VK(VK_PA1);
	BL_PROP_VK(VK_OEM_CLEAR);

	BL_FUNC_WITH_DEFVAL(GetKeyState, "ѕолучить—осто€ние лавиши", 2);
	BL_DEFVAL_FOR(GetKeyState);
	BL_FUNC_WITH_DEFVAL(GetKeyNameText, "ѕолучить»м€ лавиши", 2);
	BL_DEFVAL_FOR(GetKeyNameText);

	BL_END_CONTEXT();

};

#endif // !defined(AFX_V7KEYBOARD_H__D18E9BD1_82D8_4323_9699_BCF4C48543D4__INCLUDED_)
