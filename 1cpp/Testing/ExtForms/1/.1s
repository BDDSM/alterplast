Перем АтрибутМодуля;

Функция Конт(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Конт(Контекст); КонецФункции

Процедура УстановитьРеквизит_АтрибутМодуля(НовыйАтрибут = 2)
	//АтрибутМодуля = 2;
	АтрибутМодуля = НовыйАтрибут;
КонецПроцедуры	// УстановитьРеквизит_АтрибутМодуля

Функция ПолучитьРеквизит_АтрибутМодуля()
	Возврат АтрибутМодуля;
КонецФункции	// ПолучитьРеквизит_АтрибутМодуля

//============================================================
Процедура УстановитьПараметр(Параметр, Значение)
	спПараметры=Форма.Параметр;
	Если ТипЗначенияСтр(спПараметры)<>"СписокЗначений" Тогда Возврат; КонецЕсли;
	спПараметры.Установить(Параметр, Значение);
КонецПроцедуры

//============================================================
Процедура ПриОткрытии()
	АтрибутМодуля = 1;
	//глТаблица = СоздатьОбъект("Таблица");
	//глТаблица.ИсходнаяТаблица("Таблица");
	УстановитьПараметр("РежимОткрытия", "Первое открытие");
КонецПроцедуры

//============================================================
Процедура ПриПовторномОткрытии()
	АтрибутМодуля = 1;
	УстановитьПараметр("РежимОткрытия", "Повторное открытие");
КонецПроцедуры

//============================================================
Процедура Сформировать()

КонецПроцедуры

//============================================================
Функция ВложенныйВызов()
	Возврат Сам().ПолучитьРеквизит_АтрибутМодуля();
КонецФункции

//============================================================
Функция ПолучитьТаблицу()
	Возврат СоздатьОбъект("Таблица");
КонецФункции

//============================================================
Функция ВызовСПараметрамиПоУмолчанию(Парам1 = "Строка", Парам2 = 1 )
	Возврат Парам1+","+Парам2;
КонецФункции
