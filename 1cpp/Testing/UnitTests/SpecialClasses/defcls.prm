
class ВыполняемыйМодуль_КлассПроверки = ВыполняемыйМодуль_КлассПроверки.txt
{                
}

class ВыполняемыйМодуль_Предок = ВыполняемыйМодуль_Предок.txt
{
}

class ВыполняемыйМодуль_Потомок = ВыполняемыйМодуль_Потомок.txt : ООППредок
{
}

//class ВыполняемыйМодульТесты = ВыполняемыйМодульТесты.txt : ТестовыйСлучайСДанными
class ВыполняемыйМодульТесты = ВыполняемыйМодульТесты.txt : ТестовыйСлучайФОрмы
{                
}

class ВыполняемыйМодуль_ОбразыКлассов = ВыполняемыйМодуль_ОбразыКлассов.txt
{                
	void ПолучитьДанныеОТипе(Строка ТипОбъекта, Неопределенный ТабМетоды, Неопределенный ТабСвойства);
	void ЗаписатьОбразОбъекта(Строка ТипОбъекта);
	void ВосстановитьОбразОбъекта(Строка ТипОбъекта, Неопределенный ТабМетоды, Неопределенный ТабСвойства);

}

class ТестыКлассовНаСоответствиеМетодовИСвойств = ТестыКлассовНаСоответствиеМетодовИСвойствТесты.txt : ТестовыйСлучайСДанными
{                
}

class MathТесты = MathТесты.txt : ТестовыйСлучай
{
}

class ДелегатОбработчик = ДелегатОбработчик.txt
{
	void процИнкремент(__знач);
	void процДекремент(__знач);
	void процКвадрат(__знач);
	Число функСумма(__знач1, __знач2, __знач3);
	Число функРазность(__знач1, __знач2, __знач3);
	Число функПроизведение(__знач1, __знач2, __знач3);
	Число функПостИнкремент(__знач);
	Число функROL(__знач1, __знач2, __знач3);
}

class ДелегатТесты = ДелегатТесты.txt : ТестовыйСлучай
{
	void _ДобавитьНесуществующийМетод();
	void _ДобавитьМетодНеагрегатногоОбъекта();
	void _ВызватьСЛишнимиПараметрами();
}

class МенеджерСобытийТесты = МенеджерСобытийТесты.txt : ТестовыйСлучайСДанными
{

	void _ДобавитьНесуществующийМетод();

	void _ДобавитьМетодНеагрегатногоОбъекта();
}

class РеестрWin_Тесты = РаботаСРегистромWinТесты.txt : ТестовыйСлучайСДанными
{
}

class СтруктураТесты = СтруктураТесты.txt : ТестовыйСлучайСДанными
{
}

class DynaValueТесты = DynaValueТесты.txt : ТестовыйСлучайСДанными
{
}

class DynaCryptТесты = DynaCryptТесты.txt : ТестовыйСлучайСДанными
{
}

class MetaInfoClassesТесты = MetaInfoClassesТесты.txt : ТестовыйСлучайСДанными
{
}

class MetaDataWorkТесты = MetaDataWorkТесты.txt : ТестовыйСлучайСДанными
{
}

class GUIDТесты = GUIDТесты.txt : ТестовыйСлучайСДанными
{
}

class BinaryDataТесты = BinaryDataТесты.txt : ТестовыйСлучайСДанными
{
}

//class ПотокТесты = ПотокТесты.txt : ТестовыйСлучайСДанными
//{
//}

class УправлениеНастройкамиТесты = УправлениеНастройкамиТесты.txt : ТестовыйСлучайСДанными
{
}

class Общие.Форма.Привязка = Общие.Форма.Привязка.ert : РасширениеФормы
{
	void Привязка(Строка ИДЭлемента, Строка ТипВ="", Строка ИДЭлементаВ="", Строка ТипГ="", Строка ИДЭлементаГ="");
	void УстановитьФорму(РасширяемаяФорма);
	void ПриИзмененииРазмераОкна(ТипСобытия, ШиринаФормы, ВысотаФормы);
	void ПослеОткрытия();
	void ПриДвиженииМыши(Сост,ЛевоМ,ВерхМ);
	void ПриНажатииЛевойКнопки(Сост,ЛевоМ,ВерхМ);
	void ПриОтжатииЛевойКнопки(Сост,ЛевоМ,ВерхМ);
	void Сбросить();
	void Выровнять(ИДЭлемента, Граница, ИДЭлементаЦель, ГраницаЦель, Отступ);
	void Привязать();
};

class СистемаТесты = СистемаТесты.txt  : ТестовыйСлучайФормы
{
}

class ИнформаторТесты = ИнформаторТесты.txt : ТестовыйСлучайСДанными
{                
}

class ПерехватчикТесты = ПерехватчикТесты.txt : ТестовыйСлучайФормы
{                
}

class КлассПерехватчикГК = ExtForms\UnitTests\КлассПерехватчикГК.ert
{                
}

class КлассПерехватчикГК_События = ExtForms\UnitTests\КлассПерехватчикГК_События.ert
{                
}

class КлассПерехватчикГК_СобытияFormEx = ExtForms\UnitTests\КлассПерехватчикГК_СобытияFormEx.ert
{                
}

class КлассПерехватчикГК_СобытияFormExДоПерехвата = ExtForms\UnitTests\КлассПерехватчикГК_СобытияFormExДоПерехвата.ert
{                
}

class НоваяСтрокаЧерезКонтекст_Тесты = НоваяСтрокаЧерезКонтекст_Тесты.txt : ТестовыйСлучайФормы
{                
}

class Форма_Тесты = Форма_Тесты.txt : ТестовыйСлучайФормы
{                
}

class КлассЭлементУправления = КлассЭлементУправления.txt : АктивИкс
{                
}

class АктивИкс_Тесты = АктивИкс_Тесты.txt : ТестовыйСлучайФормы
{                
}

class КлассПотомокАктивИкс = КлассПотомокАктивИкс.txt : АктивИкс
{                
}

class КлассПерехватчикГК_Документ = КлассПерехватчикГК_Документ.txt : Перехватчик
{
}

//class КлассПерехватчикГлобальногоМодуля = КлассПерехватчикГлобальногоМодуля.txt : Перехватчик
class КлассПерехватчикГлобальногоМодуля = КлассПерехватчикГлобальногоМодуля.txt
{
}

class БуферОбмена_Тесты = БуферОбмена_Тесты.txt : ТестовыйСлучай
{
}
