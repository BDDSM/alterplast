{"Shell",
 {"Folder","AST","1С++ Add","",
  {"Folder","AST","Индексированная таблица","IndexedTable",
   {"Item","AST","ИндексированнаяТаблица","ИндексированнаяТаблица","ИндексированнаяТаблица","IndexedTable",
"@Назначение:
Аналог встроенного типа ''ТаблицаЗначений'', дополненный возможностью создавать и использовать индексы над таблицей. Индексы строятся в виде двоичных поисковых деревьев, таким образом - получаем затраты на поиск O(log2(N)), тогда как в стандартном типе ''ТаблицаЗначений'' поиск осуществляется перебором строк, и следовательно, затраты на поиск - O(N).
Индекс может быть двух типов: 
по всем строкам таблицы; 
по строкам с уникальными значениями ключа. Строки с повторяющимися значениями ключа будут проигнорированы, и в операции перебора строк, суммирования, свёртки, выгрузки, загрузки не попадут. 
Использование индексов даёт и другие преимущества, кроме ускорения поиска: 
возможность поиска по нескольким значениям (по составному ключу); 
наличие нескольких индексов для одной таблицы, независимые выборки для каждого индекса; 
поиск по условиям ''больше либо равно'', ''меньше либо равно''; 
построение индекса только по уникальным значениям даёт возможность получить список уникальных ключей без свёртывания таблицы; 
свёртка по существующему индексу - при этом не теряется время на построение временного индекса; 
динамическая фильтрация строк; 
суммирование и свёртка по динамическому фильтру. 
Таблица всегда имеет 1 индекс (в дальнейшем будем называть его ''основной индекс''), который нельзя удалить. Номер этого индекса - 1, имя - '''' (пустая строка). Если в операциях, использующих индекс, не указано имя индекса, то используется основной индекс. При операциях перепозиционирования (ВНачало(), СледующаяСтрока(), ПредыдущаяСтрока() и т.д.) основной индекс позиционируется на ту же строку.
"
   }
   {"Folder","AST","Свойства","",
    {"Item","AST","НомерСтроки","НомерСтроки","НомерСтроки","RowNumber",
"@Назначение:
Доступ: чтение и запись.
Тип: Число.
Номер текущей строки в основном индексе. Если строка не выбрана, то 0.
"
    }
    {"Item","AST","<ИмяКолонки>","","<ИмяКолонки>","",
"@Синтаксис:
Доступ: чтение и запись.
Тип: любой.
@Назначение:
Обращение к значениям колонок, созданных методом НоваяКолонка().
"
    }
   },
   {"Folder","AST","Методы","",
    {"Item","AST","НоваяКолонка","NewColumn","НоваяКолонка(<?>)","NewColumn(<?>)",
"@Синтаксис:
НоваяКолонка(стрИмяКолонки)
@Назначение:
Создаёт колонку в таблице.
Возвращает: тип: Число. Номер созданной колонки.
@Параметры:
стрИмяКолонки - тип: Строка. Идентификатор создаваемой колонки. В идентификаторе колонки можно использовать любые символы, но следует помнить, что символы '-', '*', '#', '^' и '&' используются как модификаторы при построении индексных выражений, и по колонкам с такими символами построить индекс будет невозможно.
"
    }
    {"Item","AST","ПереименоватьКолонку","ПереименоватьКолонку","ПереименоватьКолонку(<?>,)","RenameColumn(<?>)",
"@Синтаксис:
ПереименоватьКолонку(Колонка, стрНовоеИмяКолонки)
@Назначение:
Переименовывает колонку таблицы.
@Параметры:
Колонка - тип: Строка, Число. Идентификатор или номер колонки. 
стрНовоеИмяКолонки - тип: Строка. Новый идентификатор колонки.
"
    }
    {"Item","AST","УдалитьКолонку","УдалитьКолонку","УдалитьКолонку(<?>)","RemoveColumn(<?>)",
"@Синтаксис:
УдалитьКолонку(Колонка)
@Назначение:
Удаляет указанную колонку.
@Параметры:
Колонка - тип: Строка, Число. Идентификатор или номер колонки.
"
    }
    {"Item","AST","КоличествоКолонок","КоличествоКолонок","КоличествоКолонок()","ColumnCount()",
"@Синтаксис:
КоличествоКолонок()
@Назначение:
Возвращает количество колонок в таблице.

Возвращает: тип: Число. Количество колонок в таблице.
"
    }
    {"Item","AST","ИмяКолонки","ИмяКолонки","ИмяКолонки(<?>)
","ColumnName()",
"@Синтаксис:
ИмяКолонки(Колонка)
@Назначение:
Возвращает идентификатор указанной колонки, как он был задан в методе НоваяКолонка().
@Параметры:
Колонка - тип: Строка, Число. Идентификатор или номер колонки.

Возвращает: тип: Строка. Идентификатор колонки. Если такой колонки нет, то возникает исключение.
"
    }
    {"Item","AST","НомерКолонки","НомерКолонки","НомерКолонки(<?>)","",
"@Синтаксис:
НомерКолонки(Колонка)
@Назначение:
Возвращает номер указанной колонки.
@Параметры:
Колонка - тип: Строка, Число. Идентификатор или номер колонки.

Возвращает: тип: Число. Номер колонки.
"
    }
    {"Item","AST","НоваяСтрока","НоваяСтрока","НоваяСтрока()","NewRow()",
"@Синтаксис:
НоваяСтрока()
@Назначение:
Cоздаёт новую строку в конце таблицы.

Возвращает: тип: Число. Номер созданной строки.
"
    }
    {"Item","AST","УдалитьСтроку","УдалитьСтроку","УдалитьСтроку(<?>)","",
"@Синтаксис:
УдалитьСтроку(чСтрока)
@Назначение:
Удаляет указанную строку.
@Параметры:
чСтрока - тип: Число. Номер удаляемой строки 
"
    }
    {"Item","AST","УдалитьСтроки","УдалитьСтроки","УдалитьСтроки(<?>)","RemoveRows",
"@Синтаксис:
УдалитьСтроки([Индекс])
@Назначение:
Удаляет строки из таблицы. Если указан индекс, то при удалении учитывается наложенный фильтр.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. Если параметр указан, и по данному индексу установлен фильтр, то удалятся строки, удовлетворяющие условиям фильтра.
"
    }
    {"Item","AST","КоличествоСтрок","КоличествоСтрок","КоличествоСтрок(<?>,)","",
"@Синтаксис:
КоличествоСтрок([Индекс = ''''], [флТолькоУникальные = 0])
@Назначение:
Возвращает количество строк в таблице.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. Если параметр указан, и по данному индексу установлен фильтр, то считаются только строки, удовлетворяющие условиям фильтра. 
флТолькоУникальные - тип: Число. Флаг учета только уникальных значений индекса. 

Возвращает: тип: Число. количество строк в таблице.
"
    }
    {"Item","AST","НомерСтроки","НомерСтроки","НомерСтроки(<?>)","RowNumber(<?>)",
"@Синтаксис:
НомерСтроки(Индекс)
@Назначение:
Возвращает текущий номер строки в выборке для указанного индекса.
@Параметры:
Индекс - тип: Строка, Число. идентификатор или номер индекса.

Возвращает: тип: Число. Номер текущей строки в указанном индексе. Если строка не выбрана, то 0.
"
    }
    {"Item","AST","Очистить","Очистить","Очистить()","Cleanup()",
"@Синтаксис:
Очистить()
@Назначение:
Полная очистка таблицы. Удаляются все индексы, строки и колонки.
"
    }
    {"Item","AST","ДобавитьИндекс","ДобавитьИндекс","ДобавитьИндекс(<?>, ,)","AddIndex",
"@Синтаксис:
ДобавитьИндекс(стрИдентификатор, стрВыражение, [чТолькоУникальныеЗначения = 0])
@Назначение:
Добавляет индекс к таблице.
@Параметры:
стрИдентификатор - тип: Строка. Идентификатор создаваемого индекса; 
стрВыражение - тип: Строка. Индексное выражение. Индексное выражение состоит из списка идентификаторов колонок, разделённого запятыми. Если перед именем колонки стоит символ '-', то сортировка осуществляется в обратном порядке. Если перед именем колонки стоит символ '*', то сортировка осуществляется по внутреннему представлению объекта. Если перед именем колонки стоит символ '#', то перед сравнением строк обрезаются пробелы слева и справа. Если перед именем колонки стоит символ '^', то строки сравниваются без учёта регистра. Модификаторы сортировки ('-', '*', ''#'', ''^'') можно использовать в любых сочетаниях. Индексное выражение может быть пустой строкой - это эквивалентно сортировке по номеру строки, или отсутствию сортировки (фильтр на такой индекс установить нельзя). 
чТолькоУникальныеЗначения - тип: Число. Если 1, то в индекс попадут только строки, содержащие уникальные значения индекса. Строки с повторяющимися индексами будут проигнорированы, и в операции перебора строк, суммирования, свёртки, выгрузки, загрузки не попадут.

Возвращает: тип: Число. Номер созданного индекса.

"
    }
    {"Item","AST","УдалитьИндекс","УдалитьИндекс","УдалитьИндекс(<?>)","DropIndex(<?>)",
"@Синтаксис:
УдалитьИндекс(Индекс)
@Назначение:
Удаление указанного индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса.
"
    }
    {"Item","AST","КоличествоИндексов","КоличествоИндексов","КоличествоИндексов()
","IndexCount()",
"@Синтаксис:
КоличествоИндексов()
@Назначение:
Возвращает количество индексов в таблице.

Возвращает: тип: Число. Количество индексов в таблице.
"
    }
    {"Item","AST","ИмяИндекса","ИмяИндекса","ИмяИндекса(<?>)","IndexName(<?>)",
"@Синтаксис:
ИмяИндекса(Индекс)
@Назначение:
Возвращает имя индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса.

Возвращает: тип: Строка. Имя индекса. 

Если индекс отсутствует в таблице, генерируется исключение.
"
    }
    {"Item","AST","ВыражениеИндекса","ВыражениеИндекса","ВыражениеИндекса(<?>)","IndexExpr(<?>)",
"@Синтаксис:
ВыражениеИндекса(Индекс)
@Назначение:
Возвращает индексное выражение для заданного индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса.

Возвращает: тип: Строка. Индексное выражение. 

Если индекс отсутствует в таблице, генерируется исключение.
"
    }
    {"Item","AST","НомерИндекса","НомерИндекса","НомерИндекса(<?>)","IndexNumber(<?>)",
"@Синтаксис:
НомерИндекса(Индекс)
@Назначение:
Возвращает номер индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. 

Возвращает: тип: Число. Номер индекса. 

Если индекс отсутствует в таблице, функция возвращает 0. 
"
    }
    {"Item","AST","Сортировать","Сортировать","Сортировать(<?>)","Sort(<?>)",
"@Синтаксис:
Сортировать(стрВыражение)
@Параметры:
стрВыражение - тип: Строка. Индексное выражение. Индексное выражение состоит из списка идентификаторов колонок, разделённого запятыми. Если перед именем колонки стоит символ '-', то сортировка осуществляется в обратном порядке. Если перед именем колонки стоит символ '*', то сортировка осуществляется по внутреннему представлению объекта. Если индексное выражение - пустая строка, то сортировка выключается (фильтр на такой индекс установить нельзя).
Изменение сортировки в основном индексе.
"
    }
    {"Item","AST","ИндексУникален","ИндексУникален","ИндексУникален(<?>)","IndexIsUnique(<?>)",
"@Синтаксис:
ИндексУникален([Индекс = ''''])
@Назначение:
проверяет, уникален ли индекс.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса.

Возвращает: тип: Число. 1 - в таблице нет строк, с повторяющимися значениями ключа; 0 - таблица содержит строки с одинаковыми значениями ключа.
"
    }
    {"Item","AST","КоличествоУникальныхКлючей","КоличествоУникальныхКлючей","КоличествоУникальныхКлючей(<?>)","UniqueKeyCount(<?>)",
"@Синтаксис:
КоличествоУникальныхКлючей([Индекс = ''''])
@Назначение:
возвращает количество уникальных ключей по указанному индексу.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса.

Возвращает: тип: Число. Количество уникальных ключей.
"
    }
    {"Item","AST","КоличествоЗначенийКлюча","КоличествоЗначенийКлюча","КоличествоЗначенийКлюча(<?>, )
","KeyValueCount(<?>, )",
"@Синтаксис:
КоличествоЗначенийКлюча([Индекс = ''''], Ключ)
@Назначение:
возвращает количество строк, для которых значение ключа равно параметру Ключ.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. 
Ключ - тип: любой. Если индекс построен по одной колонке - то значение поиска. Если же индекс по нескольким колонкам, то это должен быть СписокЗначений, содержащий значения ключевых колонок, заданных в методе ДобавитьИндекс(). 

Возвращает: тип: Число. Количество строк с указанным ключом.
"
    }
    {"Item","AST","НайтиСтроку","НайтиСтроку","НайтиСтроку(<?>,,,)","FindRow(<?>,,,)",
"@Синтаксис:
НайтиСтроку(Индекс, Ключ, [чНайтиПоследнюю = 0], [чСпозиционироваться = 0])
@Назначение:
Найти строку, точно соответствующую ключу.
@Параметры:
Возвращает: тип: Число. Номер найденной строки. Если ничего не найдено, то 0.
Индекс - тип: Строка, Число. Идентификатор или номер индекса. 
Ключ - тип: любой. Если индекс построен по одной колонке - то значение поиска. Если же индекс по нескольким колонкам, то это должен быть СписокЗначений, содержащий значения ключевых колонок, заданных в методе ДобавитьИндекс(). 
чНайтиПоследнюю - тип: Число. Если 1, то будет найдена последняя строк с совпадающим значением ключа. 
чСпозиционироваться - тип: Число. Если 1, то при успешном поиске индекс будет спозиционирован на найденной строке. Если перед выполнением метода была открыта выборка (методом ВыбратьСтроки), то она перепозиционируется на найденное значение. Если выборка не была открыта, то она открывается, и после успешного поиска могут быть использованы методы ПолучитьСтроку(), СледующаяСтрока() и ПредыдущаяСтрока(). Основной индекс также перепозиционируется.
"
    }
    {"Item","AST","НайтиБлижайшуюБольше","НайтиБлижайшуюБольше","НайтиБлижайшуюБольше(<?>,,)","FindNearestGE(<?>,,)",
"@Синтаксис:
НайтиБлижайшуюБольше(Ключ, [Индекс = ''''], [чСпозиционироваться = 0])
@Назначение:
Найти строку, которая равна или больше ключа.
@Параметры:
Ключ - тип: любой. Если индекс построен по одной колонке - то значение поиска. Если же индекс по нескольким колонкам, то это должен быть СписокЗначений, содержащий значения ключевых колонок, заданных в методе ДобавитьИндекс(). 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чСпозиционироваться - тип: Число. Если 1, то при успешном поиске индекс будет спозиционирован на найденной строке. Если перед выполнением метода была открыта выборка (методом ВыбратьСтроки), то она перепозиционируется на найденное значение. Если выборка не была открыта, то она открывается, и после успешного поиска могут быть использованы методы ПолучитьСтроку(), СледующаяСтрока() и ПредыдущаяСтрока(). Основной индекс также перепозиционируется.

Возвращает: тип: Число. Номер найденной строки. Если ничего не найдено, то 0.
"
    }
    {"Item","AST","НайтиБлижайшуюМеньше","НайтиБлижайшуюМеньше","НайтиБлижайшуюМеньше(<?>,, )","FindNearestLE(<?>,, )",
"@Синтаксис:
НайтиБлижайшуюМеньше(Ключ, [Индекс = ''''], [чСпозиционироваться = 0])
@Назначение:
Найти строку, которая равна или меньше ключа.
@Параметры:
Ключ - тип: любой. Если индекс построен по одной колонке - то значение поиска. Если же индекс по нескольким колонкам, то это должен быть СписокЗначений, содержащий значения ключевых колонок, заданных в методе ДобавитьИндекс(). 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чСпозиционироваться - тип: Число. Если 1, то при успешном поиске индекс будет спозиционирован на найденной строке. Если перед выполнением метода была открыта выборка (методм ВыбратьСтроки), то она перепозиционируется на найденное значение. Если выборка не была открыта, то она открывается, и после успешного поиска могут быть использованы методы ПолучитьСтроку(), СледующаяСтрока() и ПредыдущаяСтрока(). Основной индекс также перепозиционируется.

Возвращает: тип: Число. Номер найденной строки. Если ничего не найдено, то 0.
"
    }
    {"Item","AST","УстановитьФильтр","УстановитьФильтр","УстановитьФильтр(<?>, , , )","SetFilter(<?>, , , )",
"@Синтаксис:
УстановитьФильтр(КлючМин, КлючМакс, [Индекс = ''''], [чТолькоУникальные = 0], [чИнверсия = 0])
@Назначение:
устанавливает динамический фильтр на таблицу по указанному индексу. Фильтр влияет на работу методов: ВНачало(), ВыбратьСтроки(), ВКонец(), ПолучитьСтроку(), СледующаяСтрока(), ПредыдущаяСтрока(),Свернуть(),Итог(), ЗаполнитьКолонку(), Выгрузить(), Загрузить(), Объединить().
@Параметры:
КлючМин - тип: любой. Нижняя граница фильтра. Задаётся так же, как в методе НайтиСтроку(). 
КлючМакс - тип: любой. Верхняя границы фильтра. Задаётся так же, как в методе НайтиСтроку(). 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. Если 1 - то в выборку попадут только строки с уникальным значением ключа. 
чИнверсия - тип: Число. 0 - обычный фильтр, 1 - инверсный фильтр.

Если индекс построен по одной колонке, то в качестве ключей можно использовать значение колонки. Если же индекс по нескольким колонкам, то ключ должен быть СписокЗначений, содержащий значения ключевых колонок, заданных в методе ДобавитьИндекс().
"
    }
    {"Item","AST","Подмножество","Подмножество","Подмножество(<?>, , )","Subset(<?>, , )",
"@Синтаксис:
Подмножество(сзКлюч, чКоличествоФиксКолонок, [Индекс = ''''])
@Назначение:
устанавливает фильтр, фиксируя значения первых колонок индекса.
@Параметры:
сзКлюч - тип: СписокЗначений. Список, содержащий значения фиксируемых колонок индекса. 
чКоличествоФиксКолонок - тип: Число. Количество фиксируемых колонок индекса 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс.

Пример:

ТЗ.ДобавитьИндекс(''и1'', ''к1, к2'');
сзКлюч = СоздатьОбъект(''СписокЗначений'');
сзКлюч.ДобавитьЗначение(5);
ТЗ.Подмножество(сзКлюч, 1, ''и1'');

в результате в выборке будут только те строки, у которых колонка к1 = 5.
"
    }
    {"Item","AST","ВыключитьФильтр","ВыключитьФильтр","ВыключитьФильтр(<?>)","DropFilter(<?>)",
"@Синтаксис:
ВыключитьФильтр(Индекс)
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса.
выключает фильтр у указанного индекса.
"
    }
    {"Item","AST","ВНачало","ВНачало","ВНачало(<?>, )","FirstRow(<?>, )",
"@Синтаксис:
ВНачало([Индекс = ''''], [флТолькоУникальные = 0])
@Назначение:
позиционируется перед первой строкой указанного индекса, так что метод СледующаяСтрока() спозиционируется на первой строке.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. Флаг выборки по уникальным значениям. Флаг влияет на результат всех последующих вызовов методов ПолучитьСтроку(), СледующаяСтрока(), ПредыдущаяСтрока() по данной выборке.

Возвращает тип: Число. 1 - операция завершилась успешно, 0 - выборка пуста.
"
    }
    {"Item","AST","ВыбратьСтроки","ВыбратьСтроки","ВыбратьСтроки(<?>, )","SelectRows(<?>, )",
"@Синтаксис:
ВыбратьСтроки([Индекс = ''''], [флТолькоУникальные = 0])
@Назначение:
позиционируется перед первой строкой указанного индекса, так что метод ПолучитьСтроку() спозиционируется на первой строке.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. Флаг выборки по уникальным значениям. Флаг влияет на результат всех последующих вызовов методов ПолучитьСтроку(), СледующаяСтрока(), ПредыдущаяСтрока() по данной выборке.

Возвращает тип: Число. 1 - операция завершилась успешно, 0 - выборка пуста.
"
    }
    {"Item","AST","ВКонец","ВКонец","ВКонец(<?>, )","LastRow",
"@Синтаксис:
ВКонец([Индекс = ''''], [флТолькоУникальные = 0])
@Назначение:
позиционируется после последней строки указанного индекса, так что метод ПредыдущаяСтрока() спозиционируется на последней строке.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. Флаг выборки по уникальным значениям. Флаг влияет на результат всех последующих вызовов методов ПолучитьСтроку(), СледующаяСтрока(), ПредыдущаяСтрока() по данной выборке.

Возвращает тип: Число. 1 - операция завершилась успешно, 0 - выборка пуста.
"
    }
    {"Item","AST","СледующаяСтрока","СледующаяСтрока","СледующаяСтрока(<?>, )","Next(<?>, )",
"@Синтаксис:
СледующаяСтрока([Индекс = ''''], [чТолькоУникальные = 0])
@Назначение:
переход к следующей строке индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. 1 - будет получена следующая строка с отличающимся значением ключа, все повторяющиеся строки будут пропущены.

Возвращает тип: Число. 1 - операция завершилась успешно, 0 - больше нет строк.

Флаг уникальной выборки, установленный в 1 в методах ВНачало() и ВКонец() имеет приоритет над флагом данного метода.
"
    }
    {"Item","AST","ПолучитьСтроку","ПолучитьСтроку","ПолучитьСтроку(<?>, )","GetRow(<?>, )",
"@Синтаксис:
ПолучитьСтроку([Индекс = ''''], [чТолькоУникальные = 0])
@Назначение:
переход к следующей строке индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. 1 - будет получена следующая строка с отличающимся значением ключа, все повторяющиеся строки будут пропущены.

Возвращает тип: Число. 1 - операция завершилась успешно, 0 - больше нет строк.

флаг уникальной выборки, установленный в 1 в методах ВНачало() и ВКонец(), имеет приоритет над флагом данного метода.

"
    }
    {"Item","AST","ПредыдущаяСтрока","ПредыдущаяСтрока","ПредыдущаяСтрока(<?>], )","Previous(<?>], )",
"@Синтаксис:
ПредыдущаяСтрока([Индекс = ''''], [чТолькоУникальные = 0])
@Назначение:
переход к предыдущей строке индекса.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
чТолькоУникальные - тип: Число. 1 - будет получена следующая строка с отличающимся значением ключа, все повторяющиеся строки будут пропущены.

Возвращает тип: Число. 1 - операция завершилась успешно, 0 - больше нет строк.

Флаг уникальной выборки, установленный в 1 в методах ВНачало() и ВКонец(), имеет приоритет над флагом данного метода.
"
    }
    {"Item","AST","ПолучитьЗначение","ПолучитьЗначение","ПолучитьЗначение(<?>, )","GetValue(<?>, )",
"@Синтаксис:
ПолучитьЗначение([чСтрока = ПустоеЗначение], Колонка)
@Назначение:
возвращает значение в указанной ячейке таблицы.
@Параметры:
чСтрока - тип: Число. Номер строки. Если номер строки не указан, то берётся текущая строка. 
Колонка - тип: Строка, Число. Идентификатор или номер колонки.

Возвращает тип: любой. Значение ячейки таблицы.
"
    }
    {"Item","AST","Получить","Получить","Получить(<?>, )","Get(<?>, )",
"@Синтаксис:
Получить(чСтрока, Колонка)
@Назначение:
синоним метода ПолучитьЗначение().
"
    }
    {"Item","AST","УстановитьЗначение","УстановитьЗначение","УстановитьЗначение(<?>,, )","SetValue(<?>,, )",
"@Синтаксис:
УстановитьЗначение([чСтрока = ПустоеЗначение], Колонка, Значение)
@Назначение:
устанавливает значение указанной ячейки.
@Параметры:
чСтрока - тип: Число. Номер строки. Если номер строки не указан, то устанавливается значение в текущей строке. 
Колонка - тип: Строка, Число. Идентификатор или номер колонки. 
Значение - тип: любой. Новое значение ячейки.
"
    }
    {"Item","AST","Установить","Установить","Установить(<?>, , )","Set(<?>, , )",
"@Синтаксис:
Установить(чСтрока, Колонка, Значение)
@Назначение:
синоним метода УстановитьЗначение().
"
    }
    {"Item","AST","Свернуть","Свернуть","Свернуть(<?>, , )","GroupBy(<?>, , )",
"@Синтаксис:
Свернуть(стрКолонкиСвёртки, стрКолонкиСумм [, ИмяСуществующегоИндекса])
@Назначение:
сворачивает таблицу по колонкам <КолонкиСвёртки>, суммируя значения в колонках <КолонкиСумм>. Колонки, не вошедшие в <КолонкиСвёртки> и <КолонкиСумм> из таблицы не удаляются. Свёртка возможна и по существующему индексу - при этом не теряется время на построение временного индекса, и возможна выборочная свёртка по текущему фильтру индекса.
@Параметры:
стрКолонкиСвёртки - тип: Строка. Список колонок, по которым будет осуществляться свёртка. Эта строка полностью аналогична индексному выражению в методе ДобавитьИндекс(). Для свёртки таблица сначала индексируется по этому выражению, а затем строки с одинаковым индексом суммируются. Результат всегда помещается в первую по номеру строку, все остальные строки удаляются. 
стрКолонкиСумм - тип: Строка. Список колонок, которые нужно просуммировать. Разделитель - символ ','. Пробелы игнорируются. 
ИмяСуществующегоИндекса - тип: Стрка, Число. Если указано имя индекса, то КолонкиСвёртки игнорируются, а свёртка осуществляется по указанному индексу. В свёртке учавствуют только те строки, которые входят в фильтр.
"
    }
    {"Item","AST","Итог","Итог","Итог(<?>, )","Sum(<?>, )",
"@Синтаксис:
Итог(КолонкаСуммы, [Индекс = ''''])
@Назначение:
считает сумму по указанной колонке, при этом учитывается фильтр индекса.
@Параметры:
КолонкаСуммы - тип: Строка, Число. Колонка, по которой нужно получить сумму. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс.

Возвращает тип: Число. Сумма по указанной колонке.
"
    }
    {"Item","AST","ИтогПоДиапазону","ИтогПоДиапазону","ИтогПоДиапазону(<?>, , , )","SumByRange(<?>, , , )",
"@Синтаксис:
ИтогПоДиапазону(КолонкаСуммы, [Индекс = ''''], КлючМин, КлючМакс)
@Назначение:
считает сумму по указанной колонке, с заданием диапазона суммирования. Функция не учитывает установленные фильтры и сама перманентных фильтров не устанавливает.
@Параметры:
КолонкаСуммы - тип: Строка, Число. Колонка, по которой нужно получить сумму. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
КлючМин - тип: любой. Нижняя граница диапазона. Задаётся так же, как в методе НайтиСтроку(). 
КлючМакс - тип: любой. Верхняя границы диапазона. Задаётся так же, как в методе НайтиСтроку(). 

Возвращает тип: Число. Сумма по указанной колонке.
"
    }
    {"Item","AST","ИтогПоУзлу","ИтогПоУзлу","ИтогПоУзлу(<?>, )","NodeSum(<?>, )",
"@Синтаксис:
ИтогПоУзлу(КолонкаСуммы [, Индекс])
@Назначение:
считает сумму по указанной колонке для текущего узла индексного дерева. Имеет смысл, когда индекс не уникален, и нужно посчитать итог по текущему ключу.
@Параметры:
КолонкаСуммы - тип: Строка, Число. Колонка, по которой нужно получить сумму. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс.

Возвращает: тип: Число. Сумма по указанной колонке. Если выборка не активна (нет текущего узла), то возвращает 0.


Пример: на входе имеем таблицу

Фамилия	Сумма 
Иванов	 100 
Иванов	 120 
Иванов	 200 
Петров	 500 
Петров	 600 

ТЗ.ДобавитьИндекс(''Фамилия'', ''Фамилия'', 0);
ТЗ.НайтиСтроку(''Фамилия'', ''Иванов'', 0, 1); //позиционируемся на узел, в котором собраны все строки с фамилией Иванов
Сум = ТЗ.ИтогПоУзлу(''Сумма'', ''Фамилия''); //вернёт 420  (100 + 120 + 200)
ТЗ.НайтиСтроку(''Фамилия'', ''Петров'', 0, 1); //позиционируемся на узел, в котором собраны все строки с фамилией Петров
Сум = ТЗ.ИтогПоУзлу(''Сумма'', ''Фамилия''); //вернёт 1100  (500 + 600)
"
    }
    {"Item","AST","Группировать","Группировать","Группировать(<?>, , )","Group(<?>, , )",
"@Синтаксис:
Группировать(стрГруппировки, стрКолонкиСумм, [чРасшифровкаПоследнегоУровня = 0])
@Назначение:
формирует таблицу с древовидной структурой в соответствии с группировками. На каждом уровне группировки остаются только уникальные значения по соответствующему индексу. В колонки сумм записываются суммы по всем строкам с совпадающим значением ключа. Строки с совпадающими значениями ключа записываются в таблицу, которая помещается в колонку тзПотомки - эта колонка создаётся в процессе группировки.
@Параметры:
стрГруппировки - тип: Строка. Строка, описывающая требуемую структуру группировки. Задаётся в виде <ИмяИндекса1>: <ИндексноеВыражение1> [; <ИмяИндекса2>: <ИндексноеВыражение2> ... ]. ИндексноеВыражение - строка в том же формате, что и для метода ДобавитьИндекс(), с одним дополнением: если в списке модификаторов колонки присутствует символ '&', то по этой колонке будут посчитаны итоги по группам справочника. Колонка с таким модификатором может быть только одна на каждом уровне группировки. 
стрКолонкиСумм - тип: Строка. Строка с колонками, по которым нужно считать суммы. 
чРасшифровкаПоследнегоУровня - тип: Число. 1 - в каждой строке последнего уровня группировки будет таблица с расшифровкой, содержащая строки исходной таблицы в нетронутом виде. 0 - последний уровень будет свёрнут.

При группировке возможно также подсчитывать суммы по группам справочников - для этого в списке модификаторов индекса нужно указать '&'. Если в таблице есть колонка с именем '<ИмяКолонкиСправочника>_Родитель', то родитель для элемента будет браться из этой колонки - это уменьшает количество обращений к базе, и заметно увеличивает производительность. Итоговая таблица будет организована в виде дерева, в точности повторяющего структуру справочника. Следующий уровень группировки располагается в листьях этого дерева (т.е. в строках, не являющихся группами). Для удобства работы с полученным деревом в таблицу добавляется колонка '__ЭтоГруппа__', в которую записывается 1 для всех групп, и ПустоеЗначение для элементов. Также добавляется колонка '__Уровень__', которая заполняется значением уровня групп справочника (нумерация начинается с 1). Для элементов в колонку '__Уровень__' записывается ПустоеЗначение.
"
    }
    {"Item","AST","ЗаполнитьСтроку","ЗаполнитьСтроку","Синтаксис: ЗаполнитьСтроку(<?>, , , )","FillRow(<?>, , , )",
"@Синтаксис:
Синтаксис: ЗаполнитьСтроку([чНомерСтроки = 0], Источник, [чНомерСтрокиИсточника = 0], [чПоИменамКолонок = 0])
@Параметры:
чНомерСтроки - тип: Число. Номер строки, которую нужно заполнить. Если <= 0, то заполняется текущая строка. 
Источник - тип: ИндексированнаяТаблица, ТаблицаЗначений, Список значений. Источник данных для заполнения строки. 
чНомерСтрокиИсточника - тип: Число. Номер строки в таблице-источнике. По умолчанию берётся текущая строка в предопределённом индексе. Если Источник - СписокЗначений, то этот параметр игнорируется. 
чПоИменамКолонок - тип: Число. 0 - значения из источника копируются по номерам колонок; 1 - значения копируются по именам колонок. Если в приёмнике нет колонки с таким именем, то значение не копируется. Если Источник - СписокЗначений, то именами колонок считаются символьные представления значений.
заполняет строку таблицы из строки другой таблицы, или из списка значений.
"
    }
    {"Item","AST","ЗаполнитьКолонку (вариант 1)","ЗаполнитьКолонку (вариант 1)","ЗаполнитьКолонку(<?>, , , , )","FillColumn(<?>, , , , )",
"@Синтаксис:
ЗаполнитьКолонку([Индекс = ''''], Колонка, Источник, [ИндексИсточника = ''''], [КолонкаИсточника = ''''])
@Назначение:
заполняет колонку таблицы из колонки другой индексированной таблицы.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса, по которому упорядочиваются и фильтруются строки заполняемой таблицы. По умолчанию используется основной индекс. 
Колонка - тип: Строка, Число. Идентификатор или номер заполняемой колонки. 
Источник - тип: ИндексированнаяТаблица. Источник данных для заполнения колонки. 
ИндексИсточника - тип: Строка, Число. Идентификатор или номер индекса, по которому упорядочиваются и фильтруются строки таблицы-источника. По умолчанию используется основной индекс. 
КолонкаИсточника - тип: Строка, Число. Идентификатор или номер колонки, из которой будут браться значения. Если параметр не указан, то колонка-источник определяется параметром Колонка. 
"
    }
    {"Item","AST","ЗаполнитьКолонку (вариант 2)","ЗаполнитьКолонку (вариант 2)","ЗаполнитьКолонку(<?>, , , )","FillColumn(<?>, , ,)",
"@Синтаксис:
ЗаполнитьКолонку([Индекс = ''''], Колонка, Источник, [КолонкаИсточника = ''''])
@Назначение:
заполняет колонку таблицы из колонки другой таблицы (ТаблицаЗначений) или списка значений.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса, по которому упорядочиваются и фильтруются строки заполняемой таблицы. По умолчанию используется основной индекс. 
Колонка - тип: Строка, Число. Идентификатор или номер заполняемой колонки. 
Источник - тип: ТаблицаЗначений, СписокЗначений. Источник данных для заполнения колонки. 
КолонкаИсточника - номер или идентификатор колонки, из которой будут браться значения. Если параметр не указан, то колонка-источник определяется параметром Колонка. Для списка значений параметр игнорируется.
"
    }
    {"Item","AST","ЗаполнитьКолонку (вариант 3)","ЗаполнитьКолонку (вариант 3)","ЗаполнитьКолонку(<?>, ,)","FillColumn(<?>, ,)",
"@Синтаксис:
ЗаполнитьКолонку([Индекс = ''''], Колонка, Значение)
@Назначение:
заполняет колонку таблицы одним и тем же значением.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса, по которому упорядочиваются и фильтруются строки заполняемой таблицы. По умолчанию используется основной индекс. 
Колонка - тип: Строка, Число. Идентификатор или номер заполняемой колонки. 
Значение - тип: любой, кроме ИндексированнаяТаблица, ТаблицаЗначений, СписокЗначений. Значение, которым будет заполнена колонка.
"
    }
    {"Item","AST","Выгрузить","Выгрузить","Выгрузить(<?>, , , )","Unload(<?>, , , )",
"@Синтаксис:
Выгрузить(Приемник [, Индекс] [, Колонки = ''''] [, чТолькоУникальные = 0])
@Назначение:
выгружает текущую таблицу в другую таблицу, или в новую. Если таблица-приёмник существует, то она полностью очищается. Индексы при выгрузке не копируются. Выгрузка осуществляется с учётом индекса и фильтра.
@Параметры:
Приемник - тип: ИндексированнаяТаблица, ТаблицаЗначений, Документ, СписокЗначений, Неопределенный. Переменная, в которую будет выгружена таблица. Если это документ, то заполняется его табличная часть. Если тип Неопределенный, то создаётся таблица типа ИндексированнаяТаблица. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. 
Колонки - тип: Строка, Число. Список колонок через запятую или номер колонки для выгрузки. Если значение не задано или задана пустая строка, параметр игнорируется. 
чТолькоУникальные - тип: Число. Флаг выгрузки только уникальных значений. 
"
    }
    {"Item","AST","Загрузить","Загрузить","Загрузить(<?>, , )","Load(<?>, , )",
"@Синтаксис:
Загрузить(Источник, [Индекс = ''''], [Колонки = ''''])
@Параметры:
Источник - тип: ИндексированнаяТаблица, ТаблицаЗначений, Документ. Таблица, из которой будут загружены данные. Если тип - Документ, то будет загружена табличная часть документа. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса в таблице - источнике. По умолчанию используется основной индекс. Если параметр Источник имеет тип Документ, то Индекс интерпретируется как строка, содержащая список полей табличной части документа. Если Источник имеет тип ТаблицаЗначений, то этот параметр игнорируется. 
Колонки - тип: Строка, Число. Список колонок через запятую или номер колонки для загрузки в таблице - источнике. Определяет список колонкок, которые будут загружены в таблицу. Если значение не задано или задана пустая строка, параметр игнорируется. Если источник имеет тип Документ, этот параметр игнорируется (используйте параметр Индекс).
загружает данные из указанной таблицы, в соответствии с индексом. Перед загрузкой текущая таблица полностью очищается. Индексы не копируются.
"
    }
    {"Item","AST","ЗагрузитьЗапрос","ЗагрузитьЗапрос","ЗагрузитьЗапрос(<?>, , )","LoadQuery(<?>, , )",
"@Синтаксис:
ЗагрузитьЗапрос(Запрос, [чФлаг = 0], [чИтоги = 1])
@Назначение:
загружает данные из указанного запроса. Перед загрузкой текущая таблица полностью очищается.
@Параметры:
Запрос - тип: Запрос. Запрос, из которого будут загружены данные. 
чФлаг - тип: Число, Строка. 0 - значения групп и функций (по умолчанию); 1 - значения групп и функций, дополнительных переменных; 2 - значения упорядочиваний групп и функций; 3 - значения упорядочиваний групп и функций, дополнительных переменных; Строка - 'Товар(1), Товар(2), Товар, Склад, Приход, Расход', где Товар(1) - значение первого упорядочивания группировки 'Товар'. 
чИтоги - тип: Число. 0 - итоги по группировкам не выводить; 1 - итоги по группировкам выводить сверху (по умолчанию); 2 - итоги по группировкам выводить снизу; 3 - итоги по группировкам выводить сверху и снизу.
"
    }
    {"Item","AST","Объединить","Объединить","Объединить(<?>, , )","Merge(<?>, , )",
"@Синтаксис:
Объединить(ТЗ [, Индекс = ''''] [, Колонки = ''''])
@Назначение:
добавляет строки из таблицы - источника в текущую таблицу. Если в таблице - источнике есть колонки, которых нет в текущей, то они создаются. Объединени осуществляется с учётом индекса и фильтра таблицы - источника.
@Параметры:
ТЗ - тип: ИндексированнаяТаблица, ТаблицаЗначений. Таблица, из которой будут загружены данные. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса в таблице - источнике. По умолчанию используется основной индекс. Если ТЗ имеет тип ТаблицаЗначений, то этот параметр игнорируется. 
Колонки - тип: Строка, Число. Список колонок через запятую или номер колонки в таблице - источнике. Определяет список колонкок, которые будут участвовать в процессе объединения. Если значение не задано или задана пустая строка, параметр игнорируется.
"
    }
    {"Item","AST","Пересечение","Пересечение","Пересечение(<?>, , , )","Conjunction(<?>, , , )",
"@Синтаксис:
Пересечение(ТЗ2, ИндексТекущейТЗ, ИндексТЗ2 [, флДобавлятьСтрокиТЗ2 = 1])
@Параметры:
ТЗ2 - тип: ИндексированннаяТаблица. Таблица, с которой строится пересечение. 
ИндексТекущейТЗ - тип: Строка, Число. Имя или номер индекса в текущей таблицы. 
ИндексВторойТЗ - тип: Строка, Число. Имя или номер индекса в ТЗ2. 
флДобавлятьСтрокиТЗ2 - тип: Число. Флаг добавления строк ТЗ2 в результат. 
пересечение двух таблиц по ключевым полям. Результатом пересечения является таблица, в которой присутствуют строки текущей ТЗ, которые есть в ТЗ2, и строки ТЗ2, которые есть в текущей ТЗ (с учетом флДобавлятьСтрокиТЗ2). Совпадение строк определяется по индексам ИндексТекущейТЗ и ИндексТЗ2. Количество колонок в индексах должно быть одинаковым.
"
    }
    {"Item","AST","Разность","Разность","Разность(<?>, , , )","Difference(<?>, , , )",
"@Синтаксис:
Разность(ТЗ2, ИндексТекущейТЗ, ИндексТЗ2 [, флДобавлятьСтрокиТЗ2 = 1])
@Назначение:
разность двух таблиц по ключевым полям. Результатом является таблица, в которой присутствуют строки текущей ТЗ, которых нет в ТЗ2, и строки ТЗ2, которых нет в текущей ТЗ (с учетом флДобавлятьСтрокиТЗ2). Совпадение строк определяется по индексам ИндексТекущейТЗ и ИндексТЗ2. Количество колонок в индексах должно быть одинаковым.
@Параметры:
ТЗ2 - тип: ИндексированннаяТаблица. Таблица, с которой строится разность. 
ИндексТекущейТЗ - тип: Строка, Число. Имя или номер индекса в текущей таблицы. 
ИндексВторойТЗ - тип: Строка, Число. Имя или номер индекса в ТЗ2. 
флДобавлятьСтрокиТЗ2 - тип: Число. Флаг добавления строк ТЗ2 в результат.
"
    }
    {"Item","AST","Копия","Копия","Копия(<?>, )","Copy(<?>, )",
"@Синтаксис:
Копия([чКопироватьИндексы = 0], [чКопироватьДанные = 1])
@Назначение:
создаёт копию таблицы.
@Параметры:
чКопироватьИндексы - тип: Число. Если 1, то индексы и фильтры тоже будут скопированы. 
чКопироватьДанные - тип: Число. Если 1, то данные будут скопированы; если 0 - то копируется только структура.
"
    }
    {"Item","AST","ВФайл","ВФайл","ВФайл(<?>, , , )","SaveToFile(<?>, , , )",
"@Синтаксис:
ВФайл(стрИмяФайла, [чФормат = 1], [Индекс = ''''], [чСИменамиКолонок = 1])
@Назначение:
записывает таблицу в файл.
@Параметры:
стрИмяФайла - тип: Строка. Имя файла, в который нужно записать таблицу. Если файл уже существует, то он перезаписывается. 
чФормат - тип: Число. Формат файла. Может принимать следующие значения: 1 - запись значений во внутреннем формате; 2 - запись значений во внешнем формате; 3 - csv файл со значениями во внутреннем формате; 4 - csv файл со значениями во внешнем формате. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. Выгрузка в файл производится с учётом сортировки и фильтра (если есть) по указанному индексу. 
чСИменамиКолонок - тип: Число. 1 - в первую строку файла будут записаны имена колонок. Имеет смысл только для csv-файлов.
"
    }
    {"Item","AST","ИзФайла","ИзФайла","ИзФайла(<?>, , )","LoadFromFile(<?>, , )",
"@Синтаксис:
ИзФайла(стрИмяФайла, [чФормат = 1], [чСИменамиКолонок = 1])
@Назначение:
считывает таблицу из файла.
@Параметры:
стрИмяФайла - тип: Строка. Имя файла, из которого нужно считать таблицу. 
чФормат - тип: Число. Формат файла. Может принимать следующие значения: 1 - запись значений во внутреннем формате; 2 - запись значений во внешнем формате; 3 - csv файл со значениями во внутреннем формате; 4 - csv файл со значениями во внешнем формате. 
чСИменамиКолонок - тип: Число. 1 - в первой строке файла хранятся имена колонок. Имеет смысл только для csv-файлов. Если параметр = 0, то имена колонок образуются как __col__<НомерКолонки>. 
"
    }
    {"Item","AST","ВСтроку","ВСтроку","ВСтроку(<?>, )","SaveToString(<?>, )",
"@Синтаксис:
ВСтроку([чФормат = 0], [Индекс = ''''])
@Назначение:
Преобразует таблицу в строковое представление для сериализации. Полученная строка впоследствии может использоваться в методе ИзСтроки().
@Параметры:
чФормат - тип: Число. 1 - запись значений во внутреннем формате; 0 - запись значений во внешнем формате. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. Выгрузка в файл производится с учётом сортировки и фильтра (если есть) по указанному индексу. 

Возвращает: тип: Строка. Строковое представление таблицы.
"
    }
    {"Item","AST","ИзСтроки","ИзСтроки","ИзСтроки(<?>)","LoadFromString(<?>)",
"@Синтаксис:
ИзСтроки(стрПредставление)
@Назначение:
загружает таблицу из строкового представления.
@Параметры:
стрПредставление - тип: Строка. Строковое представление таблицы.
"
    }
    {"Item","AST","ВыбратьСтроку","ВыбратьСтроку","ВыбратьСтроку(<?>, , , )","ChooseLine(<?>, , , )",
"@Синтаксис:
ВыбратьСтроку([Строка], [стрЗаголовокОкна = ''''], [чТаймаут = 0], [Индекс = ''''])
@Назначение:
Открывает окно для интерактивного выбора строки в таблице значений. Метод предназначен в основном для отладки.
@Параметры:
Строка - тип: любой. Переменная, куда помещается значение - номер выбранной строки. При вызове метода здесь можно передавать значение начального номера строки. 
стрЗаголовокОкна - тип: Строка. Заголовок окна выбора. 
чТаймаут - тип: Число. Время ожидания системы (в секундах) на отклик пользователя. Если не задано, то время ожидания бесконечно. 
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. В окне выбора строки появятся с учётом сортировки и фильтра (если есть) по указанному индексу. 

Возвращает: тип: Число. 1 - если выбор произведен (нажата кнопка 'ОК'); 0 - если выбор не произведен (нажата кнопка 'ОТМЕНА').
"
    }
    {"Item","AST","Показать","Показать","Показать(<?>)","Show(<?>)",
"@Синтаксис:
Показать([Индекс = ''''])
@Назначение:
Открывает окно для интерактивного выбора строки в таблице значений. Метод предназначен в основном для отладки.
@Параметры:
Индекс - тип: Строка, Число. Идентификатор или номер индекса. По умолчанию используется основной индекс. В окне выбора строки появятся с учётом сортировки и фильтра (если есть) по указанному индексу. 

Возвращает: тип: Число. 1 - если выбор произведен (нажата кнопка 'ОК'); 0 - если выбор не произведен (нажата кнопка 'ОТМЕНА').
"
    }
   },
  },
 },
}