short CProcParser::m_Lexem2Token[iLexStates]=
{
	0,		//STATE_NONE,
	// Возврат
	name_1C,	//STATE_R_V,
	name_1C,	//STATE_R_VO,
	name_1C,	//STATE_R_VOZ,
	name_1C,	//STATE_R_VOZV,
	name_1C,	//STATE_R_VOZVR,
	name_1C,	//STATE_R_VOZVRA,
	// Далее
	name_1C,	//STATE_R_D,
	name_1C,	//STATE_R_DA,
	name_1C,	//STATE_R_DAL,
	name_1C,	//STATE_R_DALE,
	// Для
	name_1C,	//STATE_R_DL,
	name_1C,	//STATE_R_DLYA,
	// Если
	name_1C,	//STATE_R_E,
	name_1C,	//STATE_R_ES,
	name_1C,	//STATE_R_ESL,
	// Знач
	name_1C,	//STATE_R_Z,
	name_1C,	//STATE_R_ZN,
	name_1C,	//STATE_R_ZNA,
	// И
	name_1C,	//STATE_R_I,
	// Или
	name_1C,	//STATE_R_IL,
	// Иначе
	name_1C,	//STATE_R_IN,
	name_1C,	//STATE_R_INA,
	name_1C,	//STATE_R_INA4,
	name_1C,	//STATE_R_INA4E,
	// ИначеЕсли
	name_1C,	//STATE_R_INA4EE,
	name_1C,	//STATE_R_INA4EES,
	name_1C,	//STATE_R_INA4EESL,
	// Исключение
	name_1C,	//STATE_R_IS,
	name_1C,	//STATE_R_ISK,
	name_1C,	//STATE_R_ISKL,
	name_1C,	//STATE_R_ISKLU,
	name_1C,	//STATE_R_ISKLU4,
	name_1C,	//STATE_R_ISKLU4E,
	name_1C,	//STATE_R_ISKLU4EN,
	name_1C,	//STATE_R_ISKLU4ENI,
	// КонецЕсли
	name_1C,	//STATE_R_K,
	name_1C,	//STATE_R_KO,
	name_1C,	//STATE_R_KON,
	name_1C,	//STATE_R_KONE,
	name_1C,	//STATE_R_KONEC,
	name_1C,	//STATE_R_KONECE,
	name_1C,	//STATE_R_KONECES,
	name_1C,	//STATE_R_KONECESL,
	// КонецПопытки
	name_1C,	//STATE_R_KONECP,
	name_1C,	//STATE_R_KONECPO,
	name_1C,	//STATE_R_KONECPOP,
	name_1C,	//STATE_R_KONECPOPY,
	name_1C,	//STATE_R_KONECPOPYT,
	name_1C,	//STATE_R_KONECPOPYTK,
	// КонецПроцедуры
	name_1C,	//STATE_R_KONECPR,
	name_1C,	//STATE_R_KONECPRO,
	name_1C,	//STATE_R_KONECPROC,
	name_1C,	//STATE_R_KONECPROCE,
	name_1C,	//STATE_R_KONECPROCED,
	name_1C,	//STATE_R_KONECPROCEDU,
	name_1C,	//STATE_R_KONECPROCEDUR,
	// КонецФункции
	name_1C,	//STATE_R_KONECF,
	name_1C,	//STATE_R_KONECFU,
	name_1C,	//STATE_R_KONECFUN,
	name_1C,	//STATE_R_KONECFUNK,
	name_1C,	//STATE_R_KONECFUNKC,
	name_1C,	//STATE_R_KONECFUNKCI,
	// КонецЦикла
	name_1C,	//STATE_R_KONECC,
	name_1C,	//STATE_R_KONECCI,
	name_1C,	//STATE_R_KONECCIK,
	name_1C,	//STATE_R_KONECCIKL,
	// Не
	name_1C,	//STATE_R_N,
	// Перем
	name_1C,	//STATE_R_P,
	name_1C,	//STATE_R_PE,
	name_1C,	//STATE_R_PER,
	name_1C,	//STATE_R_PERE,
	// Перейти
	name_1C,	//STATE_R_PEREY,
	name_1C,	//STATE_R_PEREYT,
	// По
	name_1C,		//STATE_R_PO,
	// Пока
	name_1C,	//STATE_R_POK,
	// Попытка
	name_1C,	//STATE_R_POP,
	name_1C,	//STATE_R_POPY,
	name_1C,	//STATE_R_POPYT,
	name_1C,	//STATE_R_POPYTK,
	// Прервать
	name_1C,	//STATE_R_PR,
	name_1C,	//STATE_R_PRE,
	name_1C,	//STATE_R_PRER,
	name_1C,	//STATE_R_PRERV,
	name_1C,	//STATE_R_PRERVA,
	name_1C,	//STATE_R_PRERVAT,
	// Продолжить
	name_1C,	//STATE_R_PRO,
	name_1C,	//STATE_R_PROD,
	name_1C,	//STATE_R_PRODO,
	name_1C,	//STATE_R_PRODOL,
	name_1C,	//STATE_R_PRODOLZH,
	name_1C,	//STATE_R_PRODOLZHI,
	name_1C,	//STATE_R_PRODOLZHIT,
	// Процедура
	name_1C,	//STATE_R_PROC,
	name_1C,	//STATE_R_PROCE,
	name_1C,	//STATE_R_PROCED,
	name_1C,	//STATE_R_PROCEDU,
	name_1C,	//STATE_R_PROCEDUR,
	// Тогда
	name_1C,	//STATE_R_T,
	name_1C,	//STATE_R_TO,
	name_1C,	//STATE_R_TOG,
	name_1C,	//STATE_R_TOGD,
	// Функция
	name_1C,	//STATE_R_F,
	name_1C,	//STATE_R_FU,
	name_1C,	//STATE_R_FUN,
	name_1C,	//STATE_R_FUNK,
	name_1C,	//STATE_R_FUNKC,
	name_1C,	//STATE_R_FUNKCI,
	// Цикл
	name_1C,	//STATE_R_C,
	name_1C,	//STATE_R_CI,
	name_1C,	//STATE_R_CIK,
	// Экспорт
	name_1C,	//STATE_R_e,
	name_1C,	//STATE_R_EK,
	name_1C,	//STATE_R_EKS,
	name_1C,	//STATE_R_EKSP,
	name_1C,	//STATE_R_EKSPO,
	name_1C,	//STATE_R_EKSPOR,
	// And
	name_1C,	//STATE_A,
	name_1C,	//STATE_AN,
	// Break
	name_1C,	//STATE_B,
	name_1C,	//STATE_BR,
	name_1C,	//STATE_BRE,
	name_1C,	//STATE_BREA,
	// Continue
	name_1C,	//STATE_C,
	name_1C,	//STATE_CO,
	name_1C,	//STATE_CON,
	name_1C,	//STATE_CONT,
	name_1C,	//STATE_CONTI,
	name_1C,	//STATE_CONTIN,
	name_1C,	//STATE_CONTINU,
	// Do
	name_1C,	//STATE_D,
	// Else
	name_1C,	//STATE_E,
	name_1C,	//STATE_EL,
	name_1C,	//STATE_ELS,
	// Elsif
	name_1C,	//STATE_ELSI,
	// EndDo
	name_1C,	//STATE_EN,
	name_1C,	//STATE_END,
	name_1C,	//STATE_ENDD,
	// EndIf
	name_1C,	//STATE_ENDI,
	// EndProcedure
	name_1C,	//STATE_ENDP,
	name_1C,	//STATE_ENDPR,
	name_1C,	//STATE_ENDPRO,
	name_1C,	//STATE_ENDPROC,
	name_1C,	//STATE_ENDPROCE,
	name_1C,	//STATE_ENDPROCED,
	name_1C,	//STATE_ENDPROCEDU,
	name_1C,	//STATE_ENDPROCEDUR,
	// EndFunction
	name_1C,	//STATE_ENDF,
	name_1C,	//STATE_ENDFU,
	name_1C,	//STATE_ENDFUN,
	name_1C,	//STATE_ENDFUNC,
	name_1C,	//STATE_ENDFUNCT,
	name_1C,	//STATE_ENDFUNCTI,
	name_1C,	//STATE_ENDFUNCTIO,
	// EndTry
	name_1C,	//STATE_ENDT,
	name_1C,	//STATE_ENDTR,
	// except
	name_1C,	//STATE_EX,
	name_1C,	//STATE_EXC,
	name_1C,	//STATE_EXCE,
	name_1C,	//STATE_EXCEP,
	// export
	name_1C,	//STATE_EXP,
	name_1C,	//STATE_EXPO,
	name_1C,	//STATE_EXPOR,
	// for
	name_1C,	//STATE_F,
	name_1C,	//STATE_FO,
	name_1C,	//STATE_FOR,
	// forward
	name_1C,	//STATE_FORW,
	name_1C,	//STATE_FORWA,
	name_1C,	//STATE_FORWAR,
	// function
	name_1C,	//STATE_FU,
	name_1C,	//STATE_FUN,
	name_1C,	//STATE_FUNC,
	name_1C,	//STATE_FUNCT,
	name_1C,	//STATE_FUNCTI,
	name_1C,	//STATE_FUNCTIO,
	// goto
	name_1C,	//STATE_G,
	name_1C,	//STATE_GO,
	name_1C,	//STATE_GOT,
	// if
	name_1C,	//STATE_I,
	// not
	name_1C,	//STATE_N,
	name_1C,	//STATE_NO,
	// or
	name_1C,	//STATE_O,
	// procedure
	name_1C,	//STATE_P,
	name_1C,	//STATE_PR,
	name_1C,	//STATE_PRO,
	name_1C,	//STATE_PROC,
	name_1C,	//STATE_PROCE,
	name_1C,	//STATE_PROCED,
	name_1C,	//STATE_PROCEDU,
	name_1C,	//STATE_PROCEDUR,
	// return
	name_1C,	//STATE_R,
	name_1C,	//STATE_RE,
	name_1C,	//STATE_RET,
	name_1C,	//STATE_RETU,
	name_1C,	//STATE_RETUR,
	// then, to
	name_1C,	//STATE_T,
	name_1C,	//STATE_TH,
	name_1C,	//STATE_THE,
	// try
	name_1C,	//STATE_TR,
	// val,var
	name_1C,	//STATE_V,
	name_1C,	//STATE_VA,
	// while
	name_1C,	//STATE_W,
	name_1C,	//STATE_WH,
	name_1C,	//STATE_WHI,
	name_1C,	//STATE_WHIL,
	
	name_1C,	//STATE_R_S,
	name_1C,	//STATE_R_SO,
	name_1C,	//STATE_R_SOZ,
	name_1C,	//STATE_R_SOZD,
	name_1C,	//STATE_R_SOZDA,
	name_1C,	//STATE_R_SOZDAT,
	name_1C,	//STATE_R_SOZDATT,
	name_1C,	//STATE_R_SOZDATTO,
	name_1C,	//STATE_R_SOZDATTOB,
	name_1C,	//STATE_R_SOZDATTOBB,
	name_1C,	//STATE_R_SOZDATTOBBE,
	name_1C,	//STATE_R_SOZDATTOBBEC,

	name_1C,	//STATE_CR,
	name_1C,	//STATE_CRE,
	name_1C,	//STATE_CREA,
	name_1C,	//STATE_CREAT,
	name_1C,	//STATE_CREATE,
	name_1C,	//STATE_CREATEO,
	name_1C,	//STATE_CREATEOB,
	name_1C,	//STATE_CREATEOBJ,
	name_1C,	//STATE_CREATEOBJE,
	name_1C,	//STATE_CREATEOBJEC,
	name_1C,	//STATE_CREATEOBJECT,
	
	name_1C,	//STATE_R_KONT,
	name_1C,	//STATE_R_KONTE,
	name_1C,	//STATE_R_KONTEK,
	name_1C,	//STATE_R_KONTEKS,

	name_1C,	//STATE_CONTE,
	name_1C,	//STATE_CONTEX,

	// keywords
	name_1C,			//STATE_AND,
	name_1C,			//STATE_RETURN,
	forward_1C,	//STATE_FORWARD,
	name_1C,			//STATE_IF,
	val_1C,		//STATE_VAL,
	name_1C,			//STATE_OR,
	name_1C,			//STATE_ELSE,
	name_1C,			//STATE_ELSIF,
	name_1C,			//STATE_EXCEPT,
	name_1C,	//STATE_ENDIF,
	name_1C,	//STATE_ENDTRY,
	endproc_1C,	//STATE_ENDPROCEDURE,
	endproc_1C,	//STATE_ENDFUNCTION,
	name_1C,	//STATE_ENDDO,
	name_1C,	//STATE_NOT,
	var_1C,		//STATE_VAR,
	name_1C,	//STATE_GOTO,
	name_1C,		//STATE_TO,
	name_1C,	//STATE_WHILE,
	name_1C,		//STATE_TRY,
	name_1C,	//STATE_BREAK,
	name_1C,//STATE_CONTINUE,
	proc_1C,	//STATE_PROCEDURE,
	name_1C,	//STATE_THEN,
	proc_1C,	//STATE_FUNCTION,
	export_1C,	//STATE_EXPORT,
	name_1C,		//STATE_DO,
	name_1C,	//STATE_CONTEXT,

	name_1C,	//STATE_NAME,
	_cnst_1C,	//STATE_NUM,
	name_1C,			//STATE_DIV,
	-1,			//STATE_REMARK,
	_cnst_1C,	//STATE_QUOT1,
	_cnst_1C,	//STATE_QUOTE,
	_cnst_1C,	//STATE_DAT1,
	_cnst_1C,	//STATE_DATE,
	_lPar_1C,	//STATE_LPAR,
	_rPar_1C,	//STATE_RPAR,
	_comma_1C,	//STATE_COMMA,
	_semicolon_1C,//STATE_SEMICOLON,
	_equal_1C,	//STATE_EQUAL,
	_lBracket_1C,//STATE_LBRACKET,
	_rBracket_1C,//STATE_RBRACKET,
	_cnst_1C,	//STATE_PLUS,
	_cnst_1C,	//STATE_MINUS,
	name_1C,	//STATE_MULT,
	name_1C,//STATE_PERCENT,
	name_1C,	//STATE_TILDA,
	name_1C,	//STATE_LABEL,
	name_1C,	//STATE_COLON,
	name_1C,	//STATE_LESS,
	name_1C,	//STATE_GRAT,
	name_1C,	//STATE_PERIOD,
	name_1C,	//STATE_WHAT,
	_cnst_1C,	//STATE_NUMPERIOD,
	
		
};
