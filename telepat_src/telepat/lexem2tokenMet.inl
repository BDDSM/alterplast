#ifdef BUILD_RESOURCE
int CMethodParser::m_Lexem2Token[STATE_LAST]=
{
	0,		//STATE_NONE,
	// Возврат
	_zname_1C,	//STATE_R_V,
	_zname_1C,	//STATE_R_VO,
	_zname_1C,	//STATE_R_VOZ,
	_zname_1C,	//STATE_R_VOZV,
	_zname_1C,	//STATE_R_VOZVR,
	_zname_1C,	//STATE_R_VOZVRA,
	// Далее
	_zname_1C,	//STATE_R_D,
	_zname_1C,	//STATE_R_DA,
	_zname_1C,	//STATE_R_DAL,
	_zname_1C,	//STATE_R_DALE,
	// Для
	_zname_1C,	//STATE_R_DL,
	for_1C,		//STATE_R_DLYA,
	// Если
	_zname_1C,	//STATE_R_E,
	_zname_1C,	//STATE_R_ES,
	_zname_1C,	//STATE_R_ESL,
	// Знач
	_zname_1C,	//STATE_R_Z,
	_zname_1C,	//STATE_R_ZN,
	_zname_1C,	//STATE_R_ZNA,
	// И
	and_1C,		//STATE_R_I,
	// Или
	_zname_1C,	//STATE_R_IL,
	// Иначе
	_zname_1C,	//STATE_R_IN,
	_zname_1C,	//STATE_R_INA,
	_zname_1C,	//STATE_R_INA4,
	else_1C,	//STATE_R_INA4E,
	// ИначеЕсли
	_zname_1C,	//STATE_R_INA4EE,
	_zname_1C,	//STATE_R_INA4EES,
	_zname_1C,	//STATE_R_INA4EESL,
	// Исключение
	_zname_1C,	//STATE_R_IS,
	_zname_1C,	//STATE_R_ISK,
	_zname_1C,	//STATE_R_ISKL,
	_zname_1C,	//STATE_R_ISKLU,
	_zname_1C,	//STATE_R_ISKLU4,
	_zname_1C,	//STATE_R_ISKLU4E,
	_zname_1C,	//STATE_R_ISKLU4EN,
	_zname_1C,	//STATE_R_ISKLU4ENI,
	// КонецЕсли
	_zname_1C,	//STATE_R_K,
	_zname_1C,	//STATE_R_KO,
	_zname_1C,	//STATE_R_KON,
	_zname_1C,	//STATE_R_KONE,
	_zname_1C,	//STATE_R_KONEC,
	_zname_1C,	//STATE_R_KONECE,
	_zname_1C,	//STATE_R_KONECES,
	_zname_1C,	//STATE_R_KONECESL,
	// КонецПопытки
	_zname_1C,	//STATE_R_KONECP,
	_zname_1C,	//STATE_R_KONECPO,
	_zname_1C,	//STATE_R_KONECPOP,
	_zname_1C,	//STATE_R_KONECPOPY,
	_zname_1C,	//STATE_R_KONECPOPYT,
	_zname_1C,	//STATE_R_KONECPOPYTK,
	// КонецПроцедуры
	_zname_1C,	//STATE_R_KONECPR,
	_zname_1C,	//STATE_R_KONECPRO,
	_zname_1C,	//STATE_R_KONECPROC,
	_zname_1C,	//STATE_R_KONECPROCE,
	_zname_1C,	//STATE_R_KONECPROCED,
	_zname_1C,	//STATE_R_KONECPROCEDU,
	_zname_1C,	//STATE_R_KONECPROCEDUR,
	// КонецФункции
	_zname_1C,	//STATE_R_KONECF,
	_zname_1C,	//STATE_R_KONECFU,
	_zname_1C,	//STATE_R_KONECFUN,
	_zname_1C,	//STATE_R_KONECFUNK,
	_zname_1C,	//STATE_R_KONECFUNKC,
	_zname_1C,	//STATE_R_KONECFUNKCI,
	// КонецЦикла
	_zname_1C,	//STATE_R_KONECC,
	_zname_1C,	//STATE_R_KONECCI,
	_zname_1C,	//STATE_R_KONECCIK,
	_zname_1C,	//STATE_R_KONECCIKL,
	// Не
	_zname_1C,	//STATE_R_N,
	// Перем
	_zname_1C,	//STATE_R_P,
	_zname_1C,	//STATE_R_PE,
	_zname_1C,	//STATE_R_PER,
	_zname_1C,	//STATE_R_PERE,
	// Перейти
	_zname_1C,	//STATE_R_PEREY,
	_zname_1C,	//STATE_R_PEREYT,
	// По
	to_1C,		//STATE_R_PO,
	// Пока
	_zname_1C,	//STATE_R_POK,
	// Попытка
	_zname_1C,	//STATE_R_POP,
	_zname_1C,	//STATE_R_POPY,
	_zname_1C,	//STATE_R_POPYT,
	_zname_1C,	//STATE_R_POPYTK,
	// Прервать
	_zname_1C,	//STATE_R_PR,
	_zname_1C,	//STATE_R_PRE,
	_zname_1C,	//STATE_R_PRER,
	_zname_1C,	//STATE_R_PRERV,
	_zname_1C,	//STATE_R_PRERVA,
	_zname_1C,	//STATE_R_PRERVAT,
	// Продолжить
	_zname_1C,	//STATE_R_PRO,
	_zname_1C,	//STATE_R_PROD,
	_zname_1C,	//STATE_R_PRODO,
	_zname_1C,	//STATE_R_PRODOL,
	_zname_1C,	//STATE_R_PRODOLZH,
	_zname_1C,	//STATE_R_PRODOLZHI,
	_zname_1C,	//STATE_R_PRODOLZHIT,
	// Процедура
	_zname_1C,	//STATE_R_PROC,
	_zname_1C,	//STATE_R_PROCE,
	_zname_1C,	//STATE_R_PROCED,
	_zname_1C,	//STATE_R_PROCEDU,
	_zname_1C,	//STATE_R_PROCEDUR,
	// Тогда
	_zname_1C,	//STATE_R_T,
	_zname_1C,	//STATE_R_TO,
	_zname_1C,	//STATE_R_TOG,
	_zname_1C,	//STATE_R_TOGD,
	// Функция
	_zname_1C,	//STATE_R_F,
	_zname_1C,	//STATE_R_FU,
	_zname_1C,	//STATE_R_FUN,
	_zname_1C,	//STATE_R_FUNK,
	_zname_1C,	//STATE_R_FUNKC,
	_zname_1C,	//STATE_R_FUNKCI,
	// Цикл
	_zname_1C,	//STATE_R_C,
	_zname_1C,	//STATE_R_CI,
	_zname_1C,	//STATE_R_CIK,
	// Экспорт
	_zname_1C,	//STATE_R_e,
	_zname_1C,	//STATE_R_EK,
	_zname_1C,	//STATE_R_EKS,
	_zname_1C,	//STATE_R_EKSP,
	_zname_1C,	//STATE_R_EKSPO,
	_zname_1C,	//STATE_R_EKSPOR,
	// And
	_zname_1C,	//STATE_A,
	_zname_1C,	//STATE_AN,
	// Break
	_zname_1C,	//STATE_B,
	_zname_1C,	//STATE_BR,
	_zname_1C,	//STATE_BRE,
	_zname_1C,	//STATE_BREA,
	// Continue
	_zname_1C,	//STATE_C,
	_zname_1C,	//STATE_CO,
	_zname_1C,	//STATE_CON,
	_zname_1C,	//STATE_CONT,
	_zname_1C,	//STATE_CONTI,
	_zname_1C,	//STATE_CONTIN,
	_zname_1C,	//STATE_CONTINU,
	// Do
	_zname_1C,	//STATE_D,
	// Else
	_zname_1C,	//STATE_E,
	_zname_1C,	//STATE_EL,
	_zname_1C,	//STATE_ELS,
	// Elsif
	_zname_1C,	//STATE_ELSI,
	// EndDo
	_zname_1C,	//STATE_EN,
	_zname_1C,	//STATE_END,
	_zname_1C,	//STATE_ENDD,
	// EndIf
	_zname_1C,	//STATE_ENDI,
	// EndProcedure
	_zname_1C,	//STATE_ENDP,
	_zname_1C,	//STATE_ENDPR,
	_zname_1C,	//STATE_ENDPRO,
	_zname_1C,	//STATE_ENDPROC,
	_zname_1C,	//STATE_ENDPROCE,
	_zname_1C,	//STATE_ENDPROCED,
	_zname_1C,	//STATE_ENDPROCEDU,
	_zname_1C,	//STATE_ENDPROCEDUR,
	// EndFunction
	_zname_1C,	//STATE_ENDF,
	_zname_1C,	//STATE_ENDFU,
	_zname_1C,	//STATE_ENDFUN,
	_zname_1C,	//STATE_ENDFUNC,
	_zname_1C,	//STATE_ENDFUNCT,
	_zname_1C,	//STATE_ENDFUNCTI,
	_zname_1C,	//STATE_ENDFUNCTIO,
	// EndTry
	_zname_1C,	//STATE_ENDT,
	_zname_1C,	//STATE_ENDTR,
	// except
	_zname_1C,	//STATE_EX,
	_zname_1C,	//STATE_EXC,
	_zname_1C,	//STATE_EXCE,
	_zname_1C,	//STATE_EXCEP,
	// export
	_zname_1C,	//STATE_EXP,
	_zname_1C,	//STATE_EXPO,
	_zname_1C,	//STATE_EXPOR,
	// for
	_zname_1C,	//STATE_F,
	_zname_1C,	//STATE_FO,
	for_1C,		//STATE_FOR,
	// forward
	_zname_1C,	//STATE_FORW,
	_zname_1C,	//STATE_FORWA,
	_zname_1C,	//STATE_FORWAR,
	// function
	_zname_1C,	//STATE_FU,
	_zname_1C,	//STATE_FUN,
	_zname_1C,	//STATE_FUNC,
	_zname_1C,	//STATE_FUNCT,
	_zname_1C,	//STATE_FUNCTI,
	_zname_1C,	//STATE_FUNCTIO,
	// goto
	_zname_1C,	//STATE_G,
	_zname_1C,	//STATE_GO,
	_zname_1C,	//STATE_GOT,
	// if
	_zname_1C,	//STATE_I,
	// not
	_zname_1C,	//STATE_N,
	_zname_1C,	//STATE_NO,
	// or
	_zname_1C,	//STATE_O,
	// procedure
	_zname_1C,	//STATE_P,
	_zname_1C,	//STATE_PR,
	_zname_1C,	//STATE_PRO,
	_zname_1C,	//STATE_PROC,
	_zname_1C,	//STATE_PROCE,
	_zname_1C,	//STATE_PROCED,
	_zname_1C,	//STATE_PROCEDU,
	_zname_1C,	//STATE_PROCEDUR,
	// return
	_zname_1C,	//STATE_R,
	_zname_1C,	//STATE_RE,
	_zname_1C,	//STATE_RET,
	_zname_1C,	//STATE_RETU,
	_zname_1C,	//STATE_RETUR,
	// then, to
	_zname_1C,	//STATE_T,
	_zname_1C,	//STATE_TH,
	_zname_1C,	//STATE_THE,
	// try
	_zname_1C,	//STATE_TR,
	// val,var
	_zname_1C,	//STATE_V,
	_zname_1C,	//STATE_VA,
	// while
	_zname_1C,	//STATE_W,
	_zname_1C,	//STATE_WH,
	_zname_1C,	//STATE_WHI,
	_zname_1C,	//STATE_WHIL,
	
	_zname_1C,	//STATE_R_S,
	_zname_1C,	//STATE_R_SO,
	_zname_1C,	//STATE_R_SOZ,
	_zname_1C,	//STATE_R_SOZD,
	_zname_1C,	//STATE_R_SOZDA,
	_zname_1C,	//STATE_R_SOZDAT,
	_zname_1C,	//STATE_R_SOZDATT,
	_zname_1C,	//STATE_R_SOZDATTO,
	_zname_1C,	//STATE_R_SOZDATTOB,
	_zname_1C,	//STATE_R_SOZDATTOBB,
	_zname_1C,	//STATE_R_SOZDATTOBBE,
	_zname_1C,	//STATE_R_SOZDATTOBBEC,

	_zname_1C,	//STATE_CR,
	_zname_1C,	//STATE_CRE,
	_zname_1C,	//STATE_CREA,
	_zname_1C,	//STATE_CREAT,
	_zname_1C,	//STATE_CREATE,
	_zname_1C,	//STATE_CREATEO,
	_zname_1C,	//STATE_CREATEOB,
	_zname_1C,	//STATE_CREATEOBJ,
	_zname_1C,	//STATE_CREATEOBJE,
	_zname_1C,	//STATE_CREATEOBJEC,
	_crob_1C,	//STATE_CREATEOBJECT,

	_zname_1C,	//STATE_R_KONT,
	_zname_1C,	//STATE_R_KONTE,
	_zname_1C,	//STATE_R_KONTEK,
	_zname_1C,	//STATE_R_KONTEKS,

	_zname_1C,	//STATE_CONTE,
	_zname_1C,	//STATE_CONTEX,
	// keywords
	and_1C,		//STATE_AND,
	return_1C,	//STATE_RETURN,
	forward_1C,	//STATE_FORWARD,
	if_1C,		//STATE_IF,
	val_1C,		//STATE_VAL,
	or_1C,		//STATE_OR,
	else_1C,	//STATE_ELSE,
	elsif_1C,	//STATE_ELSIF,
	except_1C,	//STATE_EXCEPT,
	endif_1C,	//STATE_ENDIF,
	endtry_1C,	//STATE_ENDTRY,
	endproc_1C,	//STATE_ENDPROCEDURE,
	endfunc_1C,	//STATE_ENDFUNCTION,
	enddo_1C,	//STATE_ENDDO,
	not_1C,		//STATE_NOT,
	var_1C,		//STATE_VAR,
	goto_1C,			//STATE_GOTO,
	to_1C,		//STATE_TO,
	while_1C,	//STATE_WHILE,
	try_1C,		//STATE_TRY,
	break_1C,	//STATE_BREAK,
	continue_1C,//STATE_CONTINUE,
	proc_1C,	//STATE_PROCEDURE,
	then_1C,	//STATE_THEN,
	func_1C,	//STATE_FUNCTION,
	export_1C,	//STATE_EXPORT,
	do_1C,		//STATE_DO,
	context_1C,	//STATE_CONTEXT,

	_zname_1C,	//STATE_NAME,
	_number_1C,	//STATE_NUM,
	_div_1C,	//STATE_DIV,
	-1,			//STATE_REMARK,
	_literal_1C,//STATE_QUOT1,
	_literal_1C,//STATE_QUOTE,
	_date_1C,	//STATE_DAT1,
	_date_1C,	//STATE_DATE,
	_lPar_1C,	//STATE_LPAR,
	_rPar_1C,	//STATE_RPAR,
	_comma_1C,	//STATE_COMMA,
	_semicolon_1C,//STATE_SEMICOLON,
	_equal_1C,	//STATE_EQUAL,
	_lBracket_1C,//STATE_LBRACKET,
	_rBracket_1C,//STATE_RBRACKET,
	_plus_1C,	//STATE_PLUS,
	_minus_1C,	//STATE_MINUS,
	_mult_1C,	//STATE_MULT,
	_percent_1C,//STATE_PERCENT,
	_label_1C,	//STATE_TILDA,
	_label_1C,	//STATE_LABEL,
	_colon_1C,	//STATE_COLON,
	_less_1C,	//STATE_LESS,
	_grat_1C,	//STATE_GRAT,
	_period_1C,	//STATE_PERIOD,
	_what_1C,	//STATE_WHAT,
	_number_1C,	//STATE_NUMPERIOD,
	0,			//STATE_EOF
};

int CMethodParser::m_Lexem2TokenFast[STATE_LAST]=
{
	0,		//STATE_NONE,
	// Возврат
	-1,	//STATE_R_V,
	-1,	//STATE_R_VO,
	-1,	//STATE_R_VOZ,
	-1,	//STATE_R_VOZV,
	-1,	//STATE_R_VOZVR,
	-1,	//STATE_R_VOZVRA,
	// Далее
	-1,	//STATE_R_D,
	-1,	//STATE_R_DA,
	-1,	//STATE_R_DAL,
	-1,	//STATE_R_DALE,
	// Для
	-1,	//STATE_R_DL,
	-1,	//STATE_R_DLYA,
	// Если
	-1,	//STATE_R_E,
	-1,	//STATE_R_ES,
	-1,	//STATE_R_ESL,
	// Знач
	-1,	//STATE_R_Z,
	-1,	//STATE_R_ZN,
	-1,	//STATE_R_ZNA,
	// И
	-1,		//STATE_R_I,
	// Или
	-1,	//STATE_R_IL,
	// Иначе
	-1,	//STATE_R_IN,
	-1,	//STATE_R_INA,
	-1,	//STATE_R_INA4,
	-1,	//STATE_R_INA4E,
	// ИначеЕсли
	-1,	//STATE_R_INA4EE,
	-1,	//STATE_R_INA4EES,
	-1,	//STATE_R_INA4EESL,
	// Исключение
	-1,	//STATE_R_IS,
	-1,	//STATE_R_ISK,
	-1,	//STATE_R_ISKL,
	-1,	//STATE_R_ISKLU,
	-1,	//STATE_R_ISKLU4,
	-1,	//STATE_R_ISKLU4E,
	-1,	//STATE_R_ISKLU4EN,
	-1,	//STATE_R_ISKLU4ENI,
	// КонецЕсли
	-1,	//STATE_R_K,
	-1,	//STATE_R_KO,
	-1,	//STATE_R_KON,
	-1,	//STATE_R_KONE,
	-1,	//STATE_R_KONEC,
	-1,	//STATE_R_KONECE,
	-1,	//STATE_R_KONECES,
	-1,	//STATE_R_KONECESL,
	// КонецПопытки
	-1,	//STATE_R_KONECP,
	-1,	//STATE_R_KONECPO,
	-1,	//STATE_R_KONECPOP,
	-1,	//STATE_R_KONECPOPY,
	-1,	//STATE_R_KONECPOPYT,
	-1,	//STATE_R_KONECPOPYTK,
	// КонецПроцедуры
	-1,	//STATE_R_KONECPR,
	-1,	//STATE_R_KONECPRO,
	-1,	//STATE_R_KONECPROC,
	-1,	//STATE_R_KONECPROCE,
	-1,	//STATE_R_KONECPROCED,
	-1,	//STATE_R_KONECPROCEDU,
	-1,	//STATE_R_KONECPROCEDUR,
	// КонецФункции
	-1,	//STATE_R_KONECF,
	-1,	//STATE_R_KONECFU,
	-1,	//STATE_R_KONECFUN,
	-1,	//STATE_R_KONECFUNK,
	-1,	//STATE_R_KONECFUNKC,
	-1,	//STATE_R_KONECFUNKCI,
	// КонецЦикла
	-1,	//STATE_R_KONECC,
	-1,	//STATE_R_KONECCI,
	-1,	//STATE_R_KONECCIK,
	-1,	//STATE_R_KONECCIKL,
	// Не
	-1,	//STATE_R_N,
	// Перем
	-1,	//STATE_R_P,
	-1,	//STATE_R_PE,
	-1,	//STATE_R_PER,
	-1,	//STATE_R_PERE,
	// Перейти
	-1,	//STATE_R_PEREY,
	-1,	//STATE_R_PEREYT,
	// По
	-1,		//STATE_R_PO,
	// Пока
	-1,	//STATE_R_POK,
	// Попытка
	-1,	//STATE_R_POP,
	-1,	//STATE_R_POPY,
	-1,	//STATE_R_POPYT,
	-1,	//STATE_R_POPYTK,
	// Прервать
	-1,	//STATE_R_PR,
	-1,	//STATE_R_PRE,
	-1,	//STATE_R_PRER,
	-1,	//STATE_R_PRERV,
	-1,	//STATE_R_PRERVA,
	-1,	//STATE_R_PRERVAT,
	// Продолжить
	-1,	//STATE_R_PRO,
	-1,	//STATE_R_PROD,
	-1,	//STATE_R_PRODO,
	-1,	//STATE_R_PRODOL,
	-1,	//STATE_R_PRODOLZH,
	-1,	//STATE_R_PRODOLZHI,
	-1,	//STATE_R_PRODOLZHIT,
	// Процедура
	-1,	//STATE_R_PROC,
	-1,	//STATE_R_PROCE,
	-1,	//STATE_R_PROCED,
	-1,	//STATE_R_PROCEDU,
	-1,	//STATE_R_PROCEDUR,
	// Тогда
	-1,	//STATE_R_T,
	-1,	//STATE_R_TO,
	-1,	//STATE_R_TOG,
	-1,	//STATE_R_TOGD,
	// Функция
	-1,	//STATE_R_F,
	-1,	//STATE_R_FU,
	-1,	//STATE_R_FUN,
	-1,	//STATE_R_FUNK,
	-1,	//STATE_R_FUNKC,
	-1,	//STATE_R_FUNKCI,
	// Цикл
	-1,	//STATE_R_C,
	-1,	//STATE_R_CI,
	-1,	//STATE_R_CIK,
	// Экспорт
	-1,	//STATE_R_e,
	-1,	//STATE_R_EK,
	-1,	//STATE_R_EKS,
	-1,	//STATE_R_EKSP,
	-1,	//STATE_R_EKSPO,
	-1,	//STATE_R_EKSPOR,
	// And
	-1,	//STATE_A,
	-1,	//STATE_AN,
	// Break
	-1,	//STATE_B,
	-1,	//STATE_BR,
	-1,	//STATE_BRE,
	-1,	//STATE_BREA,
	// Continue
	-1,	//STATE_C,
	-1,	//STATE_CO,
	-1,	//STATE_CON,
	-1,	//STATE_CONT,
	-1,	//STATE_CONTI,
	-1,	//STATE_CONTIN,
	-1,	//STATE_CONTINU,
	// Do
	-1,	//STATE_D,
	// Else
	-1,	//STATE_E,
	-1,	//STATE_EL,
	-1,	//STATE_ELS,
	// Elsif
	-1,	//STATE_ELSI,
	// EndDo
	-1,	//STATE_EN,
	-1,	//STATE_END,
	-1,	//STATE_ENDD,
	// EndIf
	-1,	//STATE_ENDI,
	// EndProcedure
	-1,	//STATE_ENDP,
	-1,	//STATE_ENDPR,
	-1,	//STATE_ENDPRO,
	-1,	//STATE_ENDPROC,
	-1,	//STATE_ENDPROCE,
	-1,	//STATE_ENDPROCED,
	-1,	//STATE_ENDPROCEDU,
	-1,	//STATE_ENDPROCEDUR,
	// EndFunction
	-1,	//STATE_ENDF,
	-1,	//STATE_ENDFU,
	-1,	//STATE_ENDFUN,
	-1,	//STATE_ENDFUNC,
	-1,	//STATE_ENDFUNCT,
	-1,	//STATE_ENDFUNCTI,
	-1,	//STATE_ENDFUNCTIO,
	// EndTry
	-1,	//STATE_ENDT,
	-1,	//STATE_ENDTR,
	// except
	-1,	//STATE_EX,
	-1,	//STATE_EXC,
	-1,	//STATE_EXCE,
	-1,	//STATE_EXCEP,
	// export
	-1,	//STATE_EXP,
	-1,	//STATE_EXPO,
	-1,	//STATE_EXPOR,
	// for
	-1,	//STATE_F,
	-1,	//STATE_FO,
	-1,	//STATE_FOR,
	// forward
	-1,	//STATE_FORW,
	-1,	//STATE_FORWA,
	-1,	//STATE_FORWAR,
	// function
	-1,	//STATE_FU,
	-1,	//STATE_FUN,
	-1,	//STATE_FUNC,
	-1,	//STATE_FUNCT,
	-1,	//STATE_FUNCTI,
	-1,	//STATE_FUNCTIO,
	// goto
	-1,	//STATE_G,
	-1,	//STATE_GO,
	-1,	//STATE_GOT,
	// if
	-1,	//STATE_I,
	// not
	-1,	//STATE_N,
	-1,	//STATE_NO,
	// or
	-1,	//STATE_O,
	// procedure
	-1,	//STATE_P,
	-1,	//STATE_PR,
	-1,	//STATE_PRO,
	-1,	//STATE_PROC,
	-1,	//STATE_PROCE,
	-1,	//STATE_PROCED,
	-1,	//STATE_PROCEDU,
	-1,	//STATE_PROCEDUR,
	// return
	-1,	//STATE_R,
	-1,	//STATE_RE,
	-1,	//STATE_RET,
	-1,	//STATE_RETU,
	-1,	//STATE_RETUR,
	// then, to
	-1,	//STATE_T,
	-1,	//STATE_TH,
	-1,	//STATE_THE,
	// try
	-1,	//STATE_TR,
	// val,var
	-1,	//STATE_V,
	-1,	//STATE_VA,
	// while
	-1,	//STATE_W,
	-1,	//STATE_WH,
	-1,	//STATE_WHI,
	-1,	//STATE_WHIL,
	
	-1,	//STATE_R_S,
	-1,	//STATE_R_SO,
	-1,	//STATE_R_SOZ,
	-1,	//STATE_R_SOZD,
	-1,	//STATE_R_SOZDA,
	-1,	//STATE_R_SOZDAT,
	-1,	//STATE_R_SOZDATT,
	-1,	//STATE_R_SOZDATTO,
	-1,	//STATE_R_SOZDATTOB,
	-1,	//STATE_R_SOZDATTOBB,
	-1,	//STATE_R_SOZDATTOBBE,
	-1,	//STATE_R_SOZDATTOBBEC,

	-1,	//STATE_CR,
	-1,	//STATE_CRE,
	-1,	//STATE_CREA,
	-1,	//STATE_CREAT,
	-1,	//STATE_CREATE,
	-1,	//STATE_CREATEO,
	-1,	//STATE_CREATEOB,
	-1,	//STATE_CREATEOBJ,
	-1,	//STATE_CREATEOBJE,
	-1,	//STATE_CREATEOBJEC,
	-1,	//STATE_CREATEOBJECT,

	-1,	//STATE_R_KONT,
	-1,	//STATE_R_KONTE,
	-1,	//STATE_R_KONTEK,
	-1,	//STATE_R_KONTEKS,

	-1,	//STATE_CONTE,
	-1,	//STATE_CONTEX,
	// keywords
	-1,		//STATE_AND,
	-1,	//STATE_RETURN,
	-1,	//STATE_FORWARD,
	-1,		//STATE_IF,
	-1,		//STATE_VAL,
	-1,		//STATE_OR,
	-1,	//STATE_ELSE,
	-1,	//STATE_ELSIF,
	-1,	//STATE_EXCEPT,
	-1,	//STATE_ENDIF,
	-1,	//STATE_ENDTRY,
	endproc_1C,	//STATE_ENDPROCEDURE,
	endfunc_1C,	//STATE_ENDFUNCTION,
	-1,	//STATE_ENDDO,
	-1,		//STATE_NOT,
	-1,		//STATE_VAR,
	-1,			//STATE_GOTO,
	-1,		//STATE_TO,
	-1,	//STATE_WHILE,
	-1,		//STATE_TRY,
	-1,			//STATE_BREAK,
	-1,			//STATE_CONTINUE,
	proc_1C,	//STATE_PROCEDURE,
	-1,	//STATE_THEN,
	func_1C,	//STATE_FUNCTION,
	-1,	//STATE_EXPORT,
	-1,		//STATE_DO,
	-1,	//STATE_CONTEXT,

	-1,	//STATE_NAME,
	-1,	//STATE_NUM,
	-1,	//STATE_DIV,
	-1,			//STATE_REMARK,
	-1,//STATE_QUOT1,
	-1,//STATE_QUOTE,
	-1,	//STATE_DAT1,
	-1,	//STATE_DATE,
	-1,	//STATE_LPAR,
	-1,	//STATE_RPAR,
	-1,	//STATE_COMMA,
	-1,//STATE_SEMICOLON,
	-1,	//STATE_EQUAL,
	-1,//STATE_LBRACKET,
	-1,//STATE_RBRACKET,
	-1,	//STATE_PLUS,
	-1,	//STATE_MINUS,
	-1,	//STATE_MULT,
	-1,//STATE_PERCENT,
	-1,			//STATE_TILDA,
	-1,			//STATE_LABEL,
	-1,			//STATE_COLON,
	-1,	//STATE_LESS,
	-1,	//STATE_GRAT,
	-1,	//STATE_PERIOD,
	-1,	//STATE_WHAT,
	-1,	//STATE_NUMPERIOD,
	0,			//STATE_EOF
};

#else
int CMethodParser::m_Lexem2Token[STATE_LAST];
int CMethodParser::m_Lexem2TokenFast[STATE_LAST];
#endif
