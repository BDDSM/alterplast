<?xml version="1.0" encoding="windows-1251" ?>
<!DOCTYPE Types [
<!ELEMENT Types (type*)>
<!ELEMENT type (attribs*,methods*,handlers*)>
	<!ATTLIST type 
		name NMTOKEN #REQUIRED
		alias CDATA #IMPLIED
		base CDATA #IMPLIED
		creatable CDATA #IMPLIED
		components CDATA #IMPLIED
		abstract CDATA #IMPLIED
	>
<!ELEMENT attribs (attrib+)>
<!ELEMENT attrib (#PCDATA)*>
	<!ATTLIST attrib
		name 	CDATA #REQUIRED
		alias 	CDATA 	#IMPLIED
		type 	CDATA 	#IMPLIED
		InExprOnly CDATA 	#IMPLIED
		components CDATA #IMPLIED
	>
<!ELEMENT methods (method+)>
<!ELEMENT method (#PCDATA|params|return)*>
	<!ATTLIST method
		name 	CDATA	#REQUIRED
		alias 	CDATA 	#IMPLIED
		components CDATA #IMPLIED
	>
<!ELEMENT params (param+)>
<!ELEMENT param (#PCDATA)>
	<!ATTLIST param
		name 	CDATA	#REQUIRED
		type	CDATA	#IMPLIED
		default	CDATA	#IMPLIED
	>
<!ELEMENT return (#PCDATA)>
	<!ATTLIST return
		type	CDATA	#IMPLIED
		InExprOnly CDATA 	#IMPLIED
	>
<!ELEMENT handlers (method+)>
]>
<!--
Требуется:
1. Проставить где возможно типы атрибутов, параметров, возвращаемых значений.
2. Для необязательных параметров проставить значение по умолчанию default=.
3. Для обязательных параметров УДАЛИТЬ атрибут default=
4. Для процедур УДАЛИТЬ тэг <return></return>
5. Проверить, везде ли правильно проставлены параметры, нет ли лишних или недостающих.
6. Сгруппировать отдельно методы, применяемые только для объектов, созданных СоздатьОбъект.
-->
<Types>
	<!--Базовые типы данных
	<type name="Number" alias="Число">
		Число
	</type>
	<type name="Date" alias="Дата">
		Дата - будет выпадать список функций, возвращающих дату, и стандартный 1С контрол - выбор даты
	</type>
	<type name="String" alias="Строка">
		Строка
	</type>
	<type name="FileName">
		путь/имя файла	- будет выпадать список функций, возвращающих путь имя и диалог открытия файла
	</type>
	<type name="FormatString">
		Форматная строка - возможно, будет выпадать конструктор форматной строки
	</type>
	<type name="RefSort">
		Поле справочника с признаком сортировка - будет выпадать
		список реквизитов справочника с признаком сортировка,
		если тип справочника не удасться определелить, выпадет список
		таких реквизитов для всех справочников.
	</type>
	<type name="RefSel">
		Поле справочника с признаком отбор - аналогично
	</type>
	<type name="DocTotal">
		Поле документа с признаком Итог по колонке
	</type>
	<type name="DocSel">
		Вид отбора документов - будет падать список возможных отборов доков.
	</type>
	<type name="RegFigures">
		Измерения регистра
	</type>
	<type name="RegResource">
		Ресурсы регистра
	</type>
	<type name="RegAttrib">
		Реквизиты регистра
	</type>
	Возможно, ченить еще...
	Допускается через запятую указывать несколько типов.
	Например,
	<param name="Идентиф" type="RegFigures,RegAttrib">идентификатор измерения или реквизита</param>
	будет выпадать список измерений и реквизитов регистра.
	-->
	<type name="Global">
		<attribs>
			<attrib name="РазделительСтраниц" alias="PageBreak" type="String" InExprOnly="1">
				Символ перевода страницы текста
			</attrib>
			<attrib name="РазделительСтрок" alias="LineBreak" type="String" InExprOnly="1">
				Символ перевода строки текста
			</attrib>
			<attrib name="СимволТабуляции" alias="TabSymbol" type="String" InExprOnly="1">
				Символ табуляции текста
			</attrib>
			<attrib name="Перечисление" alias="Enum" type="AllEnum" InExprOnly="1">
				Глобальный объект для доступа к перечислениям
			</attrib>
			<attrib name="Константа" alias="Const" type="AllConst">
				Глобальный объект для доступа к константам
			</attrib>
			<attrib name="Последовательность" alias="Sequence" type="Sequences">
				Глобальный объект &quot;Последовательность&quot;
			</attrib>
			<attrib name="ФС" alias="FS" type="FS">
				Глобальный объект &quot;Файловая система&quot;
			</attrib>
			<attrib name="Метаданные" alias="MetaData" type="MetaData" InExprOnly="1">
				Глобальный объект &quot;Метаданные&quot;
			</attrib>
			<attrib name="Регистр" alias="Register" type="AllRegs" InExprOnly="1" components="1">
				Глобальный объект &quot;Регистры&quot;
			</attrib>
			<attrib name="ПланыСчетов" alias="ChartsOfAccounts" type="ChartsOfAccounts" InExprOnly="1" components="2">
				Глобальный объект &quot;ПланыСчетов&quot;
			</attrib>
			<attrib name="ВидыСубконто" alias="SubcontoKinds" type="SubcontoKinds" InExprOnly="1" components="2">
				Глобальный объект &quot;ВидыСубконто&quot;
			</attrib>
			<attrib name="ВидРасчета" alias="Calculation" type="Calculation" InExprOnly="1" components="4">
				Глобальный объект &quot;ВидРасчета&quot;
			</attrib>
			<attrib name="ГруппаРасчетов" alias="CalculationGroup" type="CalculationGroup" InExprOnly="1" components="4">
				Глобальный объект &quot;ГруппаРасчетов&quot;
			</attrib>
			<attrib name="ПравилоПерерасчета" alias="ReCalculationRule" type="ReCalculationRule" components="4">
				Глобальный объект &quot;ПравилоПерерасчета&quot;
			</attrib>
			<attrib name="Календари" alias="Calendars" type="Calendars" components="4">
				Глобальный объект &quot;Календари&quot;
			</attrib>
		</attribs>
		<methods>
			<method name="ИБСозданияОбъекта" alias="BirthIBOfObject" components="8">
				Определить ИБ, создавшую объект
				<params>
					<param name="Объект">
						Элемент справочника, документ или бухгалтерский счет
					</param>
				</params>
				<return type="String">
					код ИБ, на которой был создан первоначально объект
				</return>
			</method>
			<method name="ТекущаяИБКод" alias="CurrentIBCode" components="8">
				Получить код текущей ИБ
				<return type="String">
					код ИБ, на которой запущена система 1С:Предприятие
				</return>
			</method>
			<method name="ТекущаяИБНаименование" alias="CurrentIBDescr" components="8">
				Получить наименование текущей ИБ
				<return type="String">
					возвращает наименование ИБ, на которой запущена система 1С:Предприятие
				</return>
			</method>
			<method name="ТекущаяИБТолькоПолучатель" alias="IsCurrentIBRecepientOnly" components="8">
				Определить имеет ли текущая ИБ признак &quot;Только получатель&quot;
				<return type="0;1">
					1-имеет признак &quot;Только получатель&quot;, 0-нет
				</return>
			</method>
			<method name="ТекущаяИБЦентральная" alias="IsCurrentIBCenter" components="8">
				Определить, является ли текущая ИБ центральной
				<return type="0;1">
					1-центральная, 0-периферийная
				</return>
			</method>
			<method name="ЦентральнаяИБКод" alias="CentralIBCode" components="8">
				<return type="String">
					код центральной ИБ
				</return>
			</method>
			<method name="ЗагрузитьВнешнююКомпоненту" alias="LoadAddIn">
				Загружает внешнюю компоненту
				<params>
					<param name="Путь" type="FileName">Путь ко внешней компоненте</param>
				</params>
				<return type="0;1">
					0-не загружена, 1-загружена
				</return>
			</method>					
			<method name="_StrToId" alias="_StrToId">
				<params>
					<param name="Str" type="String"></param>
				</params>
				<return type="Number" InExprOnly="1">
				</return>
			</method>					
			<method name="_IdToStr" alias="_IdToStr">
				<params>
					<param name="ID" type="Number"></param>
				</params>
				<return type="Number" InExprOnly="1">
				</return>
			</method>					
			<method name="_GetPerformanceCounter" alias="_GetPerformanceCounter">
				<return type="Number" InExprOnly="1">
					Количество милисекунд с момента запуска системы
				</return>
			</method>					
			<method name="Окр" alias="Round">
				<params>
					<param name="Число1" type="Number">
						число, которое надо округлить
					</param>
					<param name="Число2" type="Number" default="0">
						точность
					</param>
					<param name="Способ" type="0;1" default="">
						0-если 1.5 округляется до 1, 1-если 1.5 округляется до 2
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					значение результата округления
				</return>
			</method>
			<method name="Цел" alias="Int">
				<params>
					<param name="Число" type="Number">
						числовое выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					значение целой части параметра
				</return>
			</method>
			<method name="Мин" alias="Min">
				<params>
					<param name="Элемент1" type="Number">
						список выражений базовых типов данных
					</param>
					<param name="ЭлементN" type="Number">
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					значение наименьшего параметра
				</return>
			</method>
			<method name="Макс" alias="Max">
				<params>
					<param name="Элемент1" type="Number">
						список выражений базовых типов данных
					</param>
					<param name="ЭлементN" type="Number">
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					значение наибольшего параметра
				</return>
			</method>
			<method name="Лог10" alias="Log10">
				<params>
					<param name="Число" type="Number">
						числовое выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					значение десятичного логарифма параметра
				</return>
			</method>
			<method name="Лог" alias="Ln">
				<params>
					<param name="Число" type="Number">
						числовое выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					значение натурального логарифма параметра
				</return>
			</method>
			<method name="СтрДлина" alias="StrLen">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					длину строки
				</return>
			</method>
			<method name="ПустаяСтрока" alias="IsBlankString">
				Проверить строку на наличие значащих символов
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
				</params>
				<return type="0;1" InExprOnly="1">
					1-строка пустая или содержит только пробелы, 0-иначе
				</return>
			</method>
			<method name="СокрЛ" alias="TrimL">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
				</params>
				<return type="String" InExprOnly="1">
					cтроку, полученную из параметра отсечением левых пробелов
				</return>
			</method>
			<method name="СокрП" alias="TrimR">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
				</params>
				<return type="String" InExprOnly="1">
					cтроку, полученную из параметра отсечением правых пробелов
				</return>
			</method>
			<method name="СокрЛП" alias="TrimAll">
				Отсекает стоящие слева и справа пробелы
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
				</params>
				<return type="String" InExprOnly="1">
					результирующую строку
				</return>
			</method>
			<method name="Лев" alias="Left">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
					<param name="Число" type="Number">
						количество возвращаемых символов
					</param>
				</params>
				<return type="String" InExprOnly="1">
					cтроку, содержащую первые символы текстовой строки
				</return>
			</method>
			<method name="Прав" alias="Right">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
					<param name="Число" type="Number">
						количество возвращаемых символов
					</param>
				</params>
				<return type="String" InExprOnly="1">
					cтроку, содержащую последние символы текстовой строки
				</return>
			</method>
			<method name="Сред" alias="Mid">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
					<param name="Число1" type="Number">
						позиция первого символа (начиная с 1)
					</param>
					<param name="Число2" type="Number" default="">
						количество возвращаемых символов (если опущен, то до конца строки)
					</param>
				</params>
				<return type="String" InExprOnly="1">
					подcтроку, заданную номером  позиции и числом символов
				</return>
			</method>
			<method name="Найти" alias="Find">
				<params>
					<param name="Строка1" type="String">
						строка, в которой ищем
					</param>
					<param name="Строка2" type="String">
						строка которую ищем
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					позицию первого вхождения заданной подстроки
				</return>
			</method>
			<method name="СтрЗаменить" alias="StrReplace">
				<params>
					<param name="СтрИсточник" type="String">
						строка, в которой ищем
					</param>
					<param name="СтрПодстрока" type="String">
						строка, которую ищем
					</param>
					<param name="СтрЗамены" type="String">
						строка, которой заменяем
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку, полученную из строки поиска заменой всех вхождений шаблона поиска строкой замены
				</return>
			</method>
			<method name="СтрЧислоВхождений" alias="StrCountOccur">
				<params>
					<param name="СтрИсточник" type="String">
						строка, в которой ищем
					</param>
					<param name="СтрПодстрока" type="String">
						строка, которую ищем
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					число вхождений строки шаблона поиска в строку поиска
				</return>
			</method>
			<method name="СтрКоличествоСтрок" alias="StrLineCount">
				<params>
					<param name="Строка" type="String">
						строковое выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					число строк в многострочном тексте
				</return>
			</method>
			<method name="СтрПолучитьСтроку" alias="StrGetLine">
				<params>
					<param name="Текст" type="String">
						строковое выражение
					</param>
					<param name="НомерСтроки" type="Number">
						номер строки
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку из многострочного текста по заданному номеру
				</return>
			</method>
			<method name="Врег" alias="Upper">
				<params>
					<param name="Строка" type="String">
						исходная строка
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку, преобразованую в верхний регистр
				</return>
			</method>
			<method name="Нрег" alias="Lower">
				<params>
					<param name="Строка" type="String">
						исходная строка
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку, преобразованную в нижний регистр
				</return>
			</method>
			<method name="OemToAnsi" alias="OemToAnsi">
				<params>
					<param name="Строка" type="String">
						исходная строка
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку, преобразованную в кодировку Ansi
				</return>
			</method>
			<method name="AnsiToOem" alias="AnsiToOem">
				<params>
					<param name="Строка" type="String">
						исходная строка
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку, преобразованную в кодировку Oem
				</return>
			</method>
			<method name="Симв" alias="Chr">
				<params>
					<param name="КодСимвола" type="Number">
						числовое значение кода символа
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку, содержащую символ с заданным кодом
				</return>
			</method>
			<method name="КодСимв" alias="Asc">
				<params>
					<param name="Символ" type="String">
						строковое выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					код первого символа
				</return>
			</method>
			<method name="РабочаяДата" alias="WorkingDate">
				Устанавливает значение рабочей даты
				<params>
					<param name="Дата" type="Date" default="">
						Выражение типа дата
					</param>
					<param name="РежимСменыРабДаты" type="0;1;2" default="">
						Режим автоматической смены рабочей даты в полночь:0-не менять, 1-менять с предупреждением, 2-менять автоматически без предупреждения
					</param>
				</params>
				<return type="Date">
					значение рабочей даты
				</return>
			</method>
			<method name="ТекущаяДата" alias="CurDate">
				<return type="Date" InExprOnly="1">
					текущую системную дату
				</return>
			</method>
			<method name="ДобавитьМесяц" alias="AddMonth">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
					<param name="ЧислоМесяцев" type="Number">
						число месяцев, добавляемое к дате
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату, полученную добавлением к исходной дате заданного числа месяцев
				</return>
			</method>
			<method name="НачМесяца" alias="BegOfMonth">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату начала месяца для заданной даты
				</return>
			</method>
			<method name="КонМесяца" alias="EndOfMonth">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату конца месяца для заданной даты
				</return>
			</method>
			<method name="НачКвартала" alias="BegOfQuart">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату начала квартала для заданной даты
				</return>
			</method>
			<method name="КонКвартала" alias="EndOfQuart">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату конца квартала для заданной даты
				</return>
			</method>
			<method name="НачГода" alias="BegOfYear">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату начала года для заданной даты
				</return>
			</method>
			<method name="КонГода" alias="EndOfYear">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату конца года для заданной даты
				</return>
			</method>
			<method name="НачНедели" alias="BegOfWeek">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату начала недели для заданной даты
				</return>
			</method>
			<method name="КонНедели" alias="EndOfWeek">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					дату конца недели для заданной даты
				</return>
			</method>
			<method name="ДатаГод" alias="GetYear">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					числовое значение года для заданной даты
				</return>
			</method>
			<method name="ДатаМесяц" alias="GetMonth">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					числовое значение месяца для заданной даты
				</return>
			</method>
			<method name="ДатаЧисло" alias="GetDay">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					числовое значение дня месяца для заданной даты
				</return>
			</method>
			<method name="НомерНеделиГода" alias="GetWeekOfYear">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					номер недели в году для заданной даты
				</return>
			</method>
			<method name="НомерДняГода" alias="GetDayOfYear">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					порядковый номер дня в году для заданной даты
				</return>
			</method>
			<method name="НомерДняНедели" alias="GetDayOfWeek">
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					порядковый номер дня недели для заданной даты
				</return>
			</method>
			<method name="ПериодСтр" alias="PeriodStr">
				<params>
					<param name="ДатаНачалаПериода" type="Date">
						Начальная дата периода
					</param>
					<param name="ДатаКонцаПериода"  type="Date">
						Конечная  дата периода
					</param>
				</params>
				<return type="String" InExprOnly="1">
					информацию о периоде бухгалтерских итогов в виде строки символов
				</return>
			</method>
			<method name="НачалоСтандартногоИнтервала" alias="BegOfStandardRange">
				Устанавливает вариант задания стандартного начала интервала отображения журнала документов
				<params>
					<param name="Вариант" type="Date1" default="">
						Выражение со значением типа строка или дата
					</param>
				</params>
				<return type="Date1">
					текущий установленный вариант
				</return>
			</method>
			<method name="КонецСтандартногоИнтервала" alias="EndOfStandardRange">
				Устанавливает вариант задания стандартного конца интервала отображения журнала документов
				<params>
					<param name="Вариант" type="Date1" default="">
						Выражение со значением типа строка или дата
					</param>
				</params>
				<return type="Date1">
					текущий установленный вариант
				</return>
			</method>
			<method name="ТекущееВремя" alias="CurrentTime">
				<params>
					<param name="Час" type="VarName" default="">
						имя переменной для получения числа часов текущего времени
					</param>
					<param name="Мин" type="VarName" default="">
						имя переменной для получения числа минут текущего времени
					</param>
					<param name="Сек" type="VarName" default="">
						имя переменной для получения числа секунд текущего времени
					</param>
				</params>
				<return type="String">
					текущее (системное) время в текстовом виде
				</return>
			</method>
			<method name="СформироватьПозициюДокумента" alias="MakeDocPosition">
				<params>
					<param name="Докум" type="Document,Position">
						значение документа (или его позиция), позиция которого определяется
					</param>
					<param name="ФлагСмещения" type="-1;0;1" default="0">
						-1- предыдущая позиция, 1-следующая позиция, 0-текущая позиция
					</param>
				</params>
				<return type="Position" InExprOnly="1">
					позицию документа согласно переданным параметрам
				</return>
			</method>
			<method name="СформироватьПозициюДокумента" alias="MakeDocPosition">
				<params>
					<param name="Дата" type="Date">
						дата, на которую формируется позиция документа
					</param>
					<param name="Час" type="Number">
						час, на который формируется позиция документа
					</param>
					<param name="Мин" type="Number">
						минута, на которую формируется позиция документа
					</param>
					<param name="Сек" type="Number">
						секунда, на которую формируется позиция документа
					</param>
					<param name="ФлагКонцаСекунды" type="0;1" default="0">
						1-позиция будет браться от следующей секунды, 0-позиция от указанной секунды
					</param>
				</params>
				<return type="Position" InExprOnly="1">
					позицию документа согласно переданным параметрам
				</return>
			</method>
			<method name="РазобратьПозициюДокумента" alias="SplitDocPosition">
				Раскладывает позицию документа на составляющие
				<params>
					<param name="Позиция" type="Position">
						строковое значение позиции документа
					</param>
					<param name="Дата" type="VarName" default="">
						Имя переменной, куда система вернет значение даты позиции документа
					</param>
					<param name="Час" type="VarName" default="">
						Имя переменной, куда система вернет час позиции документа
					</param>
					<param name="Мин" type="VarName" default="">
						Имя переменной, куда система вернет минуту позиции документа
					</param>
					<param name="Сек" type="VarName" default="">
						Имя переменной, куда система вернет секунду позиции документа
					</param>
					<param name="Документ" type="VarName" default="">
						 Имя переменной, куда система вернет документ данной позиции документа
					</param>
				</params>
				<return type="String">
					строковое представление позиции документа
				</return>
			</method>
			<method name="Дата" alias="Date">
				<params>
					<param name="Параметр">
						выражение
					</param>
				</params>
				<return type="Date" InExprOnly="1">
					результат преобразования параметра в дату по правилам преобразования типов
				</return>
			</method>
			<method name="Дата" alias="Date">
				Преобразует Год, Месяц, Число в значение типа &quot;Дата&quot;
				<params>
					<param name="Год" type="Number">
						указывается 4-х значным числом (вместе с веком)
					</param>
					<param name="Месяц" type="Number">
						числовое выражение
					</param>
					<param name="Число" type="Number">
						числовое выражение
					</param>
				</params>
				<return type="Date" InExprOnly="1">
				</return>
			</method>
			<method name="Строка" alias="String">
				<params>
					<param name="Параметр">
						выражение
					</param>
				</params>
				<return type="String" InExprOnly="1">
					результат преобразования параметра в строку по правилам преобразования типов
				</return>
			</method>
			<method name="Число" alias="Number">
				<params>
					<param name="Параметр">
						выражение
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					результат преобразования параметра в число по правилам преобразования типов
				</return>
			</method>
			<method name="Пропись" alias="Spelling">
				Задать образец вывода чисел прописью
				<params>
					<param name="Параметр" type="FileName,ValueList">
						строка, содержащая имя файла с прописью (если в параметре передано &quot;&quot;, то устанавливается пропись по умолчанию) или объект типа &quot;СписокЗначений&quot;, в котором лежат строки, структура которых совпадает со структурой файла прописей
					</param>
				</params>
			</method>
			<method name="Формат" alias="Format">
				<params>
					<param name="Параметр">
						форматируемое выражение
					</param>
					<param name="ФорматнаяСтрока" type="FormatString">
						форматная строка
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строку с результатом форматирования выражения по заданной форматной строке
				</return>
			</method>
			<method name="Шаблон" alias="Template">
				<params>
					<param name="СтрокаШаблон" type="String">
						строка, содержащая шаблон формирования
					</param>
				</params>
				<return type="String">
					строку, полученную по шаблону заменой встроенных выражений на значения и форматированием
				</return>
			</method>
			<method name="ФиксШаблон" alias="FixTemplate">
				<params>
					<param name="СтрокаШаблон" type="String">
						строка, содержащая шаблон формирования
					</param>
				</params>
				<return type="String">
					строку, полученную по шаблону заменой встроенных выражений на значения и форматированием, с сохранением длин содержащих их полей
				</return>
			</method>
			<method name="ВвестиЗначение" alias="InputValue">
				Вызов диалога для ввода значения заданного типа
				<params>
					<param name="Значение" type="VarName">
						имя переменной для приема вводимого значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="Тип" type="TypeString">
						название типа данных, которое требутся ввести
					</param>
					<param name="Длина" type="Number" default="">
						длина вводимого значения
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
				<return type="0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;
				</return>
			</method>
			<method name="ВвестиЧисло" alias="InputNumeric">
				Вызов диалога для ввода числа
				<params>
					<param name="Число" type="VarName">
						имя переменной для приема вводимого значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="Длина" type="Number">
						длина вводимого числа
					</param>
					<param name="Точность" type="Number">
						число знаков после десятичной точки
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа
					</param>
				</params>
				<return type="-1;0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;, -1- закончилось время ожидания ответа
				</return>
			</method>
			<method name="ВвестиСтроку" alias="InputString">
				Вызов диалога для ввода строки
				<params>
					<param name="Строка" type="VarName">
						имя переменной для приема вводимого значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="ДлинаСтроки" type="Number">
						длина вводимой строки
					</param>
					<param name="Признак" type="0;1" default="0">
						0-ввод одной строки, 1-ввод многострочного текста
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа 
					</param>
				</params>
				<return type="-1;0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;, -1- закончилось время ожидания ответа
				</return>
			</method>
			<method name="ВвестиДату" alias="InputDate">
				Вызов диалога для ввода даты
				<params>
					<param name="Дата" type="VarName">
						имя переменной для приема вводимого значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа
					</param>
				</params>
				<return type="-1;0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;, -1- закончилось время ожидания ответа
				</return>
			</method>
			<method name="ВвестиПериод" alias="InputDate">
				Вызов диалога для ввода периода
				<params>
					<param name="НачалоПериода" type="VarName">
						имя переменной для приема вводимого значения даты начала периода
					</param>
					<param name="КонецПериода" type="VarName">
						имя переменной для приема вводимого значения даты конца периода
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
				</params>
				<return type="0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;
				</return>
			</method>
			<method name="ВвестиПеречисление" alias="InputEnum">
				Вызов диалога для ввода перечисления
				<params>
					<param name="Значение" type="VarName">
						имя переменной для приема вводимого значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа
					</param>
				</params>
				<return type="-1;0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;, -1- закончилось время ожидания ответа
				</return>
			</method>
			<method name="Вопрос" alias="DoQueryBox">
				Вывести окно вопроса и получить ответ
				<params>
					<param name="ТекстВопроса" type="String">
						cтрока текста вопроса
					</param>
					<param name="Режим" type="DoQueryParam" default="0">
						набор кнопок диалога в виде числа или строки
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа
					</param>
				</params>
				<return type="DoQueryAnswer"  InExprOnly="1">
					ответную реакцию в виде числа или строки
				</return>
			</method>
			<method name="Предупреждение" alias="DoMessageBox">
				Вывести окно предупреждения
				<params>
					<param name="ТекстПредупреждения" type="String">
						cтрока текста предупреждения
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени показа окна предупреждения
					</param>
				</params>
			</method>
			<method name="Сообщить" alias="Message">
				Вывести строку в окно сообщений
				<params>
					<param name="ТекстСообщения">
						cтрока текста сообщения
					</param>
					<param name="ИмиджМаркера" type="MsgMarkers" default="">
						тип пиктограммы выводимой перед сообщением
					</param>
				</params>
			</method>
			<method name="ОчиститьОкноСообщений" alias="ClearMessageWindow">
				Очистить окно сообщений
			</method>
			<method name="Состояние" alias="Status">
				Вывести сообщение в строку состояния
				<params>
					<param name="ТекстСообщения" type="String">
						cтрока текста сообщения
					</param>
				</params>
			</method>
			<method name="Сигнал" alias="Beep">
				Вывести звуковой сигнал
			</method>
			<method name="Разм" alias="Dim">
				<params>
					<param name="ИмяМассива" type="VarName">
						идентификатор массива
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					размерность массива
				</return>
			</method>
			<method name="ЗаголовокСистемы" alias="SystemCaption">
				Позволяет получить/установить заголовок окна программы
				<params>
					<param name="Заголовок" type="String" default="">
						задаваемый заголовок окна программы
					</param>
				</params>
				<return type="String">
					заголовок окна программы
				</return>
			</method>
			<method name="ИмяКомпьютера" alias="ComputerName">
				<return type="String" InExprOnly="1">
					сетевое имя компьютера, работающего в данный момент с программой
				</return>
			</method>
			<method name="ИмяПользователя" alias="UserName">
				<return type="String" InExprOnly="1">
					имя пользователя
				</return>
			</method>
			<method name="ПолноеИмяПользователя" alias="UserFullName">
				<return type="String" InExprOnly="1">
					полное имя пользователя
				</return>
			</method>
			<method name="НазваниеНабораПрав" alias="RightName">
				<params>
					<param name="ВыдИспНабПрав" type="0;1" default="0">
						выдавать используемый набор прав или нет. 0-выдает установленный пользователю набор прав, 1-выдает пустую строку, если пользователю набор прав назначен, но установлен режим отключения контроля набора прав
					</param>
				</params>
				<return type="String" InExprOnly="1">
					название набора прав пользователя
				</return>
			</method>
			<method name="ПравоДоступа" alias="AccessRight">
				Проверяет для текущего пользователя наличие права доступа для заданного объекта
				<params>
					<param name="НазваниеПрава" type="AccesRight">
						строка с названием права доступа, как оно выводится в конфигурации
					</param>
					<param name="Объект" type="MetaType" default="">
						строка с наименованием типа и вида объекта
					</param>
				</params>
				<return type="0;1" InExprOnly="1">
					1-право доступа есть, иначе 0
				</return>
			</method>
			<method name="НазваниеИнтерфейса" alias="UserInterfaceName">
				<return type="String" InExprOnly="1">
					название интерфейса пользователя
				</return>
			</method>
			<method name="КаталогПользователя" alias="UserDir">
				<return type="FileName" InExprOnly="1">
					имя каталога пользователя
				</return>
			</method>
			<method name="КаталогИБ" alias="IBDir">
				<return type="FileName" InExprOnly="1">
					имя каталога базы данных
				</return>
			</method>
			<method name="КаталогПрограммы" alias="BinDir">
				<return type="FileName" InExprOnly="1">
					имя каталога с исполняемыми файлами
				</return>
			</method>
			<method name="КаталогВременныхФайлов" alias="TempFilesDir">
				<return type="FileName" InExprOnly="1">
					имя каталога временных файлов
				</return>
			</method>
			<method name="МонопольныйРежим" alias="ExclusiveMode">
				<return type="0;1" InExprOnly="1">
					1-программа запущена в монопольном режиме, 0- программа запущена в сетевом режиме
				</return>
			</method>
			<method name="ОсновнойЯзык" alias="GeneralLanguage">
				<return type="0;1" InExprOnly="1">
					1-русский, 0-английский
				</return>
			</method>
			<method name="НачатьТранзакцию" alias="BeginTransaction">
				Открыть обработку транзакции
			</method>
			<method name="ЗафиксироватьТранзакцию" alias="CommitTransaсtion">
				Завершить успешную транзакцию
			</method>
			<method name="ОтменитьТранзакцию" alias="RollBackTransaction">
				Завершить транзакцию без записи изменений
			</method>
			<method name="ЗначениеВСтрокуВнутр" alias="ValueToStringInternal">
				<params>
					<param name="Объект">
						значение объекта, которое нужно преобразовать
					</param>
				</params>
				<return type="String" InExprOnly="1">
					представление значения объекта в строковом системном виде
				</return>
			</method>
			<method name="ЗначениеИзСтрокиВнутр" alias="ValueFromStringInternal">
				<params>
					<param name="СистСтрока" type="String">
						представление объекта в системном строковом виде
					</param>
				</params>
				<return InExprOnly="1">
					объект агрегатного типа данных
				</return>
			</method>
			<method name="ЗначениеВСтроку" alias="ValueToString">
				<params>
					<param name="Объект">
						значение, которое нужно преобразовать
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строковое представление значения объекта
				</return>
			</method>
			<method name="ЗначениеИзСтроки" alias="ValueFromString">
				<params>
					<param name="СистСтрока" type="String">
						строковое представление объекта в системном виде
					</param>
				</params>
				<return InExprOnly="1">
					значение, которое получено из строкового системного представления
				</return>
			</method>
			<method name="ЗначениеВФайл" alias="ValueToFile">
				Сохраняет значение объекта в файле
				<params>
					<param name="ИмяФайла" type="FileName">
						имя файла
					</param>
					<param name="Объект">
						значение, которое следует сохранить в файле
					</param>
					<param name="Формат" type="0;1" default="1">
						1-сохранение во внутреннем формате, иначе во внешнем
					</param>
				</params>
				<return type="0;1">
					1-успешно, 0-функция не выполнена
				</return>
			</method>
			<method name="ЗначениеИзФайла" alias="ValueFromFile">
				Востанавливает и возвращает значение из файла
				<params>
					<param name="ИмяФайла" type="FileName">
						имя файла
					</param>
					<param name="Объект" type="VarName" default="">
						Имя переменной, куда система вернет значение, полученное из файла
					</param>
					<param name="Формат" type="0;1" default="1">
						1-сохранение во внутреннем формате, иначе во внешнем
					</param>
				</params>
				<return>
				</return>
			</method>
			<method name="СохранитьЗначение" alias="SaveValue">
				Сохранить некоторое значение для пользователя между сеансами
				<params>
					<param name="Идентификатор" type="String">
						наименование сохраняемого значения
					</param>
					<param name="Значение">
						выражение любого типа
					</param>
				</params>
			</method>
			<method name="ВосстановитьЗначение" alias="RestoreValue">
				<params>
					<param name="Идентификатор" type="String">
						наименование сохраненного значения
					</param>
				</params>
				<return InExprOnly="1">
					сохраненное для пользователя значение
				</return>
			</method>
			<method name="СоздатьОбъект" alias="CreateObject">
				Создает объект агрегатного типа данных
				<params>
					<param name="ИмяАгрегатногоТипа" type="Type">
						имя агрегатного типа данных объявленного в конфигураторе
					</param>
				</params>
				<return>
					ссылку на созданный объект агрегатного типа данных
				</return>
			</method>
			<method name="СтатусВозврата" alias="ReturnStatus">
				Определение или установка статуса возврата предопределенной процедуры
				<params>
					<param name="Статус" type="0;1" default="">
						1-Выполнить Действие, 0-Отменить Действие
					</param>
				</params>
				<return type="0;1">
					1-Выполнить Действие, 0-Отменить Действие
				</return>
			</method>
			<method name="ТипЗначения" alias="ValueType">
				<params>
					<param name="Значение">
						выражение, тип данных значения которого надо определить
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					тип данных значения в виде числа
				</return>
			</method>
			<method name="ТипЗначенияСтр" alias="ValueTypeStr">
				<params>
					<param name="Значение">
						выражение, тип данных значения которого надо определить
					</param>
				</params>
				<return type="String" InExprOnly="1">
					строковое обозначение типа данных
				</return>
			</method>
			<method name="ПустоеЗначение" alias="EmptyValue">
				<params>
					<param name="Значение">
						выражение любого типа данных, значение которого проверяется
					</param>
				</params>
				<return type="0;1" InExprOnly="1">
					1- значение пустое, 0-нет
				</return>
			</method>
			<method name="ПолучитьПустоеЗначение" alias="GetEmptyValue">
				<params>
					<param name="Тип" type="MetaType" default="">
						Строка или вид субконто или объект метаданных, задающий тип данных
					</param>
				</params>
				<return InExprOnly="1">
					пустое значение заданного типа
				</return>
			</method>
			<method name="НазначитьВид" alias="SetKind">
				Используется для установки значениям типа &quot;Документ&quot;, &quot;Справочник&quot;, &quot;Счет&quot; конкретного вида
				<params>
					<param name="Значение" type="VarName">
						Значение типа документ/справочник/счет неопределенного вида
					</param>
					<param name="Вид" type="String">
						вид значения
					</param>
				</params>
			</method>
			<method name="ПрефиксАвтоНумерации" alias="AutoNumPrefix">
				Установить префикс для автоматического создания новых номеров
				<params>
					<param name="ИмяВида" type="MetaRefs,MetaDoc">
						Полное названием справочника или документа конфигурации
					</param>
					<param name="Префикс" type="String">
						префикс номеров документов или кодов элементов справочника
					</param>
				</params>
			</method>
			<method name="ПолучитьЗначенияОтбора" alias="GetSelectionValues">
				Выбрать все существующие значения отбора
				<params>
					<param name="ИмяОтбора" type="DocSel">
						полное названием общего реквизита документа или графы отбора
					</param>
					<param name="СписокЗначений" type="VarName">
						имя переменной, в которой возвращается объект типа &quot;СписокЗначений&quot;
					</param>
					<param name="ДатаНач" type="Date" default="">
						дата начала интервала, в котором проводится отбор
					</param>
					<param name="ДатаКон" type="Date" default="">
						дата конца интервала, в котором проводится отбор
					</param>
				</params>
				<return type="0;1">
					1-операция выполнена успешно, 0-нет
				</return>
			</method>
			<method name="ЗаписьЖурналаРегистрации" alias="LogMessageWrite">
				Выводит строку текста в системный журнал регистрации
				<params>
					<param name="Коммент" type="String">
						комментарий к событию
					</param>
					<param name="ТипСобытия" type="String" default="Дополнительное событие">
						тип события
					</param>
					<param name="Событие" type="String" default="Дополнительное событие">
						Событие
					</param>
					<param name="Объект" default="">
						Объект события
					</param>
					<param name="Категория" type="LogCategry" default="3">
						1-администрирование, 2-изменение данных, 3-информация, 4-предупреждение, 5-ошибка
					</param>
				</params>
			</method>
			<method name="КомандаСистемы" alias="System">
				Вызывает на исполнение команду DOS
				<params>
					<param name="СтрокаКоманды" type="String">
						строка, содержащая команду
					</param>
				</params>
			</method>
			<method name="ЗапуститьПриложение" alias="RunApp">
				Выполняет запуск любого приложения
				<params>
					<param name="СтрокаКоманды" type="String">
						командная строка запуска приложения или имя файла
					</param>
				</params>
			</method>
			<method name="ЗавершитьРаботуСистемы" alias="ExitSystem">
				Вызывает завершение работы системы
				<params>
					<param name="ФлагСохранения" type="0;1" default="1">
						0-не запрашивается сохранение, 1-сохранение запрашивается
					</param>
				</params>
			</method>
			<method name="НайтиПомеченныеНаУдаление" alias="FindMarkedForDelete">
				Находит все помеченные на удаление объекты
				<params>
					<param name="Объекты" type="VarName">
						СписокЗначений, в который помещаются найденные объекты
					</param>
				</params>
			</method>
			<method name="НайтиСсылки" alias="FindReferences">
				Находит ссылки на объекты, переданные в списке значений
				<params>
					<param name="Объекты" type="VarName">
						объект или СписокЗначений, в котором передаются объекты
					</param>
					<param name="Ссылки" type="VarName">
						ТаблицаЗначений, в которую помещаются найденные ссылки на объекты
					</param>
				</params>
			</method>
			<method name="УдалитьОбъекты" alias="DeleteObjects">
				Удаляет объекты, переданные в списке значений
				<params>
					<param name="Объекты" type="VarName">
						объект или СписокЗначений, в котором передаются объекты
					</param>
					<param name="Проверять" type="0;1" default="0">
						1-проверяется, нет ли ссылок на удаляемый объект. Любое другое число - проверку не выполнять
					</param>
					<param name="Ссылки" type="VarName" default="">
						ТаблицаЗначений в которую помещаются найденные ссылки на объекты
					</param>
				</params>
			</method>
			<method name="ОбработкаОжидания" alias="IdleProcessing">
				Инициирует периодический вызов процедуры глобального модуля с заданным интервалом времени
				<params>
					<param name="ИмяПроцедуры" type="String" default="">
						имя процедуры глобального модуля
					</param>
					<param name="ИнтервалВызова" type="Number" default="0">
						интервал времени в секундах
					</param>
				</params>
				<return type="String">
					имя процедуры глобального модуля, которая назначена для периодического запуска
				</return>
			</method>
			<method name="ОписаниеОшибки" alias="GetErrorDescription">
				<return type="String" InExprOnly="1">
					описание ошибки времени выполнения модуля
				</return>
			</method>
			<method name="ОткрытьФорму" alias="OpenForm">
				<params>
					<param name="ЧтоТо" type="Number">
					</param>
				</params>
				<return type="Number">
					1-форма открыта, 0-не открыта
				</return>
			</method>
			<method name="ОткрытьФормуМодально" alias="OpenFormModal">
				<params>
					<param name="ЧтоТо" type="Number">
					</param>
				</params>
				<return type="Number">
					1-форма открыта, 0-не открыта
				</return>
			</method>
			<method name="ПолучитьТА" alias="GetAP" components="1">
				<return type="String" InExprOnly="1">
					строку, содержащую дату и время ТА
				</return>
			</method>
			<method name="ПолучитьДатуТА" alias="GetDateOfAP" components="1">
				<return type="Date" InExprOnly="1">
					дату Точки Актуальности итогов
				</return>
			</method>
			<method name="ПолучитьВремяТА" alias="GetTimeOfAP" components="1">
				Получить значение времени Точки Актуальности итогов
				<params>
					<param name="Часы" type="VarName" default="">
						идентификатор переменной для значения часов
					</param>
					<param name="Минуты" type="VarName" default="">
						идентификатор переменной для значения минут
					</param>
					<param name="Секунды" type="VarName" default="">
						идентификатор переменной для значения секунд
					</param>
				</params>
				<return type="String">
					строковое значение времени ТА в виде &quot;ЧЧ.ММ.СС&quot;
				</return>
			</method>
			<method name="ПолучитьДокументТА" alias="GetDocOfAP" components="1">
				<return type="Document" InExprOnly="1">
					значение типа документ, который стоит на ТА
				</return>
			</method>
			<method name="ПолучитьПозициюТА" alias="GetAPPosition" components="1">
				<return type="Position" InExprOnly="1">
					32-х символьное строковое значение позиции ТА
				</return>
			</method>
			<method name="УстановитьТАна" alias="SetAPToBeg" components="1">
				Изменить положение Точки Актуальности итогов
				<params>
					<param name="ПоложениеТА" type="Date,Document,Position">
						дата | документ | позиция документа, на начало которой устанавливается ТА
					</param>
				</params>
			</method>
			<method name="УстановитьТАпо" alias="SetAPToEnd" components="1">
				Изменить положение Точки Актуальности итогов
				<params>
					<param name="ПоложениеТА" type="Date,Document,Position">
						дата | документ | позиция документа, на конец которой устанавливается ТА
					</param>
				</params>
			</method>
			<method name="РассчитатьРегистрыНа" alias="CalcRegsOnBeg" components="1">
				Рассчитать все регистры с установленным флагом временного расчета на начало события
				<params>
					<param name="ГраницаРасчета" type="Date,Document,Position">
						значение типа дата | документ | позиция документа
					</param>
					<param name="ГрафаОтбора" type="DocSel" default="">
						Установка использования графы отбора
					</param>
				</params>
			</method>
			<method name="РассчитатьРегистрыПо" alias="CalcRegsOnEnd" components="1">
				Рассчитать все регистры с установленным флагом временного расчета на конец события
				<params>
					<param name="ГраницаРасчета" type="Date,Document,Position">
						значение типа дата | документ | позиция документа
					</param>
					<param name="ГрафаОтбора" type="DocSel" default="">
						Установка использования графы отбора
					</param>
				</params>
			</method>
			<method name="ВыбранныйПланСчетов" alias="DefaultAccountCharts" components="2">
				<return type="AccountChart" InExprOnly="1">
					текущее значение параметра &quot;Основной план счетов&quot;
				</return>
			</method>
			<method name="ОсновнойПланСчетов" alias="MainAccountCharts" components="2">
				<return type="AccountChart" InExprOnly="1">
					план счетов, установленный в конфигурации в качестве основного
				</return>
			</method>
			<method name="СчетПоКоду" alias="AccountByCode" components="2">
				Поиск бухгалтерского счета по коду
				<params>
					<param name="КодСчета" type="Number" default="">
						код счета
					</param>
					<param name="ПланСчетов" type="AccountChart" default="">
						план счетов, в котором выполняется поиск
					</param>
				</params>
				<return type="Account" InExprOnly="1">
					значение типа &quot;Счет&quot;
				</return>
			</method>
			<method name="НачалоПериодаБИ" alias="BeginOfPeriodBT" components="2">
				<return type="Date" InExprOnly="1">
					дату начала периода бухгалтерских итогов
				</return>
			</method>
			<method name="КонецПериодаБИ" alias="EndOfPeriodBT" components="2">
				<return type="Date" InExprOnly="1">
					дату конца периода бухгалтерских итогов
				</return>
			</method>
			<method name="КонецРассчитанногоПериодаБИ" alias="EndOfCalculatedPeriodBT" components="2">
				<return type="Date" InExprOnly="1">
					последнюю дату рассчитанных бухгалтерских итогов
				</return>
			</method>
			<method name="МаксимальноеКоличествоСубконто" alias="MaxSubcontoCount" components="2">
				<return type="Number" InExprOnly="1">
					сколько видов субконто может быть задано для счета
				</return>
			</method>
			<method name="НазначитьСчет" alias="SetAccount" components="2">
				используется для организации выбора значения типа &quot;ВидCубконто&quot; в диалоге формы
				<params>
					<param name="ВидСубконто" type="VarName">
						значение типа &quot;ВидСубконто&quot;, переданное по ссылке - обычно реквизит диалога формы
					</param>
					<param name="Счет" type="Account">
						значение типа &quot;Счет&quot;
					</param>
					<param name="НомерСубконто" type="Number" default="">
						номер субконто для данного счета
					</param>
				</params>
			</method>
			<method name="ВвестиПланСчетов" alias="InputAccountCharts" components="2">
				Выбрать план счетов из существующих планов счетов
				<params>
					<param name="ПланСчетов" type="VarName">
						идентификатор переменной, в которую будет осуществлен возврат выбранного значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа
					</param>
				</params>
				<return type="-1;0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;, -1- закончилось время ожидания ответа
				</return>
			</method>
			<method name="ВвестиВидСубконто" alias="InputSubcontoKind" components="2">
				Выбрать вид субконто из существующих видов субконто
				<params>
					<param name="ВидСубконто" type="VarName">
						идентификатор переменной, в которую будет осуществлен возврат выбранного значения
					</param>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="Счет" type="Account" default="">
						значение типа &quot;Счет&quot;
					</param>
					<param name="Таймаут" type="Number" default="0">
						число секунд времени ожидания ответа
					</param>
				</params>
				<return type="-1;0;1">
					1-в диалоге нажата кнопка &quot;ОК&quot;, 0-нажата кнопка &quot;Отмена&quot;, -1- закончилось время ожидания ответа
				</return>
			</method>
			<method name="ОсновнойЖурналРасчетов" alias="BasicCalcJournal" components="4">
				Устанавливает основной журнал расчетов
				<params>
					<param name="ЖР" type="MetaCalcJournal">
						идентификатор ЖР как он задан при конфигурировании
					</param>
				</params>
				<return type="String">
					значение текущего журнала расчетов
				</return>
			</method>
		</methods>
	</type>
	<type name="FormContext" alias="КонтекстФормы" abstract="1">
		<attribs>
			<attrib name="СтрокаДействийФормы" alias="StringFormActions" type="String">
				Доступ к командной строке системных действий в кнопке
			</attrib>
			<attrib name="Форма" alias="Form" type="Form">
				Атрибут представляет собой ссылку на объект типа &quot;Форма&quot;
			</attrib>
		</attribs>
		<methods>
			<method name="ОткрытьПодбор" alias="OpenPermanentChoice">
				Открыть Форму подбора значений
				<params>
					<param name="Объект" type="TypeName">
						имя объекта агрегатного типа для подбора
					</param>
					<param name="ИмяФормы" type="String">
						имя формы подбора
					</param>
					<param name="КонтекстФормы" type="VarName" default="">
						Имя переменной, куда можно задать значение любого типа для передачи в открываемую форму
					</param>
					<param name="ФлагМножВыбора" type="0;1" default="">
						1-выбор нескольких значений, 0- выбор одного значения
					</param>
					<param name="ТекЗнач" default="">
						значение, на которое следует изначально установить курсор
					</param>
				</params>
			</method>
			<method name="УстановитьЗначениеВПодборе" alias="SetValueInPermanentChoice">
				Установить значение реквизита диалога подбора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита формы подбора значения
					</param>
					<param name="Значение">
						значение реквизита
					</param>
				</params>
			</method>
			<method name="ПолучитьЗначениеИзПодбора" alias="GetValueFromPermanentChoice">
				<params>
					<param name="Выражение" type="String">
						выражение, которое вычисляется в контексте формы подбора
					</param>
				</params>
				<return>
					значение вычисленного в контексте формы подбора выражения
				</return>
			</method>
			<method name="Активизировать" alias="Activate">
				Активизировать для редактирования поле диалога
				<params>
					<param name="ИмяРеквизита" type="String" default="">
						имя поля диалога, которое нужно активизировать
					</param>
					<param name="Режим" type="0;1" default="1">
						1-войти в режим редактирования, 0-не входить
					</param>
				</params>
			</method>
			<method name="АктивизироватьОбъект" alias="ActivateObj">
				Активизировать объект в форме списка
				<params>
					<param name="Объект">
						элемент справочника или документ или запись журнала расчетов
					</param>
				</params>
			</method>
		</methods>
		<handlers>
			<method name="ПриОткрытии" alias="OnOpen">
				Предопределенная процедура при интерактивном открытии формы
			</method>
			<method name="ПриПовторномОткрытии" alias="OnReopen">
				Предопределенная процедура при повторном открытии формы в случае, если открывают уже открытую форму - то есть форма просто активизируется
			</method>
			<method name="ПриЗакрытии" alias="OnClose">
				Предопределенная процедура при интерактивном закрытии формы
			</method>
			<method name="ПриВыбореЗакладки" alias="OnTabCtrlPosChanged">
				Предопределенная процедура обработки подбора значения в момент интерактивного выбора пользователем закладки в форме
				<params>
					<param name="НомерЗакладки" type="Number">
						номер выбранной закладки формы
					</param>
					<param name="ЗначениеЗакладки">
						значение выбранной закладки формы
					</param>
				</params>
			</method>
			<method name="ОбработкаПодбора" alias="ProcessPermanentChoice">
				Предопределенная процедура обработки подбора значения при  нажатия кнопки Выбрать в Форме Подбора значения
				<params>
					<param name="Элемент">
						элемент справочника подбора или документ, передаваемый для обработки
					</param>
					<param name="КонтФормы">
						контекст той формы, из которой шел подбор
					</param>
				</params>
			</method>
			<method name="ПриНачалеВыбораЗначения" alias="OnStartValueChoice">
				Предопределенная процедура после выбора значения в форме выбора
				<params>
					<param name="ИдентЭлемДиалога" type="String">
						идентификатор элемента диалога, которым инициализирован выбор значения
					</param>
					<param name="ФлагСтандОбр" type="0;1">
						флаг, изначально, при вызове процедуры равен 1, если в теле процедуры значение этого параметра поменять на 0, то стандартный процесс выбора значения не будет происходить.
					</param>
				</params>
			</method>
			<method name="ОбработкаВыбораЗначения" alias="ProcessValueChoice">
				Предопределенная процедура после выбора значения в форме выбора
				<params>
					<param name="ВыбЗнач">
						выбранный элемент справочника, документ или иной объект, передаваемый для обработки
					</param>
					<param name="ИдентЭлемДиалога" type="String">
						идентификатор элемента диалога, которым инициализирован выбор значения
					</param>
					<param name="ФлагСтандОбр" type="0;1">
						флаг, установка которого в теле процедуры в 0 (ноль) приведет к отмене стандартного присвоения значения
					</param>
				</params>
			</method>
			<method name="ПриВыбореСтроки" alias="OnSelectLine">
				Предопределенная процедура при выборе строки списка
			</method>
		</handlers>
	</type>
	<type name="Form" alias="Форма">
		<attribs>
			<attrib name="Закладки" alias="TabCtrl" type="ValueList">
				Объект типа &quot;СписокЗначений&quot;, содержащий описания закладок текущей формы
			</attrib>
			<attrib name="Параметр" alias="Parameter">
				Параметр, переданный при программном открытии формы
			</attrib>
		</attribs>
		<methods>
			<method name="ТолькоПросмотр" alias="ReadOnly">
				Установка режима редактирования формы
				<params>
					<param name="Режим" type="0;1" default="0">
						0-разрешено редактирование полей формы, 1-запрещено
					</param>
				</params>
				<return type="Number">
					текущее числовое значение режима редактирования формы
				</return>
			</method>
			<method name="Обновить" alias="Refresh">
				Обновить форму
				<params>
					<param name="Флаг" type="0;1" default="0">
						1-установить флаг модифицированности, 0-не устанавливать
					</param>
				</params>
			</method>
			<method name="ИспользоватьЗакладки" alias="TabCtrlState">
				Установить режим использования закладок в форме
				<params>
					<param name="Флаг" type="0;1">
						1-включает закладки в форме, 0-выключает
					</param>
				</params>
				<return type="0;1">
					текущее числовое значение режима использования закладок формы
				</return>
			</method>
			<method name="ИспользоватьСлой" alias="UseLayer">
				Установить режим отображения слоя в форме
				<params>
					<param name="ИмяСлоя" type="String">
						строковое выражение - название слоев формы
					</param>
					<param name="Режим" type="0;1;2" default="2">
						0-скрыть слой, 1-показать слой, 2-показать слой и скрыть все остальные
					</param>
				</params>
			</method>
			<method name="Заголовок" alias="Caption">
				Установить заголовок окна формы
				<params>
					<param name="Название" type="String" default="">
						новый заголовок окна формы
					</param>
					<param name="Режим" type="0;1" default="0">
						0-выводит заданный заголовок вместо стандартного заголовка окна, 1-выводит заданный заголовок вместе со стандартным заголовком окна
					</param>
				</params>
				<return type="String">
					текущий заголовок окна формы
				</return>
			</method>
			<method name="ПанельИнструментов" alias="ToolBar">
				Управление видимостью панели инструментов окна формы
				<params>
					<param name="Режим" type="0;1" default="">
						1-показать, 0-скрыть
					</param>
				</params>
				<return type="0;1">
					текущее состояние видимости панели инструментов окна формы
				</return>
			</method>
			<method name="КнопкаПоУмолчанию" alias="DefButton">
				Задает кнопку в форме, которая будет &quot;срабатывать&quot; при нажатии комбинации клавиш Ctrl+Enter
				<params>
					<param name="ИдентификаторКнопки" type="String">
						идентификатор одной из кнопок формы
					</param>
				</params>
			</method>
			<method name="ОбработкаВыбораСтроки" alias="ProcessSelectLine">
				Включает в форме списка обработку выбора строки предопределенной процедурой ПриВыбореСтроки
				<params>
					<param name="Флаг" type="0;1">
						1-включает, 0-выключает
					</param>
				</params>
			</method>
			<method name="ВыполнитьВыбор" alias="MakeChoice">
				Осуществляет выбор в форме, открытой для подбора или выбора значения
				<params>
					<param name="Знач">
						значение, которое выбирается
					</param>
				</params>
			</method>
			<method name="РежимВыбора" alias="ChoiceMode">
				<return type="0;1;2">
					0-не для выбора, 1-для выбора одного значения, 2-для выбора нескольких значений
				</return>
			</method>
			<method name="МодальныйРежим" alias="ModalMode">
				<return type="0;1">
					0-немодальный режим, 1-модальный режим
				</return>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				<params>
					<param name="ИмяРеквизита" type="String">
					</param>
				</params>
				<return type="Control">
					ссылку на элемент формы
				</return>
			</method>
			<method name="АктивныйЭлемент" alias="ActiveControl">
				<return type="String">
					идентификатор активного элемента диалога
				</return>
			</method>
			<method name="ТекущаяКолонка" alias="CurrentColumn">
				<return type="String">
					идентификатор текущей колонки многострочной части
				</return>
			</method>
			<method name="Закрыть" alias="Close">
				Закрыть форму
				<params>
					<param name="ЗапрСохр" type="0;1" default="1">
						0-закрыть форму без вопросов, 1-если изменен, то будет запрос о сохранении изменений
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Control" alias="ЭлементУправления">
		<methods>
			<method name="Видимость" alias="Visible">
				Установка режима отображения элемента диалога
				<params>
					<param name="Режим" type="0;1">
						1-отображается, 0-скрыт
					</param>
				</params>
				<return type="0;1">
					значение видимости элемента диалога
				</return>
			</method>
			<method name="Доступность" alias="ReadOnly">
				Установка режима редактирования элемента диалога
				<params>
					<param name="Режим" type="0;1" default="">
						1-разрешено, 0-запрещено
					</param>
				</params>
				<return type="0;1">
					значение режима редактирования элемента диалога
				</return>
			</method>
			<method name="Редактирование" alias="EnableEdit">
				Определяет возможность редактирования значения непосредственно в элементе диалога для полей ввода типа Число, Строка, Дата, Счет
				<params>
					<param name="Флаг" type="0;1" default="">
						1-редактируется как обычно, 0-не редактируется, но может выбираться кнопкой выбора
					</param>
				</params>
			</method>
			<method name="Цвет" alias="Color">
				Установка режима отображения цвета элемента диалога
				<params>
					<param name="Цвет" type="Number" default="">
						число, задающее цвет (-1 определяет цвет, заданный для формы)
					</param>
				</params>
				<return type="Number">
					текущее значение цвета элемента диалога
				</return>
			</method>
			<method name="Цвет" alias="Color">
				Установка режима отображения цвета элемента диалога
				<params>
					<param name="R" type="Number">
						число, задающее цвет красной компоненты
					</param>
					<param name="G" type="Number">
						число, задающее цвет зеленой компоненты
					</param>
					<param name="B" type="Number">
						число, задающее цвет синей компоненты
					</param>
				</params>
				<return type="Number">
					текущее значение цвета элемента диалога
				</return>
			</method>
			<method name="Маска" alias="Mask">
				Устанавливает/возвращает маску интерактивного ввода для строкового реквизита
				<params>
					<param name="СтрокаМаски" type="String" default="">
						строка с маской интерактивного ввода
					</param>
				</params>
				<return type="String">
					текущая маска интерактивного ввода для строковых реквизитов
				</return>
			</method>
			<method name="Заголовок" alias="Caption">
				Устанавливает заголовок элемента диалога
				<params>
					<param name="Название" type="String" default="">
						новый заголовок элемента диалога
					</param>
				</params>
				<return type="String">
					текущий заголовок элемента диалога
				</return>
			</method>
			<method name="ВыборГруппы" alias="SelectGroup">
				Установить режим выборки групп
				<params>
					<param name="Режим" type="0;1" default="1">
						1-выбирать группы, 0-не выбирать
					</param>
				</params>
				<return type="0;1">
					текущее значение режима выборки групп
				</return>
			</method>
			<method name="ВыполнятьФормулуТолькоПриИзменении" alias="ProcessFormulaOnlyWhenChanged">
				Установка режима выполнения формулы выбранного поля табличной части документа
				<params>
					<param name="Режим" type="0;1">
						1-формула вызывается только при изменении значения поля, 0-вызывается и при переходе между полями
					</param>
				</params>
			</method>
			<method name="УстановитьТип" alias="AssignType">
				Установить тип для элемента диалога, которому в конфигураторе назначен тип &quot;Неопределенный&quot;
				<params>
					<param name="Выражение" type="Number" default="">
						Тип значения этого выражения будет присвоен элементу диалога
					</param>
				</params>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для элемента диалога, которому в конфигураторе назначен тип &quot;Неопределенный&quot;
				<params>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления числа
					</param>
					<param name="Точность" type="Number" default="">
						число знаков числа после десятичной точки
					</param>
				</params>
			</method>
			<method name="НеИзменятьВид" alias="FixKind">
				Позволяет запретить пользователю изменять вид при выборе значения
				<params>
					<param name="Признак" type="0;1">
						0-разрешить изменение вида, 1-запретить изменение вида
					</param>
				</params>
				<return type="0;1">
					текущее значение признака
				</return>
			</method>
		</methods>
	</type>
	<type name="Report" alias="Отчет" base="FormContext">
		<attribs>
			<attrib name="Таблица" alias="Table" type="Table">
				Атрибут (только для чтения) представляет собой ссылку на объект типа &quot;Таблица&quot;
			</attrib>
		</attribs>
		<handlers>
			<method name="ВводНового" alias="InputNew">
				Предопределенная процедура при открытии формы отчета (обработки) и при восстановлении сохраненной настройки отчета (обработки)
			</method>
			<method name="ПриОткрытии" alias="OnOpen">
				Предопределенная процедура при открытии формы отчета (обработки)
				<params>
					<param name="ФлагЧтенияНастройки" type="0;1">
						признак считывания сохраненной настройки отчета (обработки)
						1-при открытии формы была восстановлена последняя сохраненная настройка отчета (обработки)
						0-при открытии формы настройка не восстановлена
					</param>
				</params>
			</method>
			<method name="ПриВыбореЯчейкиТаблицы" alias="OnSelectSheetCell">
				Предопределенная процедура обработки ячейки таблицы в режиме ввода данных (по двойному щелчку мыши или по нажатию клавиши &quot;Enter&quot; в табличном документе на выбранной ячейке)
				<params>
					<param name="Адрес" type="String">
						здесь в процедуру системой передается строковое значение имени области таблицы, если выбранная ячейка помечена в таблице как отдельная область, или адрес ячейки в формате &quot;R1C1:R2C2&quot;.
					</param>
					<param name="Значение">
						здесь в процедуру системой передается значение данной ячейки, а если диаграмма - значение выбранного элемента
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="ExtReport" alias="ВнешнийОтчет" base="Report">
		<methods>
			<method name="РасположениеФайла" alias="FilePath">
				Определить, где располагается данный внешний отчет
				<params>
					<param name="Путь" type="VarName">
						имя переменной, куда возвращается путь к файлу
					</param>
					<param name="Имя" type="VarName">
						имя переменной, куда возвращается имя файла
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="PeriodicConst" alias="ПериодическаяКонстанта">
		<methods>
			<method name="Получить" alias="GetValue">
				<params>
					<param name="Дата" type="Date" default="">
						дата | документ | позиция документа
					</param>
				</params>
				<return>
					значение периодической константы на заданную дату
				</return>
			</method>
			<method name="Установить" alias="SetValue">
				Установить значение периодической константы на дату
				<params>
					<param name="Дата" type="Date">
						дата, на которую требуется установить значение периодической константы
					</param>
					<param name="Значение">
						новое значение константы
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="AllConst" alias="Константа">
		<methods>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для константы неопределенного типа
				<params>
					<param name="ИмяКонстанты" type="String">
						наименованием константы неопределенного типа
					</param>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение константы по ее идентификатору
				<params>
					<param name="ИмяКонстанты" type="String">
						идентификатор константы
					</param>
					<param name="Значение">
						выражение, содержащее устанавливаемое значение
					</param>
				</params>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение константы по ее идентификатору
				<params>
					<param name="ИмяКонстанты" type="String">
						идентификатор константы
					</param>
				</params>
				<return>
					значение константы
				</return>
			</method>
		</methods>
	</type>
	<type name="RefPeriodic" alias="ПериодическийРеквизитСправочника">
		<methods>
			<method name="Получить" alias="GetValue">
				Получить значение периодического реквизита справочника на дату или документ
				<params>
					<param name="Дата" type="Date,Document,Position" default="">
						дата | документ | позиция документа
					</param>
				</params>
				<return>
					значение периодического реквизита справочника на заданную дату или документ
				</return>
			</method>
			<method name="Установить" alias="SetValue">
				Установить значение периодического реквизита справочника на заданную дату
				<params>
					<param name="Дата" type="Date">
						значение требуемой даты
					</param>
					<param name="Значение">
						устанавливаемое значение
					</param>
				</params>
			</method>
		</methods>
	</type>

	<type name="Reference" alias="Справочник" abstract="1">
		<attribs>
			<attrib name="Код" alias="Code" type="String">
				Доступ к значению реквизита &quot;Код&quot; выбранного элемента справочника
			</attrib>
			<attrib name="Наименование" alias="Description" type="String">
				Доступ к значению реквизита &quot;Наименование&quot; выбранного элемента справочника
			</attrib>
			<attrib name="Родитель" alias="Parent" type="Reference">
				Доступ к значению родительской группы выбранного элемента справочника
			</attrib>
			<attrib name="Владелец" alias="Owner" type="Reference">
				Доступ к владельцу выбранного элемента справочника в связанном справочнике
			</attrib>
		</attribs>
		<methods>
			<method name="ПрефиксКода" alias="CodePrefix">
				Установить текущий префикс кода для справочника
				<params>
					<param name="Префикс" type="String">
						новый префикс кодов элементов справочника
					</param>
				</params>
				<return type="String">
					текущий префикс кодов элементов справочника
				</return>
			</method>
			<method name="УстановитьНовыйКод" alias="SetNewCode">
				Установить новый код элемента справочника с заданным префиксом
				<params>
					<param name="Префикс" type="String">
						префикс кода элемента справочника
					</param>
				</params>
			</method>
			<method name="Вид" alias="Kind">
				Установить или считать текущее  название вида справочника
				<params>
					<param name="Название" type="String" default="">
						название вида справочника
					</param>
				</params>
				<return type="String">
					текущее название вида справочника
				</return>
			</method>
			<method name="ПредставлениеВида" alias="KindPresent">
				<return type="String">
					пользовательское представление вида справочника
				</return>
			</method>
			<method name="Уровень" alias="Level">
				<return type="Number">
					номер уровня текущего элемента справочника
				</return>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение реквизита по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						устанавливаемое значение реквизита
					</param>
				</params>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение реквизита по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение реквизита
				</return>
			</method>
			<method name="ЭтоГруппа" alias="IsGroup">
				<return type="0;1">
					1-элемент является группой, 0-обычный элемент
				</return>
			</method>
			<method name="ПринадлежитГруппе" alias="BelongsToGroup">
				<params>
					<param name="Группа" type="Reference">
						выражение со значением группы справочника
					</param>
				</params>
				<return type="0;1">
					1-элемент принадлежит указанной группе, 0-нет
				</return>
			</method>
			<method name="Выбран" alias="Selected">
				<return type="0;1" InExprOnly="1">
					1-элемент справочника выбран, 0-не выбран
				</return>
			</method>
			<method name="ТекущийЭлемент" alias="CurrentItem">
				<return type="Reference">
					значение позиционированного текущего элемента справочника
				</return>
			</method>
			<method name="ПолныйКод" alias="FullCode">
				<return type="String">
					полный код выбранного элемента справочника со всеми вышестоящими уровнями, разделенными символом /
				</return>
			</method>
			<method name="ПолноеНаименование" alias="FullDescr">
				<return type="String">
					полное наименование выбранного элемента справочника со всеми вышестоящими уровнями, разделенными символом /
				</return>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для реквизита неопределенного типа
				<params>
					<param name="ИмяРеквизита" type="String">
						наименование реквизита неопределенного типа
					</param>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="Блокировка" alias="Locking">
				Установить/прочитать режим блокировки
				<params>
					<param name="ВклВыкл" type="0;1" default="">
						1-включить, 0-выключить
					</param>
				</params>
				<return type="0;1">
					1-заблокирован, 0-свободен
				</return>
			</method>
		</methods>
	</type>

	<type name="ReferenceCO" alias="Справочник" base="Reference" creatable="Справочник,Reference">
		<methods>
			<method name="РегистрацияИзменений" alias="EnableRegisterUpdate" components="8">
				Включить/выключить режим регистрации изменений объекта
				<params>
					<param name="Флаг" type="0;1" default="">
						1-изменения должны регистрироваться, 0-не должны
					</param>
				</params>
				<return type="0;1">
					установленный до ее вызова  режим
				</return>
			</method>
			<method name="Записать" alias="Write">
				Записать элемент справочника
			</method>
			<method name="Выбрать" alias="Choose">
				Вызов диалога для выбора элемента справочника
				<params>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="ФормаСписка" type="String">
						идентификатор формы списка справочника
					</param>
				</params>
				<return type="0;1">
					1-элемент выбран, 0-не выбран
				</return>
			</method>
			<method name="ВидыДляВыбора" alias="KindsForChoice">
				Установка выбираемых видов для справочника неопределенного вида
				<params>
					<param name="СписокВидов" type="String">
						список видов выбираемых справочников, разделенных запятыми
					</param>
				</params>
				<return type="String">
					текущий список видов выбираемых справочников, разделенных запятыми
				</return>
			</method>
			<method name="ВыборГруппы" alias="SelectGroup">
				Установить режим выборки групп при интерактивном выборе элемента справочника
				<params>
					<param name="Режим" type="0;1" default="1">
						1-выбирать группы, 0-не выбирать
					</param>
				</params>
				<return type="0;1">
					текущее значение режима выборки групп
				</return>
			</method>
			<method name="НайтиЭлемент" alias="FindItem">
				Найти элемент справочника по значению
				<params>
					<param name="Элемент" type="Reference">
						выражение со значением элемента справочника
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="НайтиПоКоду" alias="FindByCode">
				Найти элемент справочника по коду
				<params>
					<param name="Код" type="String,Number">
						выражение со значением искомого кода
					</param>
					<param name="ФлагПоиска" type="0;1;2" default="0">
						0-поиск вне зависимости от родителя, 1-поиск внутри установленного подчинения (родителя), 2-поиск по полному коду через разделитель
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="НайтиПоНаименованию" alias="FindByDescr">
				Найти элемент справочника по наименованию
				<params>
					<param name="Наименование" type="String">
						наименование искомого элемента справочника
					</param>
					<param name="Режим" type="0;1" default="1">
						0-поиск вне зависимости от родителя, 1-поиск внутри установленного подчинения (родителя)
					</param>
					<param name="ФлагПоиска" type="0;1" default="0">
						1-найти точное соответствие, 0-найти наименование по первым символам
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="НайтиПоРеквизиту" alias="FindByAttribute">
				Найти элемент справочника по значению реквизита
				<params>
					<param name="ИмяРеквизита" type="RefSort">
						строка с наименованием реквизита
					</param>
					<param name="Значение">
						значение реквизита для поиска
					</param>
					<param name="ФлагГлобальногоПоиска" type="0;1">
						 0-поиск выполняется в пределах подчинения справочника, 1-поиск выполняется по всему справочнику
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ВыбратьЭлементы" alias="SelectItems">
				Открыть выборку элементов справочника
				<params>
					<param name="Режим" type="0;1" default="1">
						0-без учета иерархии, 1-с учетом иерархии
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один элемент, 0-действие не выполнено или в выборке нет ни одного элемента
				</return>
			</method>
			<method name="ВыбратьЭлементыПоРеквизиту" alias="SelectItemsByAttribute">
				Открыть выборку элементов справочника по значению реквизита
				<params>
					<param name="ИмяРеквизита" type="RefSort">
						строка с именем реквизита, по которому выполняется выборка
					</param>
					<param name="Значение">
						значение реквизита для выборки
					</param>
					<param name="РежимИерархии" type="0;1" default="1">
						0-без учета иерархии, 1-с учетом иерархии
					</param>
					<param name="РежимГрупп" type="0;1" default="1">
						1-среди групп справочника, 0-только среди элементов справочника
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один элемент, 0-действие не выполнено или в выборке нет ни одного элемента
				</return>
			</method>
			<method name="ОбратныйПорядок" alias="BackwardOrder">
				Установить порядок выборки элементов справочника
				<params>
					<param name="Режим" type="0;1" default="">
						1-выбирать в обратном порядке, 0-выбирать в прямом порядке
					</param>
				</params>
				<return type="0;1">
					текущее значение порядка выборки элементов справочника
				</return>
			</method>
			<method name="ПолучитьЭлемент" alias="GetItem">
				Получить из выборки следующий элемент справочника
				<params>
					<param name="Режим" type="0;1" default="1">
						1-включать в выборку подчиненные элементы, 0-не включать
					</param>
				</params>
				<return type="0;1">
					1-элемент выбран, 0-не выбран
				</return>
			</method>
			<method name="ИспользоватьДату" alias="UseDate">
				Установить дату выборки периодических реквизитов справочника
				<params>
					<param name="Дата" type="Date">
						значение типа дата
					</param>
					<param name="УстСразу" type="0;1" default="0">
						1-дата будет установлена уже в текущей выборке, 0-дата будет установлена при следующем открытии выборки
					</param>
				</params>
				<return type="Date">
					Текущее значение используемой даты
				</return>
			</method>
			<method name="ИспользоватьВладельца" alias="UseOwner">
				Установить выборку по элементу связанного справочника
				<params>
					<param name="Владелец" type="Reference">
						элемент связанного справочника, которому подчинен данный справочник
					</param>
					<param name="ФлагИзменения" type="0;1" default="1">
						1-пользователь может изменить владельца интерактивно, 0-не может
					</param>
				</params>
				<return type="Reference">
					значение текущего владельца
				</return>
			</method>
			<method name="ИспользоватьРодителя" alias="UseParent">
				Установить выборку  элементов по группе справочника
				<params>
					<param name="Родитель" type="Reference" default="">
						группа справочника, среди элементов которой делается выборка
					</param>
					<param name="ФлагИзменения" type="0;1" default="1">
						1-пользователь может изменить родителя интерактивно, 0-не может
					</param>
				</params>
				<return type="Reference">
					значение текущего родителя
				</return>
			</method>
			<method name="ВключатьПодчиненные" alias="IncludeChildren">
				Установить флаг выборки всех подчиненных элементов
				<params>
					<param name="Число" type="0;1" default="1">
						1-включать в выборку подчиненные элементы, 0-не включать
					</param>
				</params>
				<return type="0;1">
					Текущее значение режима выборки подчиненных элементов
				</return>
			</method>
			<method name="ПорядокКодов" alias="OrderByCode">
				Установить порядок выборки элементов справочника по возрастанию кода
			</method>
			<method name="ПорядокНаименований" alias="OrderByDescr">
				Установить порядок выборки элементов справочника по возрастанию наименования
			</method>
			<method name="ПорядокРеквизита" alias="OrderByAttribute">
				Установить порядок выборки элементов справочника по возрастанию значения реквизита
				<params>
					<param name="ИмяРеквизита" type="RefSort">
						имя реквизита, по возрастанию значений которого выполняется выборка
					</param>
				</params>
			</method>
			<method name="Новый" alias="New">
				Добавить новый элемент справочника
			</method>
			<method name="НоваяГруппа" alias="NewGroup">
				Добавить новую группу справочника
			</method>
			<method name="Удалить" alias="Delete">
				Удалить элемент справочника
				<params>
					<param name="Режим" type="0;1" default="1">
						1-непосредственное удаление, 0-пометка на удаление
					</param>
				</params>
			</method>
			<method name="СнятьПометкуУдаления" alias="ClearDeleteMark">
				Снять пометку удаления элемента справочника
			</method>
			<method name="ПометкаУдаления" alias="DeleteMark">
				<return type="0;1" InExprOnly="1">
					1-элемент помечен на удаление, 0-иначе
				</return>
			</method>
		</methods>
	</type>

	<type name="SubList" alias="СправочникФормаСписка" base="Reference,FormContext">
		<methods>
			<method name="ИспользоватьДату" alias="UseDate">
				Установить дату выборки периодических реквизитов формы списка справочника
				<params>
					<param name="Дата" type="Date">
						значение типа дата
					</param>
				</params>
			</method>
			<method name="ИспользоватьРодителя" alias="UseParent">
				Установить родителя для формы списка справочника
				<params>
					<param name="Родитель" type="Reference">
						группа справочника
					</param>
					<param name="ФлагИзменения" type="0;1" default="1">
						1-пользователь может изменить родителя интерактивно, 0-не может
					</param>
				</params>
				<return type="Reference">
					значение текущего родителя для формы списка справочника
				</return>
			</method>
			<method name="ИспользоватьВладельца" alias="UseOwner">
				Установить владельца для формы списка подчиненного справочника
				<params>
					<param name="Владелец" type="Reference" default="">
						элемент связанного справочника, которому подчинен данный справочник
					</param>
					<param name="ФлагИзменения" type="0;1" default="1">
						1-пользователь может изменить владельца интерактивно, 0-не может
					</param>
				</params>
				<return type="Reference">
					значение текущего владельца для справочника
				</return>
			</method>
			<method name="ИерархическийСписок" alias="HierarchicalList">
				Установить режим иерархического списка справочника
				<params>
					<param name="ФлагИерархСписка" type="0;1">
						1-иерархический список, 0-неиерархический список
					</param>
					<param name="ФлагИзменения" type="0;1" default="1">
						1-пользователь может изменить иерархичность интерактивно, 0-не может
					</param>
				</params>
				<return type="0;1">
					текущий флаг иерархического списка для формы списка справочника
				</return>
			</method>
			<method name="РедактироватьВДиалоге" alias="EditInForm">
				Установить способ редактирования элементов справочника
				<params>
					<param name="Способ" type="0;1" default="">
						1-в диалоге, 0-в строке
					</param>
					<param name="Разрешение" type="0;1" default="">
						Флаг разрешения пользователю менять способ редактирования: 1-разрешить, 0-запретить
					</param>
				</params>
				<return type="0;1">
					значение установленного на данный момент способа редактирования элементов справочника
				</return>
			</method>
			<method name="СохранениеПериодическихРеквизитов" alias="PeriodicAttributesSaving">
				Установить режим отображения диалога сохранения периодических реквизитов при записи элемента справочника
				<params>
					<param name="ВариантВызова" type="Number" default="">
						вариант вызова метода
					</param>
					<param name="Список" type="String" default="">
						Строковое выражение, в котором через запятую перечислены имена периодических реквизитов справочника
					</param>
				</params>
				<return type="String">
					строку, представляющую собой список разделенных запятыми идентификаторв периодических реквизитов
				</return>
			</method>
			<method name="Сортировка" alias="SortOrder">
				Установить способ сортировки элементов справочника
				<params>
					<param name="Способ" type="String">
						строка с именем устанавливаемой сортировки
					</param>
					<param name="Разрешение" type="0;1" default="1">
						Флаг разрешения пользователю менять способ сортировки: 1-разрешить, 0-запретить
					</param>
				</params>
				<return type="String">
					значение установленного на данный момент способа сортировки элементов
				</return>
			</method>
			<method name="УстановитьОтбор" alias="SetSelection">
				Установить отбор списка справочника
				<params>
					<param name="ИмяОтбора" type="RefSel" default="">
						строка с именем реквизита справочника по которому возможен отбор
					</param>
					<param name="ЗначениеОтбора" default="">
						Значение отбора
					</param>
				</params>
			</method>
			<method name="ПолучитьОтбор" alias="GetSelection">
				<params>
					<param name="ИмяОтбора" type="VarName">
						имя переменной, куда вернется строковое значение имени отбора
					</param>
					<param name="ЗначениеОтбора" type="VarName">
						имя переменной, куда вернется значение отбора
					</param>
				</params>
				<return>
					текущее значение отбора списка справочника
				</return>
			</method>
			<method name="ВидыОтбора" alias="KindsOfSelection">
				Установить доступные виды отборов списка справочника
				<params>
					<param name="СписокИменОтборов" type="String" default="">
						строка со списком (через запятую) тех реквизитов, отбор по которым допускается, или &quot;*&quot; - для всех видов отборов
					</param>
				</params>
				<return type="String">
					Строковое значение, содержащее текущий список имен отборов, разделенных запятыми
				</return>
			</method>
			<method name="ЗакладкиОтбора" alias="TabCtrlSelection">
				Установить закладки для интерактивного осуществления отбора
				<params>
					<param name="ИмяОтбора" type="RefSel">
						строка с именем отбора
					</param>
					<param name="ЗначениеОтбора" default="">
						значение отбора, который будет установлен первоначально
					</param>
				</params>
			</method>
			<method name="ИспользоватьСписокЭлементов" alias="UseItemList">
				Реализует фильтрацию элементов справочника, используя нединамический фильтр
				<params>
					<param name="СписокЗначений" type="ValueList" default="">
						список элементов справочника, выбранных для просмотра
					</param>
				</params>
			</method>
			<method name="ВыборГруппы" alias="SelectGroup">
				Устанавливает режим выборки групп
				<params>
					<param name="Режим" type="0;1" default="">
						1-выбирать группы, 0-не выбирать
					</param>
				</params>
				<return type="0;1">
					текущее значение режима выборки групп
				</return>
			</method>
			<method name="ПросмотрИстории" alias="ViewHistory">
				Установить список периодических реквизитов, просмотр истории которых допускается
				<params>
					<param name="СписокРеквизитов" type="String" default="">
						список идентификаторов (через запятую) тех реквизитов, просмотр истории которых допускается
					</param>
				</params>
				<return type="String">
					текущий список реквизитов, просмотр истории которых допускается
				</return>
			</method>
		</methods>
		<handlers>
			<method name="ПриЗаписи" alias="OnWrite">
				Предопределенная процедура при интерактивной записи строки списка справочника
				<params>
					<param name="СписокПериодРекв" type="String">
						строка со списком изменяемых периодических реквизитов справочника
					</param>
				</params>
			</method>
			<method name="ПриВводеСтроки" alias="OnNewLine">
				Предопределенная процедура при интерактивном вводе новой строки списка справочника
			</method>
			<method name="ПриРедактированииНовойСтроки" alias="OnEditNewLine">
				Предопределенная процедура при интерактивном редактировании новой строки списка справочника
			</method>
			<method name="ПриНачалеРедактированияСтроки" alias="OnStartEditLine">
				Предопределенная процедура при начале интерактивного редактирования существующей строки списка справочника
			</method>
			<method name="ПриВыбореСтроки" alias="OnSelectLine">
				Предопределенная процедура при выборе строки списка
			</method>
			<method name="ПриПереносеЭлементаВДругуюГруппу" alias="OnMoveIntoOtherGroup">
				Предопределенная процедура при интерактивном переносе элемента справочника в другую группу
				<params>
					<param name="Элемент" type="Reference">
						элемент справочника
					</param>
					<param name="Группа" type="Reference">
						группа, в которую переносится элемент справочника
					</param>
				</params>
			</method>
			<method name="ПриВыбореРодителя" alias="OnSetParent">
				Предопределенная процедура при интерактивной смене родительской группы справочника (выбор следующего или предыдущего уровеня)
				<params>
					<param name="Элемент" type="Reference">
						значение элемента справочника, который интерактивно устанавливается в качестве родителя
					</param>
				</params>
			</method>
			<method name="ПриВыбореВладельца" alias="OnSetOwner">
				Предопределенная процедура при интерактивном выборе владельца подчиненного справочника (при интерактивной смене владельца, т.е. смене позиции в справочнике-владельце, которая приводит к смене отображаемых в подчиненном справочнике элементов)
				<params>
					<param name="Элемент" type="Reference">
						значение элемента справочника, который интерактивно устанавливается в качестве владельца подчиненного справочника
					</param>
				</params>
			</method>
			<method name="ПриСменеИерархии" alias="OnHierarchyChange">
				Предопределенная процедура при интерактивной смене режима отображения иерархии справочника (пункт меню &quot;Иерархический список&quot;)
				<params>
					<param name="Способ" type="0;1">
						значение устанавливаемого способа просмотра справочника:
						1-иерархический список
						0-все элементы сразу
					</param>
				</params>
			</method>
			<method name="ПриУстановкеОтбора" alias="OnSetSelection">
				Предопределенная процедура при интерактивной установке отбора любым способом (отбор, быстрый отбор, отбор по значению, история отбора) и при отключении отбора
				<params>
					<param name="ТипОтбора" type="RefSel">
						строковое значение - тип устанавливаемого отбора (имя реквизита справочника, по которому устанавливается отбор)
					</param>
					<param name="ЗначениеОтбора">
						устанавливаемое значение отбора
					</param>
				</params>
			</method>
		</handlers>
	</type>

	<type name="Subconto" alias="СправочникФорма" base="Reference,FormContext">
		<methods>
			<method name="Записать" alias="Write">
				Записать элемент справочника
			</method>
			<method name="Модифицированность" alias="Modify">
				<return type="0;1">
					1-реквизиты формы элемента справочника были изменены, 0-иначе
				</return>
			</method>
			<method name="ИспользоватьДату" alias="UseDate">
				Установить дату, на которую будут записываться периодические реквизиты элемента справочника
				<params>
					<param name="Дата" type="Date">
						Дата, на которую будут записываться периодические реквизиты
					</param>
					<param name="Обновить" type="0;1" default="0">
						1-обновить периодические реквизиты формы на заданную дату, 0-не обновлять
					</param>
				</params>
			</method>
			<method name="СохранениеПериодическихРеквизитов" alias="PeriodicAttributesSaving">
				Установить режим отображения диалога сохранения периодических реквизитов
				<params>
					<param name="ВариантВызова" type="Number">
						вариант вызова метода
					</param>
					<param name="Список" type="String" default="">
						выражение, в котором через запятую перечислены имена периодических реквизитов справочника
					</param>
				</params>
				<return type="String">
					список разделенных запятыми идентификаторв периодических реквизитов
				</return>
			</method>
			<method name="ПросмотрИстории" alias="ViewHistory">
				Установить список периодических реквизитов, просмотр истории которых допускается
				<params>
					<param name="СписокРеквизитов" type="String">
						список (через запятую) реквизитов, просмотр истории которых допускается
					</param>
				</params>
				<return type="String">
					текущий список реквизитов, просмотр истории которых допускается
				</return>
			</method>
		</methods>
		<handlers>
			<method name="ВводНового" alias="InputNew">
				Предопределенная процедура при интерактивном вводе нового элемента справочника
				<params>
					<param name="ПризнКопирования" type="0;1">
						признак того, что объект введен копированием
						1-объект введен копированием, 0-просто новый объект
					</param>
					<param name="ОбъектКопирования" type="Reference">
						объект, который был скопирован
					</param>
				</params>
			</method>
			<method name="ПриЗаписи" alias="OnWrite">
				Предопределенная процедура при интерактивной записи элемента справочника
				<params>
					<param name="СписокПериодРекв" type="String">
						строка со списком изменяемых периодических реквизитов справочника
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="Document" alias="Документ" abstract="1">
		<attribs>
			<attrib name="НомерДок" alias="DocNum" type="String">
				Позволяет получать и устанавливать номер документа
			</attrib>
			<attrib name="ДатаДок" alias="DocDate" type="Date">
				Позволяет получать и устанавливать дату документа
			</attrib>
			<attrib name="НомерСтроки" alias="LineNum" type="Number">
				Доступ к номеру строки многострочной части документа
			</attrib>
			<attrib name="Операция" alias="Operation" type="Operation">
				Доступ к бухгалтерской операции документа
			</attrib>
		</attribs>
		<methods>
			<method name="Вид" alias="Kind">
				<return type="String">
					строку с названием вида документа
				</return>
			</method>
			<method name="ПредставлениеВида" alias="KindPresent">
				<return type="String">
					пользовательское представление вида документа
				</return>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение реквизита по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						устанавливаемое значение реквизита
					</param>
				</params>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение реквизита по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение реквизита
				</return>
			</method>
			<method name="Выбран" alias="Selected">
				<return type="0;1" InExprOnly="1">
					1-документ выбран, 0-не выбран
				</return>
			</method>
			<method name="Проведен" alias="IsTransacted">
				<return type="0;1" InExprOnly="1">
					1-документ проведен, 0-не проведен
				</return>
			</method>
			<method name="ТекущийДокумент" alias="CurrentDocument">
				<return type="Document">
					значение позиционированного текущего документа
				</return>
			</method>
			<method name="Итог" alias="Total">
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита табличной части документа
					</param>
				</params>
				<return type="Number">
					сумму значений реквизита по всем строкам табличной части документа
				</return>
			</method>
			<method name="КоличествоСтрок" alias="LinesCnt">
				<return type="Number">
					число строк в многострочной части документа
				</return>
			</method>
			<method name="ПолучитьСтрокуПоНомеру" alias="GetLineByNum">
				Устанавливает в качестве текущей строки строку с заданным номером
				<params>
					<param name="Номер" type="Number">
						номер строки
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ВыбратьСтроки" alias="SelectLines">
				Открыть выборку строк многострочной части документа
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы одна строка, 0-действие не выполнено или в выборке нет ни одной строки
				</return>
			</method>
			<method name="ПолучитьСтроку" alias="GetLine">
				Получить из выборки следующую строку табличной части документа
				<return type="0;1">
					1-строка выбрана, 0-иначе
				</return>
			</method>
			<method name="УстановитьНовыйНомер" alias="SetNewNum">
				Установить новый номер документа с заданным префиксом
				<params>
					<param name="Префикс" type="String">
						префикс номера документа
					</param>
				</params>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для реквизита неопределенного типа
				<params>
					<param name="ИмяРеквизита" type="String">
						имя реквизита неопределенного типа, как он назван в конфигураторе
					</param>
					<param name="ИмяТипа" type="String">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="НоваяСтрока" alias="NewLine">
				Добавить новую строку в документ
			</method>
			<method name="УдалитьСтроку" alias="DeleteLine">
				Удалить текущую строку документа
			</method>
			<method name="УдалитьСтроки" alias="DeleteLines">
				Удаляет сразу все строки из многострочной части документа
			</method>
			<method name="СортироватьСтроки" alias="SortLines">
				Сортировать многострочную часть документа по реквизитам
				<params>
					<param name="Колонки" type="String">
						перечисленные через запятую реквизиты многострочной части документа, по которым следует сортировать
					</param>
				</params>
			</method>
			<method name="Блокировка" alias="Locking">
				Установить/прочитать режим блокировки
				<params>
					<param name="ВклВыкл" type="0;1" default="">
						1-включить, 0-выключить
					</param>
				</params>
				<return type="0;1">
					1-заблокирован, 0-свободен
				</return>
			</method>
			<method name="ПолучитьПозицию" alias="GetPosition">
				<return type="Position">
					позицию документа					
				</return>
			</method>
			<method name="ПринадлежитПоследовательности" alias="BelongToSequence">
				Определить, принадлежит ли последовательности данный документ
				<params>
					<param name="Последов" type="String">
						строковое выражение, определяющее Последовательность
					</param>
					<param name="Значение" type="0;1" default="">
						1-документ принудительно устанавливается как принадлежащий последовательности, 0-документ принудительно устанавливается как не принадлежащий последовательности
					</param>
				</params>
				<return type="0;1">
					1-документ принадлежит последовательности, 0-не принадлежит
				</return>
			</method>
			<method name="АвтоВремяНачалоДня" alias="AutoTimeBegOfDay">
				Установить режим записи времени на начало дня для новых документов
			</method>
			<method name="АвтоВремяКонецДня" alias="AutoTimeEndOfDay">
				Установить режим записи времени на конец дня для новых документов
			</method>
			<method name="АвтоВремяТекущее" alias="AutoTimeCurrent">
				Установить режим записи времени на текущее время дня для новых документов
			</method>
			<method name="АвтоВремяОтключить" alias="AutoTimeOff">
				Отключить режим автоматической установки времени для новых документов, при этом новые документы заносятся с временем, устанавливаемым при помощи метода УстановитьВремя
			</method>
			<method name="АвтоВремяПослеТА" alias="AutoTimeAfterAP">
				если дата документа совпадает с датой ТА, то новому документу автоматически записывается время после ТА
			</method>
			<method name="Провести" alias="MakeActions">
				Выполнить проведение документа
				<params>
					<param name="Режим" type="0;1;2;3" default="0">
						0-без сдвига ТА, 1-непроведенный реальным временем, 2-проведенный реальным временем, 3-любой реальным временем
					</param>
					<param name="Знач" default="">
						выражение произвольного типа, которое передается при запуске предопределенной процедуры ОбработкаПроведения
					</param>
				</params>
				<return type="0;1">
					1-проведение документа выполнено, 0-иначе
				</return>
			</method>
			<method name="СравнитьТА" alias="CompareWithAP">
				Сравнить дату и время документа с Точкой актуальности (ТА) итогов
				<return type="-2;-1;0;1">
					-1-меньше ТА, 0-совпадает с ТА, 1-больше ТА, -2-новый документ
				</return>
			</method>
			<method name="СуществуетОперация" alias="OperExist">
				<params>
					<param name="Признак" type="Number" default="">
						1- существует операция, 0-не существует операции
					</param>
				</params>
				<return type="0;1">
					1-существует операция, 0-не существует
				</return>
			</method>
			<method name="ВыгрузитьТабличнуюЧасть" alias="UnloadTable">
				Выгрузить многострочную часть документа в таблицу значений
				<params>
					<param name="ТаблЗнач" type="VarName">
						ТаблицаЗначений или СписокЗначений куда выгружается многострочная часть документа
					</param>
					<param name="Колонки" type="String" default="">
						Список колонок через запятую
					</param>
				</params>
			</method>
			<method name="ЗагрузитьТабличнуюЧасть" alias="LoadTable">
				Загрузить многострочную часть документа из таблицы значений
				<params>
					<param name="ТаблЗнач" type="ValueTable">
						ТаблицаЗначений, откуда загружается многострочная часть документа
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="DocForm" alias="ДокументФорма" base="Document,FormContext">
		<methods>
			<method name="ПриЗаписиПерепроводить" alias="ReMakeActionsWhenWrite">
				Установить режим перепроведения при записи проведенного документа
				<params>
					<param name="Режим" type="0;1">
						1-обязательно перепроведение, 0-не обязательно
					</param>
				</params>
			</method>
			<method name="ПроводитьПослеТА" alias="PostingAfterTA">
				Установить режим проведения документа после ТА
				<params>
					<param name="ФлагДляНеПров" type="-1;0;1">
						режим проведения документа после ТА. -1-всегда задним числом, 0-запрашивать режим проведения, 1-проводить в реальном потоке времени
					</param>
					<param name="ФлагДляПров" type="-1;1">
						режим перепроведения документа после ТА. -1- всегда задним числом, 1-проводить в потоке
					</param>
				</params>
				<return type="Number">
					текущее значение режима перепроведения документа
				</return>
			</method>
			<method name="АктивизироватьСтроку" alias="ActivateLine">
				Установить курсор на указанной строке  многострочной части
				<params>
					<param name="НомСтроки" type="Number" default="">
						Номер строки, которую следует активизировать
					</param>
				</params>
			</method>
			<method name="ИзменениеПорядкаСтрок" alias="ChangeLinesOrder">
				Разрешить/запретить изменять порядок строк в форме документа
				<params>
					<param name="Разрешить" type="0;1" default="">
						1-разрешить, 0-запретить
					</param>
				</params>
				<return type="0;1">
					режима изменения порядка строк до исполнения метода: 1-разрешено, 0-запрещено
				</return>
			</method>
			<method name="Модифицированность" alias="Modify">
				Возвращает признак изменения реквизитов текущей формы документа
				<return type="0;1">
					1-реквизиты были изменены, 0-иначе
				</return>
			</method>
			<method name="Записать" alias="Write">
				Записать документ в базу данных
			</method>
		</methods>
		<handlers>
			<method name="ВводНового" alias="InputNew">
				Предопределенная процедура при интерактивном вводе нового документа
				<params>
					<param name="ПризнКопирования" type="Number">
						1-объект введен копированием, 0-просто новый объект
					</param>
					<param name="ОбъектКопирования">
						объект, который был скопирован
					</param>
				</params>
			</method>
			<method name="ВводНаОсновании" alias="InputCausedBy">
				Предопределенная процедура при интерактивном вводе нового документа на основании
				<params>
					<param name="ДокументОснование" type="Document">
						значение типа Документ
					</param>
				</params>
			</method>
			<method name="ПриЗаписи" alias="OnWrite">
				Предопределенная процедура при интерактивной записи документа
			</method>
			<method name="ПриВводеСтроки" alias="OnNewLine">
				Предопределенная процедура при интерактивном вводе строки документа
			</method>
			<method name="ПриРедактированииНовойСтроки" alias="OnEditNewLine">
				Предопределенная процедура при интерактивном редактировании новой строки документа
			</method>
			<method name="ПриНачалеРедактированияСтроки" alias="OnStartEditLine">
				Предопределенная процедура при интерактивном редактировании строки документа
			</method>
			<method name="ПриОкончанииРедактированияСтроки" alias="OnFinishLineEdit">
				Предопределенная процедура при окончании редактирования строки многострочной части документа
				<params>
					<param name="НовСтр" type="Number">
						флаг новой строки. Число: 1-если произошло окончание ввода новой строки, 0-если произошло окончание редактирования существующей строки.
					</param>
				</params>
			</method>
			<method name="ПриИзмененииПорядкаСтрок" alias="OnChangeLinesOrder">
				Предопределенная процедура при изменении порядка строк многострочной части документа
				<params>
					<param name="Действие" type="Number">
						-1-перемещение строки вверх, 1-перемещение строки вниз, 0-перенумерация строк
					</param>
				</params>
			</method>
			<method name="ПриУдаленииСтроки" alias="OnDeleteLine">
				Предопределенная процедура при интерактивном удалении строки документа
			</method>
		</handlers>
	</type>
	<type name="DocumentCO" alias="Документ" base="Document" creatable="Document,Документ">
		<methods>
			<method name="РегистрацияИзменений" alias="EnableRegisterUpdate" components="8">
				Включить/выключить режим регистрации изменений объекта
				<params>
					<param name="Флаг" type="0;1" default="">
						1-изменения должны регистрироваться, 0-не должны
					</param>
				</params>
				<return type="0;1">
					установленный до ее вызова  режим
				</return>
			</method>
			<method name="Выбрать" alias="Choose">
				Вызов диалога для выбора документа
				<params>
					<param name="Подсказка" type="String">
						текст заголовка окна диалога ввода
					</param>
					<param name="ФормаЖурнала" type="String">
						идентификатор формы журнала документа, используемой для выбора
					</param>
					<param name="КомуПодч" type="Document" default="">
						Используется при открытии выбора по журналу подчиненных документов
					</param>
				</params>
				<return type="0;1">
					1-документ выбран, 0-не выбран
				</return>
			</method>
			<method name="ВидыДляВыбора" alias="KindsForChoice">
				Установка выбираемых видов для объекта типа документ неопределенного вида
				<params>
					<param name="СписокВидов" type="String" default="">
						список видов выбираемых документов, разделенных запятыми
					</param>
				</params>
				<return type="String">
					текущий список видов выбираемых документов
				</return>
			</method>
			<method name="НайтиДокумент" alias="FindDocument">
				Найти документ по значению
				<params>
					<param name="Документ" type="Document">
						выражение со значением типа &quot;Документ&quot;
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="НайтиПоНомеру" alias="FindByNum">
				Найти документ по номеру
				<params>
					<param name="Номер" type="String">
						строка с номером искомого документа
					</param>
					<param name="Дата" type="Date">
						дата из диапазона, в котором нужно искать документ
					</param>
					<param name="ИдентВида" type="String" default="">
						идентификатор вида документа или идентификатор Нумератора
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ВыбратьДокументы" alias="SelectDocuments">
				Открыть выборку документов в интервале дат
				<params>
					<param name="Дата1" type="Date" default="">
						дата | документ | позиция документа начала выборки документов
					</param>
					<param name="Дата2" type="Date" default="">
						дата | документ | позиция документа конца выборки документов
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один документ, 0-действие не выполнено или в выборке нет ни одного документа
				</return>
			</method>
			<method name="ВыбратьПодчиненныеДокументы" alias="SelectChildDocs">
				Открыть выборку документов, подчиненных заданному, в интервале дат
				<params>
					<param name="Дата1" type="Date" default="">
						дата | документ | позиция документа начала выборки документов
					</param>
					<param name="Дата2" type="Date" default="">
						дата | документ | позиция документа конца выборки документов
					</param>
					<param name="Докум" type="Document">
						документ, подчиненные которому будут включаться в выборку
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один документ, 0-действие не выполнено или в выборке нет ни одного документа
				</return>
			</method>
			<method name="ВыбратьПоЗначению" alias="SelectByValue">
				Открыть выборку документов в интервале дат с заданным значением реквизита отбора
				<params>
					<param name="Дата1" type="Date" default="">
						дата | документ | позиция документа начала выборки документов
					</param>
					<param name="Дата2" type="Date" default="">
						дата | документ | позиция документа конца выборки документов
					</param>
					<param name="ИмяОтбора" type="DocSel">
						название ОбщегоРеквизита либо ГрафыОтбора
					</param>
					<param name="Знач">
						значение отбора, по которому строится выборка документов
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один документ, 0-действие не выполнено или в выборке нет ни одного документа
				</return>
			</method>
			<method name="ВыбратьПоНомеру" alias="SelectByNum">
				Открыть выборку документов в интервале дат по номеру
				<params>
					<param name="Номер" type="String">
						строка, содержащая номер искомых документов
					</param>
					<param name="Дата" type="Date">
						любая дата из диапазона, в котором нужно выбрать документы
					</param>
					<param name="ИдентВида" type="String" default="">
						идентификатор вида документа или идентификатор Нумератора
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один документ, 0-действие не выполнено или в выборке нет ни одного документа
				</return>
			</method>
			<method name="ВыбратьПоПоследовательности" alias="SelectBySequence">
				Открыть выборку документов в интервале дат по заданной последовательности
				<params>
					<param name="Дата1" type="Date,Document,Position">
						дата | документ | позиция документа начала выборки документов
					</param>
					<param name="Дата2" type="Date,Document,Position">
						дата | документ | позиция документа конца выборки документов
					</param>
					<param name="КодПосл" type="String">
						Название используемой Последовательности
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один документ, 0-действие не выполнено или в выборке нет ни одного документа
				</return>
			</method>
			<method name="ОбратныйПорядок" alias="BackwardOrder">
				Установить порядок выборки документов во времени
				<params>
					<param name="Режим" type="0;1" default="">
						1-в порядке убывания, 0-в порядке возрастания
					</param>
				</params>
				<return type="0;1">
					значение порядка выборки до вызова
				</return>
			</method>
			<method name="УстановитьФильтр" alias="SetFilter">
				Назначить фильтр выборки документов
				<params>
					<param name="Проведенные" type="0;1" default="">
						0-не отбирать проведенные документы, 1-отбирать
					</param>
					<param name="НеПроведенные" type="0;1" default="">
						0-не отбирать непроведенные документы, 1-отбирать
					</param>
					<param name="НеИмеющиеПризнаковУчета" type="0;1" default="">
						0-не отбирать документы, не имеющие признаков учета, 1-отбирать
					</param>
					<param name="Оперативные" type="0;1;2" default="">
						0-не отбирать оперативные документы, 1-не влияет на выборку, 2-если оперативный документ, то отбирать
					</param>
					<param name="Расчетные" type="0;1;2" default="">
						0-не отбирать расчетные документы, 1-не влияет на выборку, 2-если расчетный документ, то отбирать
					</param>
					<param name="Бухг" type="0;1;2" default="">
						0-не отбирать бухгалтерские документы, 1-не влияет на выборку, 2-если бухгалтерский документ, то отбирать
					</param>
				</params>
			</method>
			<method name="ПолучитьДокумент" alias="GetDocument">
				Получить из выборки следующий документ
				<return type="0;1">
					1-документ выбран, 0-не выбран
				</return>
			</method>
			<method name="Новый" alias="New">
				Начать ввод нового документа
			</method>
			<method name="ПрефиксНомера" alias="NumPrefix">
				Установить новый префикс номера для документа
				<params>
					<param name="Префикс" type="String">
						новый префикс номера документа
					</param>
				</params>
				<return type="String">
					текущий префикс номера документа
				</return>
			</method>
			<method name="Записать" alias="Write">
				Записать документ в базу данных
			</method>
			<method name="Удалить" alias="Delete">
				Удалить документ
				<params>
					<param name="Режим" type="0;1" default="1">
						0-пометка на удаление, 1-непосредственное удаление
					</param>
				</params>
			</method>
			<method name="СнятьПометкуУдаления" alias="ClearDeleteMark">
				Снять пометку удаления документа
			</method>
			<method name="ПометкаУдаления" alias="DeleteMark">
				<return type="0;1">
					1-документ помечен на удаление, 0-не помечен
				</return>
			</method>
			<method name="УстановитьВремя" alias="SetTime">
				Установить время документа
				<params>
					<param name="Часы" type="Number">
						число часов
					</param>
					<param name="Минуты" type="Number">
						число минут
					</param>
					<param name="Секунды" type="Number">
						число секунд
					</param>
				</params>
			</method>
			<method name="ПолучитьВремя" alias="GetTime">
				Прочитать время документа
				<params>
					<param name="Часы" type="VarName" default="">
						переменная для приема часа записи документа
					</param>
					<param name="Минуты" type="VarName" default="">
						переменная для приема минут записи документа
					</param>
					<param name="Секунды" type="VarName" default="">
						переменная для приема секунд записи документа
					</param>
				</params>
				<return type="String">
					значение времени записи документа в виде &quot;ЧЧ.ММ.СС&quot;
				</return>
			</method>
			<method name="ИспользоватьЖурнал" alias="UseJournal">
				Использовать журнал для отбора документов и доступа к графам
				<params>
					<param name="Журнал" type="String">
						идентификатор журнала, который предполагается использовать для отбора документов и доступа к графам
					</param>
					<param name="ФлагОгрПросм" type="0;1" default="1">
						1-выборка ограничивается документами, входящими в указанный журнал, 0-метод используется только для использования граф методом Графа
					</param>
				</params>
			</method>
			<method name="Графа" alias="Column">
				Данный метод работает только в том случае, если ранее применен метод ИспользоватьЖурнал
				<params>
					<param name="Графа" type="String">
						идентификатор графы журнала, который ранее задан методом ИспользоватьЖурнал
					</param>
				</params>
				<return>
					значение заданной графы журнала для текущего документа
				</return>
			</method>
			<method name="СделатьНеПроведенным" alias="UnPost">
				Отменить проведение документа
			</method>
		</methods>
	</type>
	<type name="Journal" alias="Журнал" base="FormContext" abstract="1">
		<methods>
			<method name="ВидыОтбора" alias="KindsOfSelection">
				Установить доступные виды отборов журнала
				<params>
					<param name="СписокИменОтборов" type="String" default="">
						список имен отборов
					</param>
				</params>
				<return type="String">
					текущий список имен отборов для журнала
				</return>
			</method>
			<method name="ЗакладкиОтбора" alias="TabCtrlSelection">
				Установить в форме журнала закладки для интерактивного осуществления отбора
				<params>
					<param name="ИмяОтбора" type="DocSel">
						строка с именем отбора
					</param>
					<param name="ФлагОтбораЗначенийВИнтервалеЖурнала" type="0;1">
						1-значения отбора выбираются по документам в установленном интервале журнала, 0-выбираются по всем документам журнала
					</param>
					<param name="ФлагУстановкиЗначенияОтбора" type="0;1">
						1-сразу выбирается отбор по параметру &quot;ЗначениеОтбора&quot;, 0-отбор устанавливается на первое существующее значение
					</param>
					<param name="ЗначениеОтбора">
						значение отбора
					</param>
				</params>
			</method>
			<method name="УстановитьОтбор" alias="SetSelection">
				Установить отбор журнала
				<params>
					<param name="ИмяОтбора" type="DocSel">
						Имя отбора. Если это значение пустое, то отбор отключается
					</param>
					<param name="ЗначениеОтбора">
						Значение отбора
					</param>
				</params>
			</method>
			<method name="ПолучитьОтбор" alias="GetSelection">
				Возвратить текущее значение отбора журнала
				<params>
					<param name="ИмяОтбора" type="VarName" default="">
						идентификатор переменной для приема строки с именем отбора
					</param>
					<param name="ЗначениеОтбора" type="VarName" default="">
						идентификатор переменной для приема значения отбора
					</param>
				</params>
				<return type="0;1">
					1-есть отбор, 0-иначе
				</return>
			</method>
			<method name="УстановитьИнтервал" alias="SetRange">
				Установить интервал журнала
				<params>
					<param name="ДатаНач" type="Date">
						дата начала интервала журнала
					</param>
					<param name="ДатаКон" type="Date">
						дата конца интервала журнала
					</param>
					<param name="ФлагИзменения" type="0;1" default="">
						0-пользователь не может интерактивно изменить интервал журнала, 1-может
					</param>
				</params>
			</method>
			<method name="НачалоИнтервала" alias="BegOfRange">
				<return type="Date" InExprOnly="1">
					дату начала интервала журнала
				</return>
			</method>
			<method name="КонецИнтервала" alias="EndOfRange">
				<return type="Date" InExprOnly="1">
					дату конца интервала журнала
				</return>
			</method>
		</methods>
		<handlers>
			<method name="ПриУстановкеОтбора" alias="OnSetSelectInJournal">
				Предопределенная процедура при интерактивной установке отбора документов в журнале
				<params>
					<param name="ИмяРеквизОтбора" type="DocSel">
						строка с названием общего реквизита документа, по которому производится отбор
					</param>
					<param name="Значение">
						значение реквизита отбора
					</param>
				</params>
			</method>
			<method name="ПриВыбореСтроки" alias="OnSelectLine">
				Предопределенная процедура при выборе строки списка
			</method>
			<method name="ПриУстановкеИнтервала" alias="OnSetRange">
				Предопределенная процедура при установке интервала журнала
				<params>
					<param name="ДатаНач" type="Date">
						дата начала интервала журнала
					</param>
					<param name="ДатаКон" type="Date">
						дата конца интервала журнала
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="DocumentJournal" alias="ЖурналДокументов" base="Journal">
		<attribs>
			<attrib name="ТекущийДокумент" alias="CurrentDocument" type="Document">
				Атрибут дает доступ к выбранному в журнале документу (только для чтения)
			</attrib>
		</attribs>
		<methods>
			<method name="ПодчинениеДокументу" alias="ParentDoc">
				Установить документ-владелец для журнала подчиненных документов
				<params>
					<param name="Докум" type="Document" default="">
						документ, подчиненные которого должен отображать журнал
					</param>
					<param name="ФлагАвтоСменыПодчинен" type="0;1" default="0">
						1-способность автоматически обновлять отображение журнала при смене документа-владельца, 0-иначе
					</param>
				</params>
				<return type="Document">
					текущий документ, которому подчинен журнал
				</return>
			</method>
		</methods>
	</type>
	<type name="Transact" alias="МодульДокумента" base="Document">
		<methods>
			<method name="ИтогиАктуальны" alias="AreTotalsActual">
				<return type="0;1">
					1-итоги актуальны, 0-иначе
				</return>
			</method>
			<method name="ГрупповаяОбработка" alias="IsGroupProcessing">
				<return type="0;1">
					1-групповое обработка, 0-иначе
				</return>
			</method>
			<method name="НеПроводитьДокумент" alias="DoNotTransactDoc">
				Отмена проведения документа
			</method>
			<method name="УстановитьРеквизитСправочника" alias="SetRefField">
				Записать значение периодического реквизита справочника с привязкой к проведению документа
				<params>
					<param name="ЭлементСправочника" type="Reference">
						элемент справочника, в который будет запись
					</param>
					<param name="НазваниеРеквизита" type="String">
						название периодического реквизита справочника
					</param>
					<param name="Значение">
						новое значение периодического реквизита
					</param>
					<param name="ДатаУстановки" type="Date">
						дата установки нового значения периодического реквизита
					</param>
					<param name="ИмяТипа" type="TypeName" default="">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина числового или строкового значения
					</param>
					<param name="Точность" type="Number" default="">
						Число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="ОчиститьДвижения" alias="ClearActions">
				Удалить движения документа
				<params>
					<param name="ВидыДвижений" type="String" default="">
					</param>
				</params>
			</method>
			<method name="ПривязыватьСтроку" alias="LinkLine">
				Записывать номер строки документа в движениях документа
				<params>
					<param name="НомерСтроки" type="Number">
						номер строки Документа
					</param>
				</params>
			</method>
		</methods>
		<handlers>
			<method name="ОбработкаПроведения" alias="Posting">
				Предопределенная процедура обработки проведения документа в любом режиме
				<params>
					<param name="Знач" default="">
						идентификатор переменной, которая получает значение из процедуры Провести
					</param>
				</params>
			</method>
			<method name="ОбработкаУдаленияПроведения" alias="UnPostingProcess">
				Предопределенная процедура обработки удаления проведения документа или удаления проведенных документов в любом режиме
			</method>
			<method name="АрхивироватьДокумент" alias="ArchiveDocument">
				Предопределенная процедура обработки архивирования документа
			</method>
		</handlers>
	</type>
	<type name="AccountPeriodic" alias="ПериодическийРеквизитСчета" components="2">
		<methods>
			<method name="Получить" alias="GetValue">
				Получить значение периодического реквизита счета на дату или документ
				<params>
					<param name="Дата" type="Date,Document,Position" default="">
						дата | документ | позиция документа
					</param>
				</params>
				<return>
					значение периодического реквизита счета на заданную дату или документ
				</return>
			</method>
			<method name="Установить" alias="SetValue">
				Установить значение периодического реквизита счета на заданную дату
				<params>
					<param name="Дата" type="Date">
						значение требуемой даты
					</param>
					<param name="Значение">
						устанавливаемое значение периодического реквизита счета
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Account" alias="Счет" components="2">
		<attribs>
			<attrib name="Код" alias="Code" type="String">
				При помощи атрибута &quot;Код&quot; можно получать и задавать код счета
			</attrib>
			<attrib name="Наименование" alias="Description" type="String">
				При помощи атрибута &quot;Наименование&quot; можно получать и задавать наименование счета, которое представляет собой произвольную строку символов
			</attrib>
			<attrib name="Валютный" alias="IsCurrency" type="0;1">
				Атрибут содержит признак ведения валютного учета по счету.
				1-валютный учет ведется по данному счету
				0-валютный учет не ведется по данному счету
			</attrib>
			<attrib name="Количественный" alias="IsAmount" type="0;1">
				Атрибут содержит признак ведения количественного учета по счету
				1-количественный учет ведется по данному счету
				0-количественный учет не ведется по данному счету
			</attrib>
			<attrib name="Забалансовый" alias="IsSingle" type="0;1">
				Атрибут содержит признак того, что счет является забалансовым
				1-выбранный счет является забалансовым счетом
				0-выбранный счет является балансовым счетом
			</attrib>
			<attrib name="Активный" alias="IsActive" type="1;2;3">
				Атрибут содержит тип остатка счета
				1-счет является активным
				2-счет является пассивным
				3-счет является активно-пассивным
			</attrib>
		</attribs>
		<methods>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						устанавливаемое значение атрибута
					</param>
				</params>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение атрибута
				</return>
			</method>
			<method name="Выбран" alias="Selected">
				Проверяет факт выбора счета
				<return type="0;1" InExprOnly="1">
					1-счет выбран, 0-не выбран
				</return>
			</method>
			<method name="ЗаданВКонфигурации" alias="DefinedInConfiguration">
				Определяет, задан ли текущий счет в конфигурации или в информационной базе
				<return type="0;1">
					1-счет задан в конфигурации, 0-счет введен в информационной базе
				</return>
			</method>
			<method name="Вид" alias="Kind">
				<return type="String">
					идентификатор плана счетов, к которому относится данный счет
				</return>
			</method>
			<method name="ПредставлениеВида" alias="KindPresent">
				<return type="String">
					пользовательское представление вида плана счетов
				</return>
			</method>
			<method name="ПланСчетов" alias="AccountCharts">
				Выдает план счетов, которому принадлежит счет
				<return type="AccountChart">
					значение типа &quot;План счетов&quot;
				</return>
			</method>
			<method name="ЭтоГруппа" alias="IsGroup">
				Определяет, является ли данный счет группой
				<return type="0;1">
					1-является группой, 0-не является
				</return>
			</method>
			<method name="Уровень" alias="Level">
				<return type="Number">
					уровень вложенности счета: 1-для счета верхнего уровня
				</return>
			</method>
			<method name="ТекущийСчет" alias="CurAccount">
				<return type="Account">
					текущее значение счета
				</return>
			</method>
			<method name="ПометкаУдаления" alias="DeleteMark">
				Проверяет наличие пометки на удаление для текущего счета
				<return type="0;1">
					1-помечен на удаление, 0-не помечен
				</return>
			</method>
			<method name="ПринадлежитГруппе" alias="BelongsToGroup">
				Определяет, является ли текущий счет субсчетом для счета, указанного в качестве параметра метода
				<params>
					<param name="Счет" type="Number" default="">
						счет, к субсчетам которого проверяется принадлежность текущего счета
					</param>
				</params>
				<return type="0;1">
					1-является субсчетом, 0-не является
				</return>
			</method>
			<method name="ВидСубконто" alias="SubcontoKind">
				Устанавливает/возвращает вид субконто счета
				<params>
					<param name="НомерСубконто" type="Number">
						порядковый номер субконто
					</param>
					<param name="ВидСубконто" type="SubConto" default="">
						Значение типа &quot;ВидСубконто&quot;, которое должно быть установлено
					</param>
					<param name="ТолькоОбороты" type="0;1" default="">
						1 или 0. Данный параметр снимает или устанавливает флаг &quot;Только обороты&quot;
					</param>
				</params>
				<return type="SubConto">
					значение типа &quot;ВидСубконто&quot;
				</return>
			</method>
			<method name="ТолькоОбороты" alias="TurnoversOnly">
				Устанавливает/возвращает значение флага &quot;Только обороты&quot; субконто счета
				<params>
					<param name="НомерСубконто" type="Number">
						порядковый номер субконто
					</param>
					<param name="ТолькоОбороты" type="0;1" default="">
						1 или 0. Данный параметр снимает или устанавливает флаг &quot;Только обороты&quot;
					</param>
				</params>
				<return type="0;1">
					1-флаг установлен, 0-не установлен
				</return>
			</method>
			<method name="УчетПоСумме" alias="AccountingBySum">
				Устанавливает/возвращает значение флага &quot;УчетПоСумме&quot; субконто счета
				<params>
					<param name="НомерСубконто" type="Number">
						порядковый номер субконто
					</param>
					<param name="УчетПоСумме" type="0;1" default="">
						1 или 0. Данный параметр снимает или устанавливает флаг &quot;УчетПоСумме&quot;
					</param>
				</params>
				<return type="0;1">
					1-флаг установлен, 0-не установлен
				</return>
			</method>
			<method name="УчетПоВалютнойСумме" alias="AccountingByCurrencySum">
				Устанавливает/возвращает значение флага &quot;Учет по валютной сумме&quot; субконто счета
				<params>
					<param name="НомерСубконто" type="Number">
						порядковый номер субконто
					</param>
					<param name="УчетПоСумме" type="0;1" default="">
						1 или 0. Данный параметр снимает или устанавливает флаг &quot;Учет по валютной сумме&quot;
					</param>
				</params>
				<return type="0;1">
					1-флаг установлен, 0-не установлен
				</return>
			</method>
			<method name="УчетПоКоличеству" alias="AccountingByAmount">
				Устанавливает/возвращает значение флага &quot;Учет по количеству&quot; субконто счета
				<params>
					<param name="НомерСубконто" type="Number">
						порядковый номер субконто
					</param>
					<param name="УчетПоКоличеству" type="0;1" default="">
						1 или 0. Данный параметр снимает или устанавливает флаг &quot;Учет по количеству&quot;
					</param>
				</params>
				<return type="0;1">
					1-флаг установлен, 0-не установлен
				</return>
			</method>
			<method name="КоличествоСубконто" alias="SubcontoCount">
				<return type="Number">
					количество видов субконто у текущего счета
				</return>
			</method>
			<method name="Родитель" alias="Parent">
				<params>
					<param name="НомерУровня" type="Number" default="">
						номер уровня. Определяет, какого уровня вышестоящий счет должен быть выдан
					</param>
				</params>
				<return type="Account">
					счет вышестоящего уровня данного счета
				</return>
			</method>
			<method name="КодСубсчета" alias="SubAccountCode">
				<return type="String">
					код счета без кодов счетов вышестоящих уровней
				</return>
			</method>
			<method name="Блокировка" alias="Locking">
				<params>
					<param name="ВклВыкл" type="0;1" default="">
						1-включить, 0-выключить
					</param>
				</params>
				<return type="0;1">
					1-успешно, 0-не получилось
				</return>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для реквизита неопределенного типа
				<params>
					<param name="ИмяРеквизита" type="String">
						наименование реквизита неопределенного типа
					</param>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="AccountList" alias="СчетФормаСписка" base="Account,FormContext" components="2">
		<methods>
			<method name="ИспользоватьДату" alias="UseDate">
				Установить дату выборки периодических реквизитов формы списка счетов
				<params>
					<param name="Дата" type="Date">
						выражение типа дата
					</param>
				</params>
				<return type="Date">
					текущее значение используемой даты формы списка счетов
				</return>
			</method>
			<method name="ИспользоватьПланСчетов" alias="UseAccountCharts">
				Устанавливает план счетов, который будет использован в форме списка счетов
				<params>
					<param name="ПланСчетов" type="AccountChart" default="">
						значение типа &quot;ПланСчетов&quot;
					</param>
				</params>
				<return type="AccountChart">
					текущее значение плана счетов формы
				</return>
			</method>
			<method name="ИспользоватьРодителя" alias="UseParent">
				Устанавливает/выдает значение родителя, используемого для выборки счетов
				<params>
					<param name="Родитель" type="Account" default="">
						счет, устанавливаемый в качестве используемого родителя
					</param>
					<param name="ФлагИзменения" type="0;1" default="">
						1-пользователь может изменить родителя интерактивно, 0-не может
					</param>
				</params>
				<return type="Account">
					текущее значение используемого родителя
				</return>
			</method>
			<method name="ИспользоватьКорСчет" alias="UseCorAccount">
				Установить счет для показа списка корреспондирующих счетов
				<params>
					<param name="Счет" type="Account">
						выражение со значением счета
					</param>
					<param name="Корреспонденция" type="0;1">
						1-дебетовый счет, 0-кредитовый счет
					</param>
				</params>
			</method>
			<method name="ИерархическийСписок" alias="HierarchicalList">
				Установить режим иерархического списка счетов
				<params>
					<param name="ФлагИерарх" type="0;1">
						1-иерархический список, 0-неиерархический список
					</param>
					<param name="ФлагИзменения" type="0;1" default="">
						1-пользователь может изменить иерархичность интерактивно, 0-не может
					</param>
				</params>
				<return type="0;1">
					значение флага иерархического списка для формы списка счетов
				</return>
			</method>
			<method name="РедактироватьВДиалоге" alias="EditInForm">
				Установить способ редактирования счета
				<params>
					<param name="Способ" type="0;1" default="">
						1-в диалоге, 0-в строке
					</param>
					<param name="Разрешение" type="0;1" default="">
						флаг разрешения пользователю менять способ редактирования: 1-разрешить, 0-запретить
					</param>
				</params>
				<return type="0;1">
					значение установленного на данный момент способа редактирования счета
				</return>
			</method>
			<method name="ВыборГруппы" alias="SelectGroup">
				Устанавливает или сбрасывает признак выбора группы
				<params>
					<param name="ФлагВыбГрупп" type="0;1" default="">
						1-выбирать группы, 0-не выбирать
					</param>
				</params>
				<return type="0;1">
					текущее числовое значение режима выборки групп
				</return>
			</method>
		</methods>
		<handlers>
			<method name="ПриВводеСтроки" alias="OnNewLine">
				Предопределенная процедура при интерактивном вводе новой строки списка счетов
			</method>
			<method name="ПриРедактированииНовойСтроки" alias="OnEditNewLine">
				Предопределенная процедура при интерактивном редактировании новой строки списка счетов
			</method>
			<method name="ПриНачалеРедактированияСтроки" alias="OnStartEditLine">
				Предопределенная процедура при начале интерактивного редактирования существующей строки списка счетов
			</method>
			<method name="ПриВыбореРодителя" alias="OnSetParent">
				Предопределенная процедура при интерактивной смене  родителя (следующий уровень, предыдущий уровень)
				<params>
					<param name="Счет" type="Account">
						значение Счета, который интерактивно установлен в качестве родителя
					</param>
				</params>
			</method>
			<method name="ПриВыбореСтроки" alias="OnSelectLine">
				Предопределенная процедура при выборе строки списка
			</method>
			<method name="ПриЗаписи" alias="OnWrite">
				Предопределенная процедура при интерактивной записи строки списка счетов
				<params>
					<param name="СписокПериодРекв" type="String">
						строка со списком изменяемых периодических реквизитов счета
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="AccountForm" alias="СчетФорма" base="Account,FormContext" components="2">
		<methods>
			<method name="Модифицированность" alias="Modify">
				<return type="0;1">
					1-реквизиты формы счета были изменены, 0-иначе
				</return>
			</method>
			<method name="Записать" alias="Write">
				Выполняет запись счета
			</method>
		</methods>
		<handlers>
			<method name="ВводНового" alias="InputNew">
				Предопределенная процедура при интерактивном вводе нового счета
				<params>
					<param name="ПризнКопирования" type="0;1">
						признак того, что объект введен копированием.
						1-объект введен копированием
						0-просто новый объект
					</param>
					<param name="ОбъектКопирования" type="Account">
						объект, который был скопирован
					</param>
				</params>
			</method>
			<method name="ПриЗаписи" alias="OnWrite">
				Предопределенная процедура при интерактивной записи счета
				<params>
					<param name="СписокПериодРекв" type="String">
						строка со списком изменяемых периодических реквизитов счета
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="AccountCO" alias="Счет" base="Account" creatable="Счет,Account" components="2">
		<methods>
			<method name="ВыбратьСчета" alias="SelectAccounts">
				открывает выборку счетов для текущего плана счетов
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один счет, 0-действие не выполнено или в выборке нет ни одного счета
				</return>
			</method>
			<method name="ПолучитьСчет" alias="GetAccount">
				Получить из выборки следующий счет
				<params>
					<param name="Режим" type="0;1" default="1">
						0-не включать подчиненные счета, 1-включать подчиненные счета
					</param>
				</params>
				<return type="0;1">
					1-следующий счет выбран успешно, 0-следующий счет не выбран
				</return>
			</method>
			<method name="Выбрать" alias="Choose">
				Вызывает на экран диалог, содержащий план счетов
				<params>
					<param name="Подсказка" type="String" default="">
						текст заголовка окна диалога выбора счета
					</param>
					<param name="ФормаСписка" type="String" default="">
						идентификатор формы списка плана счетов, которая должна использоваться для выбора
					</param>
				</params>
				<return type="0;1">
					1-счет выбран, 0-не выбран
				</return>
			</method>
			<method name="НайтиПоКоду" alias="FindByCode">
				Выполняет поиск счета в плане счетов по коду счета
				<params>
					<param name="КодСчета" type="String">
						код счета, как он указан в плане счетов
					</param>
				</params>
				<return type="0;1">
					1-счет найден, 0-не найден
				</return>
			</method>
			<method name="НайтиСчет" alias="FindAccount">
				Метод выполняет поиск счета в плане счетов по значению типа &quot;Счет&quot;
				<params>
					<param name="Счет" type="Account">
						значение типа &quot;Счет&quot;
					</param>
				</params>
				<return type="0;1">
					1-счет найден, 0-не найден
				</return>
			</method>
			<method name="ВыборГруппы" alias="SelectGroup">
				Устанавливает режим выборки групп
				<params>
					<param name="ПризнакВыбораГруппы" type="0;1" default="">
						1-выбирать группы, 0-не выбирать
					</param>
				</params>
				<return type="0;1">
					текущее числовое значение режима выборки групп
				</return>
			</method>
			<method name="ИспользоватьДату" alias="UseDate">
				Устанавливает дату выборки периодических реквизитов счета
				<params>
					<param name="Дата" type="Date" default="">
						выражение типа дата
					</param>
				</params>
				<return type="Date">
					текущее значение используемой даты
				</return>
			</method>
			<method name="ИспользоватьПланСчетов" alias="UseAccountCharts">
				Устанавливает план счетов, который будет использован объектом
				<params>
					<param name="ПланСчетов" type="AccountChart" default="">
						значение типа &quot;ПланСчетов&quot;
					</param>
				</params>
				<return type="AccountChart">
					текущее значение на момент до исполнения метода
				</return>
			</method>
			<method name="ИспользоватьРодителя" alias="UseParent">
				Устанавливает/выдает значение родителя, используемого для выборки счетов
				<params>
					<param name="Родитель" type="Account" default="">
						Счет, устанавливаемый в качестве используемого родителя
					</param>
					<param name="ФлагИзменения" type="0;1" default="1">
						1-пользователь может изменить родителя интерактивно, 0-не может
					</param>
				</params>
				<return type="Account">
					Текущее значение используемого родителя на момент до исполнения метода
				</return>
			</method>
			<method name="Новый" alias="New">
				Создает новый счет
				<params>
					<param name="ЕстьСубсчета" type="0;1" default="0">
						0-счет не будет иметь субсчета, 1-счет будет иметь субсчета
					</param>
				</params>
			</method>
			<method name="Записать" alias="Write">
				Выполняет запись счета
			</method>
			<method name="Удалить" alias="Delete">
				Удаляет (или помечает на удаление) текущий счет
				<params>
					<param name="Режим" type="0;1" default="1">
						1-непосредственное удаление, 0-пометка на удаление
					</param>
				</params>
			</method>
			<method name="СнятьПометкуУдаления" alias="ClearDeleteMark">
				Снять пометку удаления счета
			</method>
		</methods>
	</type>
	<type name="OperDK" alias="ДебетКредитОперации" components="2">
		<attribs>
			<attrib name="Счет" alias="Account" type="Account">
				Атрибут служит для доступа к счету дебета/кредита проводки или корреспонденции операции
			</attrib>
		</attribs>
		<methods>
			<method name="Субконто" alias="Subconto">
				Обращение к субконто дебета/кредита проводки (корреспонденции) операции
				<params>
					<param name="НомерСубконто" type="Number" default="1">
						порядковый номер субконто
					</param>
					<param name="ВидСубконто" type="SubContoKind" default="">
						значение типа &quot;ВидСубконто&quot;, которое должно быть установлено
					</param>
					<param name="Субконто" default="">
						значение субконто
					</param>
				</params>
				<return type="SubContoKind">
					если указан порядковый номер вида субконто или вид субконто, метод возвращает значение типа &quot;ВидСубконто&quot;
				</return>
			</method>
			<method name="ПредставлениеСубконто" alias="SubcontoPresentation">
				<params>
					<param name="НомерСубконто" type="Number" default="1">
						порядковый номер субконто
					</param>
					<param name="ВидСубконто" type="String" default="">
						идентификатор вида субконто
					</param>
					<param name="Режим" type="0;1" default="0">
						0-полное представление, 1-краткое представление
					</param>
				</params>
				<return type="String">
					представление субконто
				</return>
			</method>
		</methods>
	</type>
	<type name="Operation" alias="Операция" components="2" abstract="1">
		<attribs>
			<attrib name="ДатаОперации" alias="OperDate" type="Date">
				Атрибут содержит дату бухгалтерской операции
			</attrib>
			<attrib name="Содержание" alias="Description" type="String">
				Атрибут служит для обращения к содержанию бухгалтерской операции
			</attrib>
			<attrib name="СуммаОперации" alias="OperSum" type="Number">
				Атрибут служит для обращения к сумме бухгалтерской операции
			</attrib>
			<attrib name="Документ" alias="Document" type="Document">
				Атрибут служит для обращения к документу, котрому принадлежит бухгалтерская операция
			</attrib>
			<attrib name="Сумма" alias="Sum" type="Number">
				Атрибут служит для обращения к сумме выбранной проводки (корреспонденции) операции
			</attrib>
			<attrib name="Валюта" alias="Currency" type="Reference">
				Атрибут служит для обращения к валюте выбранной проводки или корреспонденции операции
			</attrib>
			<attrib name="ВалСумма" alias="CurSum" type="Number">
				Атрибут служит для обращения к сумме в валюте выбранной проводки или корреспонденции операции
			</attrib>
			<attrib name="Количество" alias="Amount" type="Number">
				Атрибут служит для обращению к количеству выбранной проводки или корреспонденции операции
			</attrib>
			<attrib name="Дебет" alias="Debit" type="OperDK">
				Дебет проводки
			</attrib>
			<attrib name="Кредит" alias="Kredit" type="OperDK">
				Кредит проводки
			</attrib>
		</attribs>
		<methods>
			<method name="Выбрана" alias="Selected">
				<return type="0;1">
					1-операция выбрана, 0-не выбрана
				</return>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						устанавливаемое значение атрибута
					</param>
				</params>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение атрибута
				</return>
			</method>
			<method name="ПланСчетов" alias="AccountCharts">
				Выдает план счетов текущей проводки
				<return type="AccountChart">
				</return>
			</method>
			<method name="ВыбратьПроводки" alias="SelectEntries">
				Открывает выборку проводок текущей операции
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы одна проводка, 0-действие не выполнено или в выборке нет ни одной проводки
				</return>
			</method>
			<method name="ПолучитьПроводку" alias="GetEntry">
				Получить проводку из выборки, открытой методом &quot;ВыбратьПроводки&quot;
				<return type="0;1">
					1-следующая проводка выбрана успешно, 0-следующая проводка не выбрана
				</return>
			</method>
			<method name="ПроводкаВыбрана" alias="EntrySelected">
				<return type="0;1">
					1-проводка выбрана, 0-не выбрана
				</return>
			</method>
			<method name="КоличествоПроводок" alias="EntriesCount">
				<return type="Number">
					количество проводок в текущей операции
				</return>
			</method>
			<method name="ПолучитьПроводкуПоНомеру" alias="GetEntryByNumber">
				Выбрать в качестве текущей проводку по ее номеру и номеру корреспонденции
				<params>
					<param name="НомерПроводки" type="Number" default="1">
						номер проводки в операции
					</param>
					<param name="НомерКорреспонденции" type="Number" default="">
						номер корреспонденции в проводке
					</param>
				</params>
				<return type="0;1">
					0-проводка не найдена, 1-проводка найдена
				</return>
			</method>
			<method name="Пров" alias="Entry">
				Специальный метод, позволяющий обратиться непосредственно к данным проводки операции по номеру, без установки текущей проводки
				<params>
					<param name="НомерПроводки" type="Number" default="1">
						номер проводки в операции
					</param>
					<param name="НомерКорреспонденции" type="Number" default="">
						номер корреспонденции в проводке
					</param>
				</params>
				<return type="Entry">
					ссылка на указанную проводку
				</return>
			</method>
			<method name="НомерПроводки" alias="EntryNumber">
				<return type="Number">
					номер текущей проводки
				</return>
			</method>
			<method name="НомерКорреспонденции" alias="CorrespondenceNumber">
				<return type="Number">
					номер текущей корреспонденции
				</return>
			</method>
			<method name="СложнаяПроводка" alias="ComplexEntry">
				<return type="0;1">
					1-текущая проводка является сложной, 0-не является
				</return>
			</method>
			<method name="НомерСтрокиДокумента" alias="DocLineNum">
				<return type="Number">
					номер строки документа, сформировавшей данную проводку
				</return>
			</method>
			<method name="ПредставлениеПроводки" alias="EntryPresentation">
				<params>
					<param name="ПоСубконто" type="0;1;2" default="0">
						0-не включать представление субконто, 1-краткое представление субконто, 2- полное представление субконто
					</param>
				</params>
				<return type="String">
					представление для текущей проводки
				</return>
			</method>
			<method name="ПредставлениеСубконто" alias="SubcontoPresentation">
				<return type="String">
					представление субконто текущей проводки
				</return>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для реквизита неопределенного типа
				<params>
					<param name="ИмяРеквизита" type="String">
						наименование реквизита неопределенного типа
					</param>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="ПометкаУдаления" alias="DeleteMark">
				<return type="0;1">
					1-операция помечена на удаление, 0-не помечена
				</return>
			</method>
			<method name="ПолучитьВремя" alias="GetTime">
				Получить время текущей операции
				<params>
					<param name="Часы" type="VarName" default="">
						имя переменной, в которую возвращается час операции
					</param>
					<param name="Минуты" type="VarName" default="">
						имя переменной, в которую возвращается минута операции
					</param>
					<param name="Секунды" type="VarName" default="">
						имя переменной, в которую возвращается секунда операции
					</param>
				</params>
				<return type="String">
					время в виде &quot;ЧЧ.ММ.СС&quot;
				</return>
			</method>
			<method name="ПолучитьДокумент" alias="GetDocument">
				Получить документ, которому принадлежит операция
				<return type="Document">
					значение типа &quot;Документ&quot;
				</return>
			</method>
			<method name="ПроверитьПроводку" alias="CheckEntry">
				Проверить проводку на соответствие корректным проводкам
				<return type="0;1">
					1-проводка соответствует корректным проводкам, 0-не соответствует
				</return>
			</method>
		</methods>
	</type>
	<type name="OperationForm" alias="ОперацияФорма" base="Operation,FormContext" components="2">
		<attribs>
			<attrib name="БИ" alias="AT" type="AccountTotal">
				Атрибут содержит агрегатный объект типа &quot;БухгалтерскиеИтоги&quot;
			</attrib>
		</attribs>
		<methods>
			<method name="ПоТиповойОперации" alias="ByTemplateOper">
				Определяет, вводится ли новая операция с использованием типовой, и какая типовая операция используется
				<params>
					<param name="Переменная" type="VarName" default="">
						имя переменной, в которую будет записано наименование типовой операции
					</param>
				</params>
				<return type="0;1">
					1-при вводе операции вручную использована типовая операция, 0-не использовна
				</return>
			</method>
			<method name="ИспользоватьВалюту" alias="UseCurrency">
				Установка валюты, используемой в форме по умолчанию
				<params>
					<param name="Валюта" type="Reference" default="">
						значение типа &quot;Справочник&quot;, имеющий вид, определенный при настройке валютного учета
					</param>
				</params>
				<return type="Reference">
					значение установки используемой валюты на момент до вызова метода
				</return>
			</method>
			<method name="ИспользоватьКорСчет" alias="UseCorAccount">
				Установка корреспондирующего счета, используемого в форме по умолчанию
				<params>
					<param name="Счет" type="Account" default="">
						значение типа &quot;Счет&quot;
					</param>
				</params>
				<return type="Account">
					значение установки используемого по умолчанию корреспондирующего счета на момент до вызова метода
				</return>
			</method>
			<method name="ИспользоватьСубконто" alias="UseSubconto">
				Установка субконто, используемого в форме по умолчанию
				<params>
					<param name="ВидСубконто" type="SubContoKind" default="">
						значение типа &quot;ВидСубконто&quot;
					</param>
					<param name="Субконто" default="">
						значение Субконто
					</param>
				</params>
				<return>
					значение установки используемого по умолчанию субконто на момент до вызова метода
				</return>
			</method>
			<method name="ИзменениеПорядкаСтрок" alias="ChangeLinesOrder">
				Разрешить/запретить изменять порядок строк в форме операции
				<params>
					<param name="Разрешить" type="0;1" default="">
						1-разрешить изменение порядка строк в операции, 0-запретить
					</param>
				</params>
				<return type="0;1">
					значение режима изменения порядка строк до исполнения метода
				</return>
			</method>
			<method name="Записать" alias="Write">
				Записать новую операцию
			</method>
		</methods>
		<handlers>
			<method name="ВводНового" alias="InputNew">
				Предопределенная процедура при интерактивном вводе новой операции
				<params>
					<param name="ПризнКопирования" type="0;1">
						признак того, что объект введен копированием
						1-объект введен копированием
						0-просто новый объект
					</param>
					<param name="ОбъектКопирования" type="Operation">
						объект, который был скопирован
					</param>
				</params>
			</method>
			<method name="ВводНаОсновании" alias="InputCausedBy">
				Предопределенная процедура при интерактивном вводе новой операции на основании
				<params>
					<param name="ДокументОснование" type="Document">
						значение документа, на основании которого вводится новая операция
					</param>
				</params>
			</method>
			<method name="ПриЗаписи" alias="OnWrite">
				Предопределенная процедура при интерактивной записи операции
			</method>
			<method name="ПриВводеСтроки" alias="OnNewLine">
				Предопределенная процедура при интерактивном вводе новой проводки или корреспонденции операции
			</method>
			<method name="ПриРедактированииНовойСтроки" alias="OnEditNewLine">
				Предопределенная процедура при интерактивном редактировании новой проводки или корреспонденции операции
			</method>
			<method name="ПриНачалеРедактированияСтроки" alias="OnStartEditLine">
				Предопределенная процедура при начале интерактивного редактирования существующей проводки или корреспонденции операции
			</method>
			<method name="ПриИзмененииПорядкаСтрок" alias="OnChangeLinesOrder">
				Предопределенная процедура при изменении порядка строк операции
				<params>
					<param name="Действие" type="-1;1">
						-1-перемещение строки вверх, 1-перемещение строки вниз
					</param>
				</params>
			</method>
			<method name="ПриУдаленииСтроки" alias="OnDeleteLine">
				Предопределенная процедура при интерактивном удалении проводки или корреспонденции операции
			</method>
		</handlers>
	</type>
	<type name="OperationCO" alias="Операция" base="Operation" creatable="Операция,Operation" components="2">
		<methods>
			<method name="ВыбратьОперации" alias="SelectOpers">
				Открывает выборку операций за период
				<params>
					<param name="НачалоПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа начала периода выбора операций
					</param>
					<param name="КонецПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа конца периода выбора операций
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы одна операция, 0-действие не выполнено или в выборке нет ни одной операции
				</return>
			</method>
			<method name="ПолучитьОперацию" alias="GetOper">
				выбирает очередную операцию из выборки, открытой при помощи метода &quot;ВыбратьОперации&quot;
				<return type="0;1">
					1-операция выбрана успешно, 0-операция не выбрана
				</return>
			</method>
			<method name="НайтиОперацию" alias="FindOper">
				осуществляет поиск операции по значению типа &quot;Документ&quot;
				<params>
					<param name="Документ" type="Document">
						значение типа &quot;Документ&quot;
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ВыбратьОперацииСПроводками" alias="SelectOpersAndEntries">
				Открывает выборку оперций с проводками за указанный период
				<params>
					<param name="НачалоПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа начала периода выбора операций
					</param>
					<param name="КонецПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа конца периода выбора операций
					</param>
					<param name="Фильтр" type="String" default="">
						условие отбора проводок
					</param>
					<param name="Валюта" type="Reference" default="">
						значание отбора проводок по валюте
					</param>
					<param name="ПланСчетов" type="AccountChart" default="">
						значение типа &quot;План Счетов&quot;
					</param>
					<param name="РазделительУчета" type="Reference" default="">
						значение разделителя учета
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ВыбратьОперацииСПроводками" alias="SelectOpersAndEntries">
				Открывает выборку операций с проводками за указанный период
				<params>
					<param name="НачалоПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа начала периода выбора операций
					</param>
					<param name="КонецПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа конца периода выбора операций
					</param>
					<param name="Счет" type="Account">
						счет, по которому будут отбираться проводки
					</param>
					<param name="КорСчет" type="Account">
						корреспондирующий счет, по которому будут отбираться проводки
					</param>
					<param name="Флаг" type="1;2;3" default="3">
						1-отбирать только по дебету, 2-отбирать только по кредиту, 3-отбирать и по дебету, и по кредиту
					</param>
					<param name="Валюта" type="Reference" default="">
						значание отбора проводок по валюте
					</param>
					<param name="ПланСчетов" type="AccountChart" default="">
						значение типа &quot;ПланСчетов&quot;
					</param>
					<param name="РазделительУчета" type="Reference" default="">
						значение разделителя учета
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ИспользоватьСубконто" alias="UseSubconto">
				Задает фильтр по субконто для функции ВыбратьОперацииСПроводками
				<params>
					<param name="ВидСубконто" type="SubContoKind">
						отбор проводок будет выполнен только для субконто указанного вида
					</param>
					<param name="Субконто" default="">
						отбор проводок будет выполнен только для указанного субконто
					</param>
				</params>
			</method>
			<method name="ИспользоватьКорСубконто" alias="UseCorSubconto">
				Задает фильтр по корреспондирующим субконто для функции ВыбратьОперацииСПроводками
				<params>
					<param name="ВидСубконто" type="SubContoKind">
						отбор проводок будет выполнен только для корреспондирующих субконто указанного вида
					</param>
					<param name="Субконто">
						отбор проводок будет выполнен только для указанного корреспондирующего субконто
					</param>
				</params>
			</method>
			<method name="ВыбратьПоЗначению" alias="SelectByValue">
				Открывает выборку операций или проводок, отобранных по значению отбора
				<params>
					<param name="НачалоПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа начала периода выбора операций
					</param>
					<param name="КонецПериода" type="Date,Document,Position" default="">
						дата | документ | позиция документа конца периода выбора операций
					</param>
					<param name="ВидОтбора" type="DocSel">
						название вида отбора
					</param>
					<param name="ЗначениеОтбора">
						значение отбора вида
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="Новая" alias="New">
				Создать новую операцию
			</method>
			<method name="Записать" alias="Write">
				Записать операцию
			</method>
			<method name="ЗаписатьПроводки" alias="WriteEntries">
				Предназначен для записи в информационную базу уже добавленных и заполненных проводок операции
			</method>
			<method name="Удалить" alias="Delete">
				Удаление операции
				<params>
					<param name="Режим" type="0;1" default="1">
						1-непосредственное удаление, 0-пометка на удаление
					</param>
				</params>
			</method>
			<method name="СнятьПометкуУдаления" alias="ClearDeleteMark">
				Снять пометку удаления операции
			</method>
			<method name="УстановитьВремя" alias="SetTime">
				Задает время текущей операции
				<params>
					<param name="Часы" type="Number" default="">
						час операции
					</param>
					<param name="Минуты" type="Number" default="">
						минуты операции
					</param>
					<param name="Секунды" type="Number" default="">
						секунды операции
					</param>
				</params>
			</method>
			<method name="ВключитьПроводки" alias="EntriesOn">
				Включает/выключает проводки операции
				<params>
					<param name="Флаг" type="0;1" default="">
						1-включить проводки операции, 0-выключить проводки операции
					</param>
				</params>
				<return type="0;1">
					состояние на момент вызова метода
				</return>
			</method>
			<method name="НоваяПроводка" alias="NewEntry">
				Создать новую проводку для текущей операции
			</method>
			<method name="НоваяКорреспонденция" alias="NewCorrespondence">
				Создает новую корреспонденцию проводки
			</method>
			<method name="УдалитьПроводку" alias="DeleteEntry">
				Удаляет текущую проводку или корреспонденцию операции
			</method>
		</methods>
	</type>
	<type name="OperationList" alias="ЖурналОпераций" base="Journal,Operation" components="2">
	</type>
	<type name="ProvList" alias="ЖурналПроводок" base="Journal,Operation" components="2">
		<handlers>
			<method name="ПриПоказеПроводокПоДокументу" alias="OnShowEntrysByDoc">
				Предопределенная процедура при показе проводок по документу (операции)
				<params>
					<param name="Документ" type="Document">
						Документ по которому выводятся проводки
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="CalcJournal" alias="ЖурналРасчетов" creatable="ЖурналРасчетов,CalcJournal" components="4">
		<attribs>
			<attrib name="Документ" alias="Document" type="Document">
				Документ-основание текущей записи журнала расчетов
			</attrib>
			<attrib name="РодительскийДокумент" alias="ParentDocument" type="Document">
				Документ, который ввел текущую запись в журнал расчетов
			</attrib>
			<attrib name="Объект" alias="Object" type="Reference">
				Элемент справочника, для которого введена текущая запись журнала расчетов
			</attrib>
			<attrib name="ВидРасч" alias="Calc" type="CalcAlg">
				Вид расчета текущей записи журнала расчетов
			</attrib>
			<attrib name="ДатаНачала" alias="DateOfBegin" type="Date">
				Дата начала действия записи журнала расчетов
			</attrib>
			<attrib name="ДатаОкончания" alias="DateOfEnd" type="Date">
				Дата окончания действия записи журнала расчетов
			</attrib>
			<attrib name="ПериодДействия" alias="EffectivePeriod" type="CalcPeriod">
				Период действия записи журнала расчетов
			</attrib>
			<attrib name="ПериодРегистрации" alias="RegistrationPeriod" type="CalcPeriod">
				Период регистрации записи журнала расчетов
			</attrib>
			<attrib name="Сторно" alias="Storno" type="0;1">
				Признак сторнирующей записи. 1-для сторнирующих записей, 0-для обычных записей
			</attrib>
			<attrib name="Рассчитана" alias="Calculated" type="0;1">
				Признак того, что запись рассчитана. 1-для рассчитанных записей, 0-для нерассчитанных
			</attrib>
			<attrib name="Исправлена" alias="Updated" type="0;1">
				Признак того, что запись исправлена вручную. 1-для записей, результат которых исправлен &quot;вручную&quot;, 0-для остальных записей
			</attrib>
			<attrib name="Фиксирована" alias="Locked" type="0;1">
				Признак того, что результат расчета записи защищен от исправления. 1-для фиксированных записей, 0-для остальных записей
			</attrib>
			<attrib name="Перерасчет" alias="Recalc" type="0;1">
				Признак того, что запись является перерасчетом другой записи прошлого периода. 1-для записей-перерасчетов, 0-для остальных записей
			</attrib>
			<attrib name="ПервичнаяЗапись" alias="ParentRecord" type="CalcRecord">
				Первичная запись записи-перерасчета
			</attrib>
			<attrib name="Результат" alias="Result" type="Number">
				Используется для доступа к результату расчета записи
			</attrib>
		</attribs>
		<methods>
			<method name="НачалоТекущегоПериода" alias="CurrentPeriodBegin">
				<return type="Date">
					дату начала текущего расчетного периода журнала расчетов
				</return>
			</method>
			<method name="КонецТекущегоПериода" alias="CurrentPeriodEnd">
				<return type="Date">
					дату окончания текущего расчетного периода журнала расчетов
				</return>
			</method>
			<method name="НачалоПериодаПоДате" alias="PeriodBeginByDate">
				<params>
					<param name="Дата" type="Date">
						любая дата, которая попадает в требуемый период
					</param>
				</params>
				<return type="Date">
					дату начала произвольного расчетного периода журнала расчетов
				</return>
			</method>
			<method name="КонецПериодаПоДате" alias="PeriodEndByDate">
				<params>
					<param name="Дата" type="Date">
						любая дата, которая попадает в требуемый период
					</param>
				</params>
				<return type="Date">
					дату окончания произвольного расчетного периода журнала расчетов
				</return>
			</method>
			<method name="ПериодПоДате" alias="PeriodByDate">
				<params>
					<param name="Дата" type="Date">
						значение типа дата
					</param>
				</params>
				<return type="CalcPeriod">
					период журнала расчетов по дате
				</return>
			</method>
			<method name="УстановитьТекущийПериод" alias="SetCurrentPeriod">
				Устанавливает текущий период журнала расчетов
				<params>
					<param name="Период" type="CalcPeriod">
						значение типа &quot;период журнала расчетов&quot;
					</param>
					<param name="Способ" type="0;1" default="1">
						0-не отрабатывать системные действия, связанные со сменой периода, 1-отрабатывать
					</param>
				</params>
				<return type="0;1">
					1-выполнено, 0-не выполнено
				</return>
			</method>
			<method name="ТекущийПериод" alias="CurrentPeriod">
				<return type="CalcPeriod">
					значение типа &quot;Период журнала расчетов&quot;
				</return>
			</method>
			<method name="ПолучитьЗапись" alias="GetRecord">
				Получить из выборки следующую запись журнала расчетов
				<return type="0;1">
					1-очередная запись журнала расчетов найдена, 0-не найдена
				</return>
			</method>
			<method name="ВыполнитьРасчет" alias="RunCalculate">
				Выполнить расчет текущей записи журнала расчетов
				<return type="0;1">
					1-расчет записи выполнен успешно, 0-в противном случае
				</return>
			</method>
			<method name="ОписательПериода" alias="PeriodDescriptor">
				<params>
					<param name="Дата" type="Date">
						любая дата периода, описатель которого требуется получить
					</param>
				</params>
				<return type="String">
					строку-описатель расчетного периода
				</return>
			</method>
			<method name="ТекущаяЗапись" alias="CurrentRecord">
				<return type="CalcRecord">
					значение текущей записи журнала расчетов
				</return>
			</method>
			<method name="НайтиЗапись" alias="FindRecord">
				Позиционирует в журнале расчетов заданную запись
				<params>
					<param name="Запись" type="CalcRecord">
						запись журнала расчетов
					</param>
				</params>
			</method>
			<method name="ФиксироватьЗапись" alias="LockRecord">
				Фиксирует текущую запись журнала расчетов, предохраняя от редактирования результат ее расчета
			</method>
			<method name="ОсвободитьЗапись" alias="ReleaseRecord">
				Метод снимает фиксацию с текущей записи журнала расчетов
			</method>
			<method name="ВвестиПерерасчет" alias="InsertRecalc">
				Вводит перерасчет текущей записи журнала расчетов
			</method>
			<method name="ВвестиПерерасчетНаОсновании" alias="InsertRecalcByReason">
				Вводит перерасчет текущей записи журнала расчетов на основании произвольного документа
				<params>
					<param name="Документ" type="Document">
						документ, на основании которого вводится запись (или записи) в журнал расчетов
					</param>
				</params>
			</method>
			<method name="Вид" alias="Kind">
				<return type="String">
					название журнала расчетов, как оно задано при конфигурировании журнала
				</return>
			</method>
			<method name="ПредставлениеВида" alias="KindPresent">
				<return type="String">
					представление вида журнала расчетов
				</return>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для реквизита неопределенного вида
				<params>
					<param name="ИмяРеквизита" type="String">
						наименование реквизита неопределенного типа
					</param>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="УстановитьРеквизит" alias="SetAttribute">
				Установить значение реквизита журнала расчетов для записи
				<params>
					<param name="ИмяРеквизита" type="String">
						наименование реквизита журнала расчетов
					</param>
					<param name="Значение">
						значение, устанавливаемое для записи в реквизит
					</param>
				</params>
			</method>
			<method name="ВвестиРасчет" alias="InsertCalculation">
				Ввести запись в журнал расчетов
				<params>
					<param name="Объект" type="Reference">
						объект расчета
					</param>
					<param name="ВидРасчета" type="CalcAlg">
						вид вводимого расчета
					</param>
					<param name="ДатаНачала" type="Date" default="">
						дата начала действия вводимого расчета
					</param>
					<param name="ДатаОкончания" type="Date" default="">
						дата окончания действия вводимого расчета
					</param>
					<param name="Результат" type="Number" default="0">
						результат расчета
					</param>
				</params>
			</method>
			<method name="ВвестиРасчетНаОсновании" alias="InsertCalculationByReason">
				Ввести запись в журнал расчетов на основании произвольного документа
				<params>
					<param name="Основание" type="Document">
						документ, на основании которого вводится запись (или записи) в журнал расчетов
					</param>
					<param name="Объект" type="Reference">
						объект расчета
					</param>
					<param name="ВидРасчета" type="CalcAlg">
						вид вводимого расчета
					</param>
					<param name="ДатаНачала" type="Date" default="">
						дата начала действия вводимого расчета
					</param>
					<param name="ДатаОкончания" type="Date" default="">
						дата окончания действия вводимого расчета
					</param>
					<param name="Результат" type="Number" default="0">
						результат расчета
					</param>
				</params>
			</method>
			<method name="ЗаписатьРасчет" alias="EnterCalculation">
				Записать расчет в журнал расчетов
				<params>
					<param name="Объект" type="Reference">
						объект расчета
					</param>
					<param name="ВидРасчета" type="CalcAlg">
						вид вводимого расчета
					</param>
					<param name="ДатаНачала" type="Date" default="">
						дата начала действия вводимого расчета
					</param>
					<param name="ДатаОкончания" type="Date" default="">
						дата окончания действия вводимого расчета
					</param>
					<param name="Результат" type="Number" default="0">
						результат расчета
					</param>
				</params>
			</method>
			<method name="ЗаписатьРасчетНаОсновании" alias="EnterCalculationByReason">
				Ввести запись в журнал расчетов на основании произвольного документа
				<params>
					<param name="Основание" type="Document">
						документ, на основании которого вводится запись (или записи) в журнал расчетов
					</param>
					<param name="Объект" type="Reference">
						объект расчета
					</param>
					<param name="ВидРасчета" type="CalcAlg">
						вид вводимого расчета
					</param>
					<param name="ДатаНачала" type="Date">
						дата начала действия вводимого расчета
					</param>
					<param name="ДатаОкончания" type="Date" default="">
						дата окончания действия вводимого расчета
					</param>
					<param name="Результат" type="Number" default="0">
						результат расчета
					</param>
				</params>
			</method>
			<method name="Рассчитать" alias="Calculate">
				Провести расчет текущей записи журнала расчетов
			</method>
			<method name="ВыбратьЗаписи" alias="SelectRecords">
				Выбрать записи, действующие в определенном временном интервале
				<params>
					<param name="Начало" type="Date">
						дата начала периода
					</param>
					<param name="Окончание" type="Number" default="">
						дата окончания периода
					</param>
				</params>
				<return type="0;1">
					1- операция успешно выполнена, 0 - в противном случае
				</return>
			</method>
			<method name="ВыбратьПериод" alias="SelectPeriod">
				Выбрать записи, введенные в журнал в определенном расчетном периоде
				<params>
					<param name="Дата" type="Date">
						дата, лежащая в выбираемом периоде
					</param>
				</params>
				<return type="0;1">
					1- операция успешно выполнена, 0 - в противном случае
				</return>
			</method>
			<method name="ВыбратьЗаписиПоОбъекту" alias="SelectRecordsByObject">
				Выбрать записи по одному объекту расчета, действующие в определенном временном интервале
				<params>
					<param name="Объект" type="Reference">
						объект расчета, записи которого выбираются
					</param>
					<param name="Начало" type="Date">
						дата начала периода
					</param>
					<param name="Окончание" type="Date">
						дата окончания периода
					</param>
				</params>
				<return type="0;1">
					1- операция успешно выполнена, 0 - в противном случае
				</return>
			</method>
			<method name="ВыбратьЗаписиПоДокументу" alias="SelectRecordsByDocument">
				Выбрать записи журнала расчетов по документу-основанию
				<params>
					<param name="Документ" type="Document">
						документ расчета, который является документом-основанием для отбираемых записей
					</param>
				</params>
				<return type="0;1">
					1- операция успешно выполнена, 0 - в противном случае
				</return>
			</method>
			<method name="ВыбратьПериодПоОбъекту" alias="SelectPeriodByObject">
				Выбрать записи по одному объекту расчета, зарегистрированные в определенном расчетном периоде журнала расчетов
				<params>
					<param name="Объект" type="Reference">
						объект расчета, записи которого выбираются
					</param>
					<param name="Дата" type="Date">
						дата, лежащая в выбираемом периоде
					</param>
				</params>
				<return type="0;1">
					1- операция успешно выполнена, 0 - в противном случае
				</return>
			</method>
			<method name="ВыбратьПоЗначению" alias="SelectByValue">
				Осуществляет выборку записей по значению в графе отбора в заданном периоде
				<params>
					<param name="ИмяОтбора" type="String">
						Наименование графы отбора
					</param>
					<param name="ЗначениеОтбора">
						выбираемое значение
					</param>
					<param name="ПериодНачала" type="CalcPeriod">
						значение типа &quot;Период журнала расчетов&quot;
					</param>
					<param name="ПериодОкончания" type="CalcPeriod">
						значение типа &quot;Период журнала расчетов&quot;
					</param>
				</params>
				<return type="0;1">
					1- операция успешно выполнена, 0 - в противном случае
				</return>
			</method>
			<method name="Новая" alias="New">
				Метод инициализирует создание новой строки журнала расчетов
			</method>
			<method name="Записать" alias="Write">
				Метод вносит изменения записи или новую запись в журнал расчетов
			</method>
			<method name="УдалитьЗапись" alias="DeleteRecord">
				Удалить запись журнала расчетов
			</method>
			<method name="Исправить" alias="Update">
				Выполняет то же действие, что и интерактивная процедура исправления результата, т.е. при исправлении записи текущего расчетного периода просто редактируется результат и метится запись &quot;ручкой&quot;,  а при исправлении записи прошлого периода - вводится сторно той записи и еще одну запись-исправление
				<params>
					<param name="НовРез" type="Number">
						новый результат
					</param>
				</params>
			</method>
			<method name="ОтменитьИсправление" alias="UndoUpdate">
				Отменяет исправление, сделанное ранее интерактивно или из языка методом &quot;Исправить&quot;
			</method>
		</methods>
	</type>
	<type name="CalcPeriod" components="4">
		<attribs>
			<attrib name="ДатаНачала" alias="DateOfBegin" type="Date">
				Дата начала периода журнала расчетов
			</attrib>
			<attrib name="ДатаОкончания" alias="DateOfEnd" type="Date">
				Дата окончания периода журнала расчетов
			</attrib>
			<attrib name="ОписательПериода" alias="PeriodDescriptor" type="String">
				Строковое представление расчетного периода журнала расчетов
			</attrib>
		</attribs>
		<methods>
			<method name="ПрибавитьПериод" alias="AddPeriod">
				<params>
					<param name="Количество" type="Number" default="1">
						число периодов, на которое отстоит текущий период от искомого
					</param>
				</params>
				<return type="Date">
					очередной период журнала на базе текущего периода
				</return>
			</method>
		</methods>
	</type>
	<type name="CalcJournalList" alias="ЖурналРасчетовФормаСписка" base="CalcJournal,FormContext" components="4">
		<methods>
			<method name="УстановитьОтбор" alias="SetSelection">
				Установить выборку по графе отбора
				<params>
					<param name="ИмяГрафыОтбора" type="String">
						Наименование графы отбора
					</param>
					<param name="ЗначениеОтбора">
						выбираемое значение
					</param>
				</params>
			</method>
			<method name="ПолучитьОтбор" alias="GetSelection">
				Получить значение предварительно установленного отбора
				<params>
					<param name="ИмяГрафыОтбора" type="VarName" default="">
						переменная, в которую будет возвращено наименование графы отбора
					</param>
					<param name="ЗначениеОтбора" type="VarName" default="">
						переменная, в которую будет возвращено ранее установленное значение отбора
					</param>
				</params>
				<return type="0;1">
					1- отбор был установлен, 0- отбор прежде не был установлен
				</return>
			</method>
			<method name="ВидыОтбора" alias="KindsOfSelection">
				Установить доступные виды отборов журнала расчетов для вызова их в интерактивном режиме
				<params>
					<param name="СписокИменОтборов" type="String">
						список разрешенных имен отборов
					</param>
				</params>
				<return type="String">
					текущий список имен отборов
				</return>
			</method>
			<method name="ЗакладкиОтбора" alias="TabCtrlSelection">
				Установить в форме журнала расчетов закладки для интерактивного осуществления отбора
				<params>
					<param name="ИмяОтбора" type="String">
						имя графы отбора, по которой будут созданы закладки
					</param>
					<param name="ЗначениеОтбора" default="">
						значение отбора, соответствующее закладке, устанавливаемой первоначально
					</param>
				</params>
			</method>
			<method name="ГраницаПросмотра" alias="ViewBound">
				Установить в форме журнала расчетов границу видимости записей
				<params>
					<param name="Период" type="CalcPeriod">
						значение типа &quot;Период журнала расчетов&quot;, которое устанавливается как граница видимости записей журнала расчетов
					</param>
				</params>
			</method>
			<method name="УстановитьПредставление" alias="SetPresentation">
				Установить в форме журнала расчетов режим представления записей
				<params>
					<param name="Режим" type="1;2;3">
						1-по всем объектам расчета, 2-по одному объекту расчета, 3-по одному документу-основанию
					</param>
					<param name="Объект" type="Document,Reference" default="">
						объект, записи которого отображаются
					</param>
				</params>
			</method>
			<method name="ПолучитьПредставление" alias="GetPresentation">
				Получить установки представления журнала расчетов - режим представления и отображаемый объект
				<params>
					<param name="Режим" type="VarName">
						переменная, в которую записывается текущий режим представления журнала расчетов
					</param>
					<param name="Объект" type="VarName">
						переменная, в которую записывается объект, записи которого отображаются
					</param>
				</params>
				<return type="0;1">
					1-представление успешно установлено, 0 - иначе
				</return>
			</method>
			<method name="РассчитыватьПриОтменеИсправления" alias="CalculateOnEditCancel">
				Устанавливает значение флага автоматического расчета записи журнала расчетов при интерактивной отмене ее исправления
				<params>
					<param name="Флаг" type="0;1" default="">
						1-автоматически рассчитывать, 0-не рассчитывать автоматически
					</param>
				</params>
				<return type="0;1">
					текущее значение этого флага
				</return>
			</method>
		</methods>
		<handlers>
			<method name="ПриИсправленииРезультата" alias="OnResultUpdate">
				Предопределенная процедура при редактировании результата расчета записи журнала расчетов
				<params>
					<param name="Запись" type="CalcRecord">
						ссылка на запись журнала расчетов, результат расчета которой исправляется
					</param>
				</params>
			</method>
			<method name="ПриОтменеИсправления" alias="OnUpdateCancel">
				Предопределенная процедура при отмене исправления результата расчета в журнале расчета
				<params>
					<param name="Запись" type="CalcPeriod">
						ссылка на запись журнала расчетов, исправление результата которой отменяется
					</param>
				</params>
			</method>
			<method name="ПриРасчете" alias="OnCalculating">
				Предопределенная процедура, вызываемая при расчете одной записи, записей объекта или записей документа в журнале расчетов
				<params>
					<param name="ОбъектРасчета" type="CalcPeriod,Reference,Document">
						запись журнала расчетов или элемент справочника, являющийся объектом расчета, или документ, записи которого рассчитываются
					</param>
				</params>
			</method>
			<method name="ПриУстановкеОтбора" alias="OnSetSelection">
				Предопределенная процедура, вызываемая при установке отбора в форме журнала расчетов
				<params>
					<param name="ИмяОтбора" type="String">
						Наименование графы отбора, которая выбрана пользователем при интерактивной установке отбора
					</param>
					<param name="ЗначениеОтбора">
						значение отбора, которое выбрано пользователем при интерактивной установке отбора
					</param>
				</params>
			</method>
			<method name="ПриУстановкеГраницыПросмотра" alias="OnSetViewBound">
				Предопределенная процедура при установке границы просмотра журнала расчетов
				<params>
					<param name="Период" type="CalcPeriod">
						Период, устанавливаемый пользователем как граница просмотра записей
					</param>
				</params>
			</method>
			<method name="ПриУстановкеПредставления" alias="OnSetPresentation">
				Предопределенная процедура при установке режима представления записей журнала расчетов
				<params>
					<param name="Режим" type="Number">
						режим представления записей журнала расчетов, устанавливаемый пользователем
					</param>
				</params>
			</method>
			<method name="ПриВыбореВладельца" alias="OnSetOwner">
				Предопределенная процедура выбора элемента справочника, по которому будут выведены расчеты
				<params>
					<param name="Элемент" type="Reference">
						значение устанавливаемого владельца - т.е. элемент справочника, по которому будут выведены расчеты
					</param>
				</params>
			</method>
		</handlers>
	</type>
	<type name="CalcKind" alias="ВидРасчета" components="4">
		<attribs>
			<attrib name="Код" alias="Code" type="String">
				Код вида расчета
			</attrib>
			<attrib name="Наименование" alias="Description" type="String">
				строка, соответствующая комментарию, заданному при конфигурировании вида расчета
			</attrib>
			<attrib name="Очередность" alias="Priority" type="Number">
				Число, соответствующее очередности вида расчета, заданной при конфигурировании
			</attrib>
			<attrib name="ПриоритетВытеснения" alias="ReplacementPriority" type="Number">
				Число, соответствующее приоритету вытеснения вида расчета, заданному при конфигурировании
			</attrib>
		</attribs>
		<methods>
			<method name="ВходитВГруппу" alias="BelongsToGroup">
				Определить входимость вида расчетов в группу видов расчета
				<params>
					<param name="Группа" type="CalcGroup">
						группа расчетов, входимость в которую проверяется
					</param>
				</params>
				<return type="0;1">
					1-вид расчета входит в группу, 0-в противном случае
				</return>
			</method>
			<method name="Выбран" alias="Selected">
				Возвратить признак того, выбран конкретный вид расчета или нет
				<return type="0;1" InExprOnly="1">
					1-вид расчета выбран, 0-в противном случае
				</return>
			</method>
			<method name="ВытесняетВидРасчета" alias="DisplaceCalc">
				Определяет, вытесняет ли данный вид расчета, тот, который задан в качестве параметра
				<params>
					<param name="ВидРасчета" type="CalcKind">
						вид расчета, для которого проверяется, вытесняется ли он текущим видом расчета
					</param>
				</params>
				<return type="0;1">
					1-вид расчета вытесняет заданный, 0-в противном случае
				</return>
			</method>
			<method name="ВытесняетсяВидомРасчета" alias="DisplaceByCalc">
				Определяет, вытесняется ли текущий вид расчета заданным видом расчета
				<params>
					<param name="ВидРасчета" type="Number" default="">
						вид расчета, для которого проверяется, вытесняет ли он текущий вид расчета
					</param>
				</params>
				<return type="0;1">
					1-вид расчета вытесняется заданным, 0-в противном случае
				</return>
			</method>
		</methods>
	</type>
	<type name="CalcGroup" alias="ГруппаРасчетов" components="4">
		<attribs>
			<attrib name="Код" alias="Code" type="String">
				Код группы видов расчета
			</attrib>
			<attrib name="Наименование" alias="Description" type="String">
				строка, соответствующая комментарию, заданному при конфигурировании группы видов расчета
			</attrib>
		</attribs>
		<methods>
			<method name="СодержитВидРасчета" alias="ContainCalculationKind">
				Определить, содержит ли группа вид расчета
				<params>
					<param name="ВидРасчета" type="CalcKind">
						вид расчета, входимость которого проверяется
					</param>
				</params>
				<return type="0;1">
					1-ВидРасчета входит в группу, 0-в противном случае
				</return>
			</method>
			<method name="Количество" alias="Count">
				Определить количество видов расчета, включенных в группу видов расчета
				<return type="Number">
					количество видов расчета, входящих в группу
				</return>
			</method>
			<method name="ПолучитьРасчет" alias="GetCalculation">
				Получить ссылку на вид расчета, входящий в данную группу под определенным номером
				<params>
					<param name="Номер" type="Number">
						номер вида расчета в списке видов расчета данной группы
					</param>
				</params>
				<return type="CalcKind">
					агрегатный объект типа &quot;ВидРасчета&quot;
				</return>
			</method>
		</methods>
	</type>
	<type name="CalcAlg" alias="МодульРасчета" base="CalcJournal" components="4">
		<handlers>
			<method name="ПровестиРасчет" alias="TransactCalculation">
				Предопределенная процедура расчета записи журнала расчетов
			</method>
		</handlers>
	</type>
	<type name="Enum" alias="Перечисление">
		<methods>
			<method name="КоличествоЗначений" alias="Count">
				<return type="Number">
					число значений в перечислении
				</return>
			</method>
			<method name="ЗначениеПоНомеру" alias="ValueByIndex">
				<params>
					<param name="Номер" type="Number">
						порядковый номер значения в перечислении
					</param>
				</params>
				<return type="EnumVal">
					значение перечисления по порядковому номеру
				</return>
			</method>
			<method name="ЗначениеПоИдентификатору" alias="ValueByIdentifier">
				<params>
					<param name="Идентификатор" type="String">
						Идентификатор значения перечисления
					</param>
				</params>
				<return type="EnumVal">
					значение перечисления по идентификатору в конфигураторе
				</return>
			</method>
		</methods>
	</type>
	<type name="EnumVal" alias="ЗначениеПеречисления">
		<methods>
			<method name="Вид" alias="Kind">
				<return type="String">
					строку с названием вида перечисления
				</return>
			</method>
			<method name="ПредставлениеВида" alias="KindPresent">
				<return type="String">
					пользовательское представление вида перечисления
				</return>
			</method>
			<method name="Выбран" alias="Selected">
				<return type="0;1" InExprOnly="1">
					1-элемент перечисления выбран, 0-не выбран
				</return>
			</method>
			<method name="ПорядковыйНомер" alias="Number">
				<return type="Number">
					порядковый номер значения в перечислении
				</return>
			</method>
			<method name="Идентификатор" alias="Identifier">
				<return type="String">
					идентификатор значения перечисления
				</return>
			</method>
		</methods>
	</type>
	<type name="AllEnum" alias="Перечисления">
		<methods>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение вида Перечисления по имени идентификатора
				<params>
					<param name="ИмяВидаПеречисл" type="String">
						имя перечисления, как оно задано в конфигураторе
					</param>
				</params>
				<return type="Enum">
					значение вида Перечисления
				</return>
			</method>
		</methods>
	</type>
	<type name="ChartsOfAccounts" alias="ПланыСчетов" components="2">
		<methods>
			<method name="КоличествоЗначений" alias="Count">
				<return type="Number" InExprOnly="1">
					количество планов счетов конфигурации
				</return>
			</method>
			<method name="ЗначениеПоНомеру" alias="ValueByIndex">
				<params>
					<param name="Номер" type="Number">
						Номер позиции плана счетов, заданный в Конфигураторе
					</param>
				</params>
				<return type="AccountChart" InExprOnly="1">
					ПланСчетов, соответствующий заданному номеру
				</return>
			</method>
			<method name="ЗначениеПоИдентификатору" alias="ValueByIdentifier">
				позволяет определить план счетов, соответствующий идентификатору
				<params>
					<param name="Идентификатор" type="String">
						Идентификатор плана счетов, заданный в конфигураторе
					</param>
				</params>
				<return type="AccountChart" InExprOnly="1">
					значение плана счетов
				</return>
			</method>
		</methods>
	</type>
	<type name="AccountChart" alias="ПланСчетов" components="2">
		<methods>
			<method name="Выбран" alias="Selected">
				<return type="0;1" InExprOnly="1">
					1-значение не пусто, 0-значение пусто
				</return>
			</method>
			<method name="ПорядковыйНомер" alias="Number">
				<return type="Number" InExprOnly="1">
					порядковый номер плана счетов среди планов счетов конфигурации
				</return>
			</method>
			<method name="Идентификатор" alias="Identifier">
				<return type="String" InExprOnly="1">
					идентификатор вида плана счетов как он задан в метаданных
				</return>
			</method>
		</methods>
	</type>
	<type name="SubcontoKinds" alias="ВидыСубконто" components="2">
		<methods>
			<method name="КоличествоЗначений" alias="Count">
				<return type="Number" InExprOnly="1">
					количество видов субконто конфигурации
				</return>
			</method>
			<method name="ЗначениеПоНомеру" alias="ValueByIndex">
				<params>
					<param name="Номер" type="Number">
						Номер позиции вида субконто, заданный в конфигураторе
					</param>
				</params>
				<return type="SubcontoKind">
					ВидСубконто, соответствующий номеру заданной позиции
				</return>
			</method>
			<method name="ЗначениеПоИдентификатору" alias="ValueByIdentifier">
				Позволяет определить вид субконто, соответствующий заданному идентификатору
				<params>
					<param name="Идентификатор" type="String">
						Идентификатор вида субконто, заданный в конфигураторе
					</param>
				</params>
				<return type="SubcontoKind">
					значение вида субконто
				</return>
			</method>
		</methods>
	</type>
	<type name="SubcontoKind" alias="ВидСубконто" components="2">
		<methods>
			<method name="Выбран" alias="Selected">
				<return type="0;1" InExprOnly="1">
					1-значение не пусто, 0-значение пусто
				</return>
			</method>
			<method name="ПорядковыйНомер" alias="Number">
				<return type="Number" >
					порядковый номер вида субконто среди видов субконто, созданных в конфигурации
				</return>
			</method>
			<method name="ТипСубконто" alias="SubcontoType">
				<return type="String" InExprOnly="1">
					значение, описывающее тип субконто
				</return>
			</method>
			<method name="Идентификатор" alias="Identifier">
				<return type="String">
					идентификатор вида субконто как он задан в метаданных
				</return>
			</method>
		</methods>
	</type>
	<type name="ValueList" alias="СписокЗначений" creatable="СписокЗначений,ValueList">
		<methods>
			<method name="ДобавитьЗначение" alias="AddValue">
				Добавить значение в список
				<params>
					<param name="Значение">
						значение, которое добавляется в список
					</param>
					<param name="Строка" type="String" default="">
						символьное представление значения
					</param>
				</params>
			</method>
			<method name="ВставитьЗначение" alias="InsertValue">
				Вставить значение в указанную позицию списка
				<params>
					<param name="Позиция" type="Number">
						номер позиции в списке
					</param>
					<param name="Значение">
						значение, которое вставляется в список
					</param>
					<param name="Строка" type="String" default="">
						символьное представление значения
					</param>
					<param name="Клв" type="Number" default="1">
						число повторов вставляемого значения
					</param>
				</params>
			</method>
			<method name="РазмерСписка" alias="GetListSize">
				<return type="Number">
					число элементов в списке
				</return>
			</method>
			<method name="УстановитьЗначение" alias="SetValue">
				Установить значение в указанной позиции списка
				<params>
					<param name="Позиция" type="Number">
						номер позиции в списке
					</param>
					<param name="Знач">
						значение, которое устанавливается в позиции
					</param>
					<param name="Строка" type="String" default="">
						символьное представление значения
					</param>
					<param name="Клв" type="Number" default="1">
						число повторов устанавливаемого значения
					</param>
				</params>
			</method>
			<method name="Установить" alias="Set">
				Устанавливает в списке значение с указанным представлением
				<params>
					<param name="Строка" type="Number" default="">
						символьное представление значения
					</param>
					<param name="Знач" type="Number" default="">
						значение, которое устанавливается в позиции
					</param>
				</params>
			</method>
			<method name="Сортировать" alias="Sort">
				Отсортировать список по значениям
				<params>
					<param name="Направление" type="0;1" default="0">
						0-по возрастанию, иначе по убыванию
					</param>
					<param name="ДокПоДате" type="0;1" default="0">
						1-сортировка по хронологии документов, 0-нет
					</param>
				</params>
			</method>
			<method name="СортироватьПоПредставлению" alias="SortByPresent">
				Отсортировать список по символьному представлению
				<params>
					<param name="Направление" type="0;1" default="0">
						0-по возрастанию, иначе по убыванию
					</param>
				</params>
			</method>
			<method name="Принадлежит" alias="Belong">
				Проверяет вхождение в список значений указанного значения
				<params>
					<param name="Значение">
						значение, проверяемое на вхождение в список значений
					</param>
				</params>
				<return type="0;1" InExprOnly="1">
					1-значение входит в список значений, 0-не входит
				</return>
			</method>
			<method name="НайтиЗначение" alias="FindValue">
				<params>
					<param name="Значение">
						значение, которое необходимо найти в списке
					</param>
				</params>
				<return type="Number" InExprOnly="1">
					номер позиции в списке с искомым значением
				</return>
			</method>
			<method name="ПолучитьЗначение" alias="GetValue">
				Получить значение из указанной позиции списка
				<params>
					<param name="Позиция" type="Number">
						номер позиции в списке
					</param>
					<param name="Строка" type="VarName" default="">
						переменная, в которой возвращается символьное представление получаемого значения
					</param>
				</params>
				<return>
					значение из списка
				</return>
			</method>
			<method name="Получить" alias="Get">
				Получить значение по указанному представлению
				<params>
					<param name="Строка" type="String">
						символьное представление получаемого значения
					</param>
				</params>
				<return InExprOnly="1">
					значение по указанному представлению
				</return>
			</method>
			<method name="ИзСтрокиСРазделителями" alias="FromSeparatedString">
				Заполняет СписокЗначений значениями из переданной в качестве параметра строки, содержащей разделенные запятыми значения
				<params>
					<param name="Строка" type="String">
						символьная строка, в которой значения разделены запятыми
					</param>
				</params>
			</method>
			<method name="ВСтрокуСРазделителями" alias="ToSeparatedString">
				Преобразует СписокЗначений в строку, содержащую, разделенные запятыми числа и строки в двойных кавычках
				<return type="String" InExprOnly="1">
					результирующую строку
				</return>
			</method>
			<method name="ВыбратьЗначение" alias="ChooseValue">
				Открыть окно для интерактивного выбора значения из списка
				<params>
					<param name="Значение" type="VarName">
						переменная, в которую помещается результат выбора
					</param>
					<param name="Заголовок" type="String" default="">
						заголовок диалогового окна
					</param>
					<param name="Позиция" type="VarName" default="">
						переменная, в которую помещается номер позиции выбранного значения в списке
					</param>
					<param name="Таймаут" type="Number" default="">
						время ожидания системы на отклик пользователя
					</param>
					<param name="СпособВыбора" type="0;1;2" default="0">
						0-в виде диалога, 1-в виде меню, 2-маленьким списком
					</param>
				</params>
				<return type="-1;0;1">
					-1- закончилось время, 1-выбор произведен, 0-иначе
				</return>
			</method>
			<method name="ОтметитьЗначения" alias="CheckValues">
				Открыть окно для интерактивной пометки значений списка
				<params>
					<param name="Значение" type="VarName">
						переменная, в которую помещается результат выбора
					</param>
					<param name="Заголовок" type="String" default="">
						заголовок диалогового окна
					</param>
					<param name="Позиция" type="Number" default="">
						переменная, в которую помещается номер позиции выбранного значения в списке
					</param>
					<param name="Таймаут" type="Number" default="0">
						время ожидания системы на отклик пользователя
					</param>
				</params>
				<return type="-1;0;1">
					-1-закончилось время, 1-выбор произведен, 0-иначе
				</return>
			</method>
			<method name="Пометка" alias="Check">
				Пометить значение списка
				<params>
					<param name="Позиция" type="Number">
						номер позиции выбранного значения в списке
					</param>
					<param name="Пометка" type="0;1" default="">
						1-установить отметку, 0-снять отметку
					</param>
				</params>
				<return type="0;1">
					значение метки до выполнения метода. 1-установлена, 0-не установлена
				</return>
			</method>
			<method name="ТекущаяСтрока" alias="CurSel">
				Установить/определить текущий элемент списка в поле диалога
				<params>
					<param name="ИндексСтроки" type="Number" default="">
						номер строки поля диалога, на которую требуется установить курсор
					</param>
				</params>
				<return type="Number">
					номер текущей строки поля диалога
				</return>
			</method>
			<method name="УдалитьЗначение" alias="RemoveValue">
				Удалить значения с указанной позиции списка
				<params>
					<param name="Позиция" type="Number">
						номер позиции в списке, начиная с которой будут удалены значения
					</param>
					<param name="Клв" type="Number" default="1">
						число удаляемых значений
					</param>
				</params>
			</method>
			<method name="УдалитьВсе" alias="RemoveAll">
				Удалить все элементы списка
			</method>
			<method name="СдвинутьЗначение" alias="MoveValue">
				Переместить значение списка значений на новую позицию
				<params>
					<param name="Колич" type="Number">
						количество позиций, на которое надо переместить значение
					</param>
					<param name="НомерПоз" type="Number">
						номер позиции, значение которой надо переместить
					</param>
				</params>
			</method>
			<method name="Выгрузить" alias="Unload">
				Выгрузить список значений в другой список значений или таблицу значений
				<params>
					<param name="Знач" type="ValueList,ValueTable">
						Таблица значений или Список значений, в который нужно выгрузить данные
					</param>
					<param name="НачПоз" type="Number" default="1">
						Номер начальной позиции, с которой надо начинать выгрузку
					</param>
					<param name="Колич" type="Number" default="">
						Количество выгружаемых значений
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="ValueTable" alias="ТаблицаЗначений" creatable="ТаблицаЗначений,ValueTable">
		<attribs>
			<attrib name="НомерСтроки" alias="LineNum" type="Number">
				Номер текущей строки таблицы значений
			</attrib>
		</attribs>
		<methods>
			<method name="КоличествоКолонок" alias="ColumnCount">
				Устанавливает/возвращает количество колонок
				<params>
					<param name="Колич" type="Number" default="">
						новое количество колонок
					</param>
				</params>
				<return type="Number">
				</return>
			</method>
			<method name="НоваяКолонка" alias="NewColumn">
				Добавить в конец таблицы значений новую колонку
				<params>
					<param name="Идентификатор" type="String" default="">
						Идентификатор колонки
					</param>
					<param name="Тип" type="TypeName" default="">
						Строка или вид субконто, задающий тип колонки
					</param>
					<param name="Длина" type="Number" default="">
						Длина для числовой или строковой колонки
					</param>
					<param name="Точность" type="Number" default="">
						Точность для числовой колонки
					</param>
					<param name="Заголовок" type="String" default="">
						заголовок колонки в элементе диалога
					</param>
					<param name="Ширина" type="Number" default="">
						ширина колонки (в символах) в элементе диалога
					</param>
					<param name="Формат" type="String" default="">
						форматная строка, которая будет использована при отображении значений колонки
					</param>
					<param name="Положение" type="1;2" default="">
						вариант выравнивания при отображении значений колонки. 1-слева, 2-справа
					</param>
				</params>
				<return type="Number">
					номер новой колонки
				</return>
			</method>
			<method name="ВставитьКолонку" alias="InsertColumn">
				Вставить новую колонку в таблицу значений в указанную позицию
				<params>
					<param name="Идентификатор" type="String" default="">
						Идентификатор колонки
					</param>
					<param name="НомерКолонки" type="Number" default="">
						позиция, в которую вставляется новая колонка
					</param>
					<param name="Тип" type="TypeName" default="">
						Строка или вид субконто, задающий тип колонки
					</param>
					<param name="Длина" type="Number" default="">
						Длина для числовой или строковой колонки
					</param>
					<param name="Точность" type="Number" default="">
						Точность для числовой колонки
					</param>
					<param name="Заголовок" type="String" default="">
						заголовок колонки в элементе диалога
					</param>
					<param name="Ширина" type="Number" default="">
						ширина колонки (в символах) для представления колонки в элементе диалога
					</param>
					<param name="Формат" type="String" default="">
						форматная строка, которая будет использована при отображении значений колонки
					</param>
					<param name="Положение" type="1;2" default="">
						вариант выравнивания при отображении значений колонки. 1-слева, 2-справа
					</param>
				</params>
				<return type="Number">
					номер новой колонки
				</return>
			</method>
			<method name="УдалитьКолонку" alias="DeleteColumn">
				Удаляет колонку из таблицы значений
				<params>
					<param name="Колонка" type="Number,String">
						номер или идентификатор удаляемой колонки
					</param>
				</params>
			</method>
			<method name="УстановитьПараметрыКолонки" alias="SetColumnParameters">
				Устанавливает новые значения параметров колонки (только те, которые указаны)
				<params>
					<param name="Колонка" type="Number,String">
						номер или код колонки, для которой будут установлены новые параметры
					</param>
					<param name="Тип" type="TypeName" default="">
						Строка или вид субконто, задающий тип колонки
					</param>
					<param name="Длина" type="Number" default="">
						Длина для числовой или строковой колонки
					</param>
					<param name="Точность" type="Number" default="">
						Точность для числовой колонки
					</param>
					<param name="Заголовок" type="String" default="">
						заголовок колонки в элементе диалога
					</param>
					<param name="Ширина" type="Number" default="">
						ширина колонки (в символах) для представления колонки в элементе диалога
					</param>
					<param name="Формат" type="String" default="">
						форматная строка, которая будет использована при отображении значений колонки
					</param>
					<param name="Положение" type="1;2" default="">
						вариант выравнивания при отображении значений колонки. 1-слева, 2-справа
					</param>
				</params>
			</method>
			<method name="ПолучитьПараметрыКолонки" alias="GetColumnParameters">
				Получить значения параметров колонки
				<params>
					<param name="Колонка" type="Number,String">
						номер или код колонки, для которой требуется получить параметры
					</param>
					<param name="Тип" type="VarName" default="">
						переменная, в которую метод вернет строку, описывающую тип колонки или вид субконто
					</param>
					<param name="Длина" type="VarName" default="">
						переменная, в которую метод вернет длину для строковых и числовых значений
					</param>
					<param name="Точность" type="VarName" default="">
						переменная, в которую метод вернет точность для числовых значений
					</param>
					<param name="Заголовок" type="VarName" default="">
						переменная, в которую метод вернет заголовок колонки
					</param>
					<param name="Ширина" type="VarName" default="">
						переменная, в которую метод вернет ширину колонки
					</param>
					<param name="Формат" type="VarName" default="">
						переменная, в которую метод вернет форматную строку, которая используется при отображении значений колонки
					</param>
					<param name="Положение" type="VarName" default="">
						переменная, в которую метод вернет вариант выравнивания при отображении значений колонки
					</param>
				</params>
				<return type="Number,String">
					номер или код колонки
				</return>
			</method>
			<method name="КоличествоСтрок" alias="LinesCnt">
				Устанавливает/возвращает количество строк в таблице значений
				<params>
					<param name="Колич" type="Number" default="">
						Новое количество строк в таблице значений
					</param>
				</params>
				<return type="Number">
				</return>
			</method>
			<method name="НоваяСтрока" alias="NewLine">
				Добавляет новую строку в таблицу значений
				<params>
					<param name="НомерСтроки" type="Number" default="">
						позиция, в которую следует вставить новую строку
					</param>
				</params>
			</method>
			<method name="УдалитьСтроку" alias="DeleteLine">
				Удаляет строку из таблицы значений
				<params>
					<param name="НомерСтроки" type="Number" default="">
						Номер строки. Если не указан, то удаляется текущая строка
					</param>
				</params>
			</method>
			<method name="УдалитьСтроки" alias="DeleteLines">
				Удаляет все строки из таблицы значений
			</method>
			<method name="ВыбратьСтроки" alias="SelectLines">
				Открывает выборку строк таблицы значений
			</method>
			<method name="ПолучитьСтроку" alias="GetLine">
				Получить из выборки следующую строку таблицы значений
				<return type="0;1">
					1-очередная строка выбрана, 0-не выбрана
				</return>
			</method>
			<method name="ВыбратьСтроку" alias="ChooseLine">
				Открыть окно для интерактивного выбора строки в таблице значений
				<params>
					<param name="Строка" type="VarName" default="">
						переменная, куда помещается номер выбранной строки
					</param>
					<param name="Заголовок" type="String" default="">
						заголовок диалогового окна
					</param>
					<param name="Таймаут" type="Number" default="0">
						время ожидания системы на отклик пользователя
					</param>
				</params>
				<return type="-1;0;1">
					1-выбор произведен, 0-выбор не произведен, -1-закончилось время
				</return>
			</method>
			<method name="ПолучитьСтрокуПоНомеру" alias="GetLineByNumber">
				Получить строку таблицы значений по номеру
				<params>
					<param name="НомерСтроки" type="Number">
						номер строки, на которую следует переместиться
					</param>
				</params>
			</method>
			<method name="СдвинутьСтроку" alias="MoveLine">
				Переместить строку таблицы значений на новую позицию
				<params>
					<param name="КоличСтрок" type="Number">
						число строк, на которое надо переместить строку
					</param>
					<param name="НомерСтроки" type="Number" default="">
						Номер строки, которую надо переместить
					</param>
				</params>
			</method>
			<method name="УстановитьЗначение" alias="SetValue">
				Установить значение ячейки таблицы значений
				<params>
					<param name="Строка" type="Number">
						номер строки
					</param>
					<param name="Колонка" type="Number,String">
						номер или идентификатор колонки
					</param>
					<param name="Знач">
						устанавливаемое значение в ячейке таблицы
					</param>
				</params>
			</method>
			<method name="ПолучитьЗначение" alias="GetValue">
				Получить значение заданной ячейки таблицы значений
				<params>
					<param name="Строка" type="Number">
						номер строки
					</param>
					<param name="Колонка" type="Number,String">
						номер или идентификатор колонки
					</param>
				</params>
				<return>
					значение заданной ячейки
				</return>
			</method>
			<method name="НайтиЗначение" alias="FindValue">
				Найти заданное значение в таблице значений
				<params>
					<param name="Знач">
						значение для поиска
					</param>
					<param name="Строка" type="VarName,String">
						переменная, куда возвращается номер найденной строки
					</param>
					<param name="Колонка" type="VarName,String">
						номер или идентификатор колонки, возвращает номер найденной колонки
					</param>
				</params>
				<return type="0;1">
					0-не найдено, 1-найдено
				</return>
			</method>
			<method name="Сортировать" alias="Sort">
				Сортировать таблицу значений по колонкам
				<params>
					<param name="Колонки" type="Ыекштп">
						строковое выражение, которое определяет колонки, порядок и направление сортировки
					</param>
					<param name="ДокумПоДате" type="0;1" default="0">
						1-по хронологии документов, 0-нет
					</param>
				</params>
			</method>
			<method name="Очистить" alias="Clear">
				Очистить таблицу значений и удалить колонки
			</method>
			<method name="Итог" alias="Total">
				Вычислить сумму по колонке таблицы значений
				<params>
					<param name="Колонка" type="Number,String">
						номер или идентификатор колонки, по которой считать сумму
					</param>
				</params>
				<return type="Number">
				</return>
			</method>
			<method name="Заполнить" alias="Fill">
				Заполнить соответствующие ячейки таблицы значений переданным значением
				<params>
					<param name="Знач">
						значение одиночное или список значений или таблица значений
					</param>
					<param name="НачСтрока" type="Number" default="1">
						Номер начальной строки, с которой надо начинать заполнение
					</param>
					<param name="КонСтрока" type="Number" default="">
						Номер последней строки, по которую надо заполнять
					</param>
					<param name="Колонки" type="Number,String" default="">
						Номера или идентификаторы колонок, которые надо заполнять
					</param>
				</params>
			</method>
			<method name="Свернуть" alias="GroupBy">
				Позволяет свернуть таблицу значений по соответствующим значениям колонок
				<params>
					<param name="ГруппКолонки" type="String">
						группировочные колонки
					</param>
					<param name="СуммКолонки" type="String">
						суммируемые колонки
					</param>
				</params>
			</method>
			<method name="Выгрузить" alias="Unload">
				Выгрузить соответствующие ячейки таблицы значений
				<params>
					<param name="Знач" type="ValueTable,ValueList">
						Таблица значений или Список значений, куда нужно выгрузить данные
					</param>
					<param name="НачСтрока" type="Number" default="1">
						Номер начальной строки, с которой надо начинать выгрузку
					</param>
					<param name="КонСтрока" type="Number" default="">
						Номер последней строки, по которую надо выгружать
					</param>
					<param name="Колонки" type="Number,String" default="">
						Номера или идентификаторы колонок, которые надо выгружать
					</param>
				</params>
			</method>
			<method name="Загрузить" alias="Load">
				Скопировать структуру и значения таблицы значений
				<params>
					<param name="ТаблицаЗначений" type="ValueTable">
						Структура и значения для загрузки.
					</param>
				</params>
			</method>
			<method name="ТекущаяСтрока" alias="CurrentLine">
				Установить/определить текущую строку таблицы в элементе диалога
				<params>
					<param name="Строка" type="Number" default="">
						задаваемый индекс строки для элемента диалога
					</param>
				</params>
				<return type="Number">
					индекс текущей строки поля диалога
				</return>
			</method>
			<method name="ТекущаяКолонка" alias="CurrentColumn">
				Установить/определить текущую колонку таблицы в элементе диалога
				<params>
					<param name="НоваяКолонка" type="Number,String" default="">
						Номер или код колонки на которую требуется установить курсор
					</param>
					<param name="ТекущаяКолонка" type="VarName" default="">
						Идентификатор переменной, куда система возвращает номер текущей колонки
					</param>
				</params>
				<return type="String">
					код текущей колонки поля диалога
				</return>
			</method>
			<method name="ВидимостьКолонки" alias="ColumnVisibility">
				Показать/скрыть колонки таблицы значений в визуальном представлении таблицы значений
				<params>
					<param name="Колонки" type="String">
						строковое выражение, которое определяет список колонок
					</param>
					<param name="Видимость" type="0;1" default="1">
						1-показать, 0-скрыть
					</param>
					<param name="Позиция" type="Number" default="">
						Позиция, в которой показывать колонку
					</param>
				</params>
			</method>
			<method name="Фиксировать" alias="Fix">
				Фиксировать в  элементе диалога колонки и строки
				<params>
					<param name="КолСтрок" type="Number" default="">
						Количество фиксируемых строк
					</param>
					<param name="КолКолонок" type="Number" default="">
						Количество фиксируемых колонок
					</param>
				</params>
			</method>
			<method name="ВыводитьПиктограммы" alias="ShowImages">
				Выводить в элементе диалога пиктограммы
				<params>
					<param name="Колонка" type="Number,String">
						номер или идентификатор колонки, которая содержит номера пиктограмм
					</param>
					<param name="Пиктограмма" type="Number" default="1">
						Начальный номер пиктограммы
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="TableBase" alias="Таблица" abstract="1">
		<methods>
			<method name="Записать" alias="Write">
				Записать таблицу в файл
				<params>
					<param name="ИмяФайла" type="String">
						имя файла
					</param>
					<param name="ТипФайла" type="0;1;2;3" default="0">
						0 или &quot;MXL&quot; - формат 1C, 1 или &quot;XLS&quot; - формат Ms Excel, 2 или &quot;HTM&quot; или &quot;HTML&quot; - формат HTML, 3 или &quot;TXT&quot; - формат TXT
					</param>
				</params>
			</method>
			<method name="Область" alias="Area">
				<params>
					<param name="Адрес" type="String" default="">
						имя области или адрес в формате &quot;R1C1:R2C2&quot;
					</param>
				</params>
				<return type="Area">
					область выходной таблицы или таблицы в режиме ввода данных
				</return>
			</method>
			<method name="Область" alias="Area">
				<params>
					<param name="R1" type="Number" default="">
						Номер первой строки области
					</param>
					<param name="C1" type="Number" default="">
						Номер первого столбца области
					</param>
					<param name="R2" type="Number" default="">
						Номер последней строки области
					</param>
					<param name="C2" type="Number" default="">
						Номер последнего столбца области
					</param>
				</params>
				<return type="Area">
					область выходной таблицы или таблицы в режиме ввода данных
				</return>
			</method>
			<method name="ПовторятьПриПечатиСтроки" alias="RepeatRowsWhilePrinting">
				Задать строки результирующей таблицы, повторяющиеся при печати в начале каждой страницы
				<params>
					<param name="НачСтрока" type="Number">
						номер первой строки повторения
					</param>
					<param name="КонСтрока" type="Number">
						номер последней строки повторения
					</param>
				</params>
			</method>
			<method name="ПовторятьПриПечатиСтолбцы" alias="RepeatColsWhilePrinting">
				Задать столбцы результирующей таблицы, повторяющиеся при печати на каждой странице слева
				<params>
					<param name="НачСтолбец" type="Number">
						номер первого столбца повторения
					</param>
					<param name="КонСтолбец" type="Number">
						номер последнего столбца повторения
					</param>
				</params>
			</method>
			<method name="Опции" alias="Options">
				Установить флаги вывода сетки, заголовков, фиксации строк и столбцов, набор опций печати
				<params>
					<param name="ВыводСетки" type="0;1" default="1">
						флаг вывода сетки: 1-показывать, 0-не показывать
					</param>
					<param name="ВыводЗаголовков" type="0;1" default="1">
						флаг вывода заголовков строк и столбцов: 1-показывать, 0-не показывать
					</param>
					<param name="ФиксСтрок" type="Number" default="0">
						число фиксируемых строк
					</param>
					<param name="ФиксСтолбцов" type="Number" default="0">
						число фиксируемых столбцов
					</param>
					<param name="ИмяОпцийПечати" type="String" default="">
						идентификатор набора опций печати
					</param>
					<param name="ИмяСохрРазмОкна" type="String" default="">
						идентификатор сохраняемых параметров размера окна
					</param>
					<param name="ФлагЧБПросмотра" type="0;1" default="0">
						1-черно-белый просмотр, 0-обычный режим просмотра
					</param>
					<param name="НаправлПерехода" type="0;1" default="1">
						1-по строкам, 2-по столбцам, 3-отсутствует
					</param>
				</params>
			</method>
			<method name="ОбластьПечати" alias="PrintRange">
				Устанавливает из языка область печати табличного документа
				<params>
					<param name="Верх" type="Number">
						номер верхней печатаемой строки
					</param>
					<param name="Лево" type="Number">
						номер крайнего левого печатаемого столбца
					</param>
					<param name="Низ" type="Number">
						номер нижней печатаемой строки
					</param>
					<param name="Право" type="Number">
						номер крайнего правого печатаемого столбца
					</param>
				</params>
			</method>
			<method name="ПараметрыСтраницы" alias="PageSetup">
				Установить параметры страницы
				<params>
					<param name="Ориентация" type="1;2" default="">
						1- портрет, 2-ландшафт
					</param>
					<param name="Масштаб" type="Number" default="">
						масштаб (в процентах) вывода на печать
					</param>
					<param name="РежимПечатиКопий" type="0;1" default="">
						режим вывода нескольких копий на печать: 0- (collate) выводить сначала первые страницы всех копий,  затем вторые и т.д.; 1-(разобрать) выводить страницы копий по порядку
					</param>
					<param name="ПолеСлева" type="Number" default="">
						расстояние (в миллиметрах) от левого края страницы
					</param>
					<param name="ПолеСправа" type="Number" default="">
						расстояние (в миллиметрах) от правого края страницы
					</param>
					<param name="ПолеСверху" type="Number" default="">
						расстояние (в миллиметрах) от верхнего края страницы
					</param>
					<param name="ПолеСнизу" type="Number" default="">
						расстояние (в миллиметрах) от нижнего края страницы
					</param>
					<param name="КолонтитулСверху" type="Number" default="">
						размер (в миллиметрах) верхнего колонтитула
					</param>
					<param name="КолонтитулСнизу" type="Number" default="">
						размер (в миллиметрах) нижнего колонтитула
					</param>
					<param name="Автомасштаб" type="0;1" default="0">
						Режим автоматического подбора масштаба для размещения документа при печати на листе по ширине. 1-включить; 0-выключить; по умолчанию - 0
					</param>
					<param name="ФлагЧБПечати" type="0;1" default="0">
						1-черно-белая печать, 0-обычный режим печати
					</param>
					<param name="ИмяПринтера" type="String" default="">
						Строка имени принтера, как в стандартном диалоге печати Windows
					</param>
				</params>
			</method>
			<method name="КоличествоЭкземпляров" alias="NumberOfCopies">
				Определить количество печатаемых экземпляров
				<params>
					<param name="Колво" type="Number" default="">
						число печатаемых экземпляров
					</param>
				</params>
				<return type="Number">
					текущее значение количества печатаемых экземпляров
				</return>
			</method>
			<method name="ЭкземпляровНаСтранице" alias="CopyesPerPage">
				Определить количество печатаемых экземпляров на странице
				<params>
					<param name="Колво" type="0;1;2" default="">
						число печатаемых экземпляров на странице. 1-один экземпляр, 2-два экземпляра, 0-авто
					</param>
				</params>
				<return type="Number">
					текущее значение количества печатаемых экземпляров на странице
				</return>
			</method>
			<method name="Напечатать" alias="Print">
				Напечатать таблицу без предварительного просмотра
				<params>
					<param name="Флаг" type="0;1" default="1">
						1-запрашивать диалог печати, 0-не запрашивать
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Table" alias="Таблица" base="TableBase" creatable="Table,Таблица">
		<attribs>
			<attrib name="ТекущийОбъект" alias="CurrentObj" InExprOnly="1">
				Атрибут (только для чтения) содержит значение встроенного объекта таблицы типа &quot;Картинка&quot;, &quot;Диаграмма&quot; или &quot;OLE объект&quot;
			</attrib>
		</attribs>
		<methods>
			<method name="ИсходнаяТаблица" alias="SourceTable">
				Переназначает в качестве исходной таблицы-шаблона одну из таблиц той формы, в программном модуле которой запущена данная процедура
				<params>
					<param name="Строка" type="String">
						задает имя таблицы формы или имя файла содержащего таблицу
					</param>
				</params>
			</method>
			<method name="ИспользоватьФормат" alias="DefaultFormat">
				Устанавливает формат по умолчанию для вывода выражений секций таблицы
				<params>
					<param name="СтрокаФормата" type="String" default="">
						выражение, содержащее форматную строку
					</param>
				</params>
				<return type="String">
					значение, содержащее текущую форматную строку по умолчанию для таблицы
				</return>
			</method>
			<method name="Открыть" alias="Open">
				Открыть таблицу из файла
				<params>
					<param name="ИмяФайла" type="String">
						строковое выражение с именем файла
					</param>
				</params>
			</method>
			<method name="Вывести" alias="Put">
				Перенести всю назначенную исходную таблицу-шаблон в результирующую таблицу
			</method>
			<method name="ПолучитьСекцию" alias="GetSection">
				<params>
					<param name="ИмяСекции" type="String">
						имя секции
					</param>
				</params>
				<return type="Section">
					именованную секцию исходной таблицы-шаблона
				</return>
			</method>
			<method name="ВывестиСекцию" alias="PutSection">
				Перенести секцию исходной таблицы-шаблона в результирующую таблицу
				<params>
					<param name="ИмяСекции" type="String,Section">
						строка, задающее имя выводимой секции, или секция, полученное при помощи метода ПолучитьСекцию
					</param>
				</params>
			</method>
			<method name="ПрисоединитьСекцию" alias="AttachSection">
				Присоединить секцию исходной таблицы-шаблона к текущей таблице
				<params>
					<param name="ИмяСекции" type="String">
						строка, задающее имя присоединяемой секции, или секция, полученное при помощи метода ПолучитьСекцию
					</param>
				</params>
			</method>
			<method name="НоваяСтраница" alias="NewPage">
				Вставить в результирующую таблицу разделитель страниц
				<params>
					<param name="Ном" type="Number" default="">
						Номер строки, после которой начинать новую страницу
					</param>
				</params>
			</method>
			<method name="НоваяКолонка" alias="NewColumn">
				Вставить в результирующую таблицу разделитель колонок
				<params>
					<param name="Ном" type="Number" default="">
						Номер столбца, после которого установить разделитель колонок
					</param>
				</params>
			</method>
			<method name="ШиринаТаблицы" alias="TableWidth">
				<return type="Number">
					число столбцов в сформированной результирующей таблице
				</return>
			</method>
			<method name="ВысотаТаблицы" alias="TableHeight">
				<return type="Number">
					число строк в сформированной результирующей таблице
				</return>
			</method>
			<method name="ШиринаСекции" alias="SectionWidth">
				<params>
					<param name="ИмяСекции" type="String">
						строка, задающее имя выводимой секции
					</param>
				</params>
				<return type="Number">
					число столбцов в секции таблицы-шаблона
				</return>
			</method>
			<method name="ВысотаСекции" alias="SectionHeight">
				<params>
					<param name="ИмяСекции" type="Number" default="">
						строка, задающее имя выводимой секции
					</param>
				</params>
				<return type="Number">
					число строк в секции таблицы-шаблона
				</return>
			</method>
			<method name="ТолькоПросмотр" alias="ReadOnly">
				Установить флаг режима редактирования таблицы
				<params>
					<param name="Флаг" type="0;1" default="">
						1-только просмотр, 0-допускается редактирование
					</param>
				</params>
				<return type="0;1">
					текущее значение режима редактирования таблицы
				</return>
			</method>
			<method name="Показать" alias="Show">
				Открыть окно редактирования таблицы
				<params>
					<param name="Заголовок" type="String" default="">
						Заголовок окна редактирования
					</param>
					<param name="ИмяФайла" type="String" default="">
						Имя файла для сохранения таблицы
					</param>
					<param name="Активизировать" type="-1;0;1" default="1">
						Признак активизации. 1-активизировать окно табличного документа, 0-не активизировать, -1-закрыть окно если оно открыто
					</param>
				</params>
			</method>
			<method name="Очистить" alias="Clear">
				Очищает содержимое табличного документа уже открытого в окне методом Показать
			</method>
			<method name="Защита" alias="Protection">
				Защитить таблицу от изменений (редактирования и копирования, в том числе через буфер обмена)
				<params>
					<param name="Флаг" type="0;1">
						1-установить защиту, 0-снять
					</param>
				</params>
				<return type="0;1">
					текущее значение флага защиты таблицы
				</return>
			</method>
			<method name="ЗначениеТекущейЯчейки" alias="ValueOfCurrentCell">
				<params>
					<param name="Адрес" type="VarName" default="">
						Идентификатор переменной, куда система возвратит адрес текущей ячейки в формате &quot;RnCn&quot;
					</param>
				</params>
				<return>
					вычисленное значение текущей ячейки таблицы, перенесенное в табличный документ
				</return>
			</method>
		</methods>
	</type>
	<type name="Section" alias="СекцияТаблицы">
		<methods>
			<method name="Область" alias="Area">
				<params>
					<param name="Адрес" type="String" default="">
						имя области или адрес в формате &quot;R1C1:R2C2&quot;
					</param>
				</params>
				<return type="Area">
					область выходной таблицы или таблицы в режиме ввода данных
				</return>
			</method>
			<method name="Область" alias="Area">
				<params>
					<param name="R1" type="Number" default="">
						Номер первой строки области
					</param>
					<param name="C1" type="Number" default="">
						Номер первого столбца области
					</param>
					<param name="R2" type="Number" default="">
						Номер последней строки области
					</param>
					<param name="C2" type="Number" default="">
						Номер последнего столбца области
					</param>
				</params>
				<return type="Area">
					область выходной таблицы или таблицы в режиме ввода данных
				</return>
			</method>
		</methods>
	</type>
	<type name="Area" alias="ОбластьТаблицы">
		<attribs>
			<attrib name="Текст" alias="Text" type="String">
				Атрибут позволяет прочитать/установить значение текста области
			</attrib>
		</attribs>
		<methods>
			<method name="Расшифровка" alias="Details">
				Установить расшифровку области
				<params>
					<param name="Значение" default="">
						Новое значение расшифровки области
					</param>
					<param name="РежимИспользования" type="Number" default="0">
						0-обычный режим, 1-установить расшифровку для всей строки, 2-не вызывать расшифровку для данной ячейки
					</param>
				</params>
				<return>
					текущее значение расшифровки
				</return>
			</method>
			<method name="Объединить" alias="Merge">
				Объединить ячейки области
			</method>
			<method name="Шрифт" alias="Font">
				Получить/установить шрифт области
				<params>
					<param name="ИмяШрифта" type="String" default="">
						выражение, задающее имя шрифта или &quot;имя, набор символов&quot;, где основные наборы символов: 204-русский; 238-европейский;  186-балтийский; 161-греческий; 162-турецкий
					</param>
				</params>
				<return type="String">
					имя шрифта до исполнения метода
				</return>
			</method>
			<method name="РазмерШрифта" alias="FontSize">
				Получить/установить размер шрифта области
				<params>
					<param name="Размер" type="Number" default="">
						выражение, задающее размер шрифта
					</param>
				</params>
				<return type="Number">
					размер шрифта до исполнения метода
				</return>
			</method>
			<method name="Полужирный" alias="Bold">
				Получить/установить признак  жирного шрифта области
				<params>
					<param name="Жирный" type="0;1" default="">
						1-жирный шрифт, 0-не жирный шрифт
					</param>
				</params>
				<return type="0;1">
					признак  жирного шрифта до исполнения метода
				</return>
			</method>
			<method name="Курсив" alias="Italic">
				Получить/установить признак шрифта курсив  области
				<params>
					<param name="Курсив" type="0;1" default="">
						1-шрифт курсив, 0-шрифт не курсив
					</param>
				</params>
				<return type="0;1">
					признак шрифта курсив  до исполнения метода
				</return>
			</method>
			<method name="Подчеркнутый" alias="Underline">
				Получить/установить признак подчеркнутого шрифта области
				<params>
					<param name="Подч" type="0;1" default="">
						1-шрифт подчеркнутый, 0-шрифт не подчеркнутый
					</param>
				</params>
				<return type="0;1">
					признак подчеркнутого шрифта до исполнения метода
				</return>
			</method>
			<method name="ВертикальноеПоложение" alias="VerticalAlign">
				Получить/установить признак вертикального выравнивания текста области
				<params>
					<param name="Положение" type="1;2;3" default="">
						1-снизу, 2-сверху, 3-по центру
					</param>
				</params>
				<return type="1;2;3">
					признак вертикального выравнивания текста до исполнения метода
				</return>
			</method>
			<method name="ГоризонтальноеПоложение" alias="HorizontalAlign">
				Получить/установить признак горизонтального выравнивания текста области
				<params>
					<param name="Положение" type="Number" default="">
						1-слева, 2-справа, 3-по центру, 4-по ширине, 5-8-по выделенным столбцам
					</param>
				</params>
				<return type="Number">
					признак горизонтального выравнивания текста до исполнения метода
				</return>
			</method>
			<method name="Контроль" alias="Control">
				Получить/установить признак контроля текста области
				<params>
					<param name="Контроль" type="Number" default="">
						1-Авто, 2-Обрезать, 3-Забивать, 4-Переносить, 5-Красный, 6-Забивать+Красный
					</param>
				</params>
				<return type="Number">
					признак контроля  текста до исполнения метода
				</return>
			</method>
			<method name="РамкаСверху" alias="TopBorder">
				Получить/установить рамку сверху области
				<params>
					<param name="Рамка" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
				</params>
				<return type="Number">
					рамку сверху до исполнения метода
				</return>
			</method>
			<method name="РамкаСнизу" alias="BottomBorder">
				Получить/установить рамку снизу области
				<params>
					<param name="Рамка" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
				</params>
				<return type="Number">
					рамку снизу до исполнения метода
				</return>
			</method>
			<method name="РамкаСлева" alias="LeftBorder">
				Получить/установить рамку слева области
				<params>
					<param name="Рамка" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
				</params>
				<return type="Number">
					рамку слева до исполнения метода
				</return>
			</method>
			<method name="РамкаСправа" alias="RightBorder">
				Получить/установить рамку справа области
				<params>
					<param name="Рамка" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
				</params>
				<return type="Number">
					рамку справа до исполнения метода
				</return>
			</method>
			<method name="Рамка" alias="Border">
				Установить рамки всех ячеек области
				<params>
					<param name="РамкаСлева" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
					<param name="РамкаСверху" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
					<param name="РамкаСправа" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
					<param name="РамкаСнизу" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
				</params>
			</method>
			<method name="РамкаОбвести" alias="BorderOutline">
				Установить рамки по краям области.
				<params>
					<param name="РамкаСлева" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
					<param name="РамкаСверху" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
					<param name="РамкаСправа" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
					<param name="РамкаСнизу" type="Number" default="">
						0-нет, 1- тонкая точечная, 2-очень тонкая, 3-тонкая сплошная, 4-средняя сплошная, 5-толстая сплошная, 6-двойная, 7-тонкая средний пунктир, 8-тонкая длинный пунктир, 9-толстая пунктир
					</param>
				</params>
			</method>
			<method name="ЦветФона" alias="BackgroundColor">
				Получить/установить режим отображения цвета фона области
				<params>
					<param name="Цвет" type="Number" default="">
						выражение, значение которого задает RGB цвет
					</param>
				</params>
				<return type="Number">
					текущее значение RGB-цвета фона области
				</return>
			</method>
			<method name="ЦветФона" alias="BackgroundColor">
				Получить/установить режим отображения цвета фона области
				<params>
					<param name="R" type="Number">
						выражение, значение которого задает красную компоненту цвета
					</param>
					<param name="G" type="Number">
						выражение, значение которого задает зеленую компоненту цвета
					</param>
					<param name="B" type="Number" default="">
						выражение, значение которого задает синюю компоненту цвета
					</param>
				</params>
				<return type="Number">
					текущее значение RGB-цвета фона области
				</return>
			</method>
			<method name="ЦветРамки" alias="BorderColor">
				Получить/установить режим отображения цвета рамки области
				<params>
					<param name="Цвет" type="Number" default="">
						выражение, значение которого задает RGB цвет
					</param>
				</params>
				<return type="Number">
					текущее значение RGB-цвета рамки области
				</return>
			</method>
			<method name="ЦветРамки" alias="BorderColor">
				Получить/установить режим отображения цвета рамки области
				<params>
					<param name="R" type="Number">
						выражение, значение которого задает красную компоненту цвета
					</param>
					<param name="G" type="Number" default="">
						выражение, значение которого задает зеленую компоненту цвета
					</param>
					<param name="B" type="Number" default="">
						выражение, значение которого задает синюю компоненту цвета
					</param>
				</params>
				<return type="Number">
					текущее значение RGB-цвета рамки области
				</return>
			</method>
			<method name="ЦветТекста" alias="TextColor">
				Получить/установить режим отображения цвета текста области
				<params>
					<param name="Цвет" type="Number" default="">
						выражение, значение которого задает RGB цвет
					</param>
				</params>
				<return type="Number">
					текущее значение RGB-цвета текста области
				</return>
			</method>
			<method name="ЦветТекста" alias="TextColor">
				Получить/установить режим отображения цвета текста области
				<params>
					<param name="R" type="Number">
						выражение, значение которого задает красную компоненту цвета
					</param>
					<param name="G" type="Number">
						выражение, значение которого задает зеленую компоненту цвета
					</param>
					<param name="B" type="Number">
						выражение, значение которого задает синюю компоненту цвета
					</param>
				</params>
				<return type="Number">
					текущее значение RGB-цвета текста области
				</return>
			</method>
			<method name="ВысотаСтроки" alias="RowHeight">
				Получить/установить высоту строк, проходящих через область
				<params>
					<param name="Высота" type="Number" default="">
						высота строк, проходящих через область в пунктах с точностью до 0,25
					</param>
				</params>
				<return type="Number">
					высоту строк области в пунктах
				</return>
			</method>
			<method name="ШиринаСтолбца" alias="ColumnWidth">
				Получить/установить ширину столбцов, проходящих через область
				<params>
					<param name="Ширина" type="Number" default="">
						ширина столбцов, проходящих через область в стандартных символах с точностью до 0,125
					</param>
				</params>
				<return type="Number">
					ширину столбцов области в стандартных символах
				</return>
			</method>
		</methods>
	</type>
	<type name="TableInput" base="TableBase" alias="ТаблицаВвода">
		<methods>
			<method name="АктивнаяОбласть" alias="ActiveArea">
				Активизировать область таблицы
				<params>
					<param name="Адрес" type="String" default="">
						выражение, задающее имя области или адрес в формате &quot;R1C1:R2C2&quot;
					</param>
				</params>
				<return type="String">
					имя активной области или адрес в формате &quot;R1C1:R2C2&quot;
				</return>
			</method>
			<method name="Выгрузить" alias="Unload">
				Выгружает значения и имена для всех предназначенных для ввода ячеек таблицы в объект типа &quot;Список значений&quot;, причем имя ячейки становится представлением, а данные из ячейки - значением в записи списка значений
				<params>
					<param name="СписокЗначений" type="VarName">
						идентификатор объекта типа &quot;Список значений&quot;, куда выгружаются парами значения и имена для всех предназначенных для ввода ячеек
					</param>
				</params>
			</method>
			<method name="Загрузить" alias="Load">
				Загружает значения и имена для всех предназначенных для ввода ячеек таблицы из объекта типа &quot;Список значений&quot;, причем представление списка значений становится именем ячейки, а значение записи становится значением ячейки
				<params>
					<param name="СписокЗначений" type="ValueList">
						идентификатор объекта типа &quot;Список значений&quot;, откуда загружаются парами значения и имена для всех предназначенных для ввода ячеек
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="AreaInput" alias="ОбластьВвода">
		<attribs>
			<attrib name="Значение" alias="Value">
				Атрибут позволяет прочитать/установить значение, записанное в области
			</attrib>
		</attribs>
		<methods>
			<method name="Формат" alias="Format">
				Устанавливает формат для вывода всех выражений в ячейках области таблицы
				<params>
					<param name="СтрокаФормата" type="String" default="">
						строковое выражение, содержащее форматную строку
					</param>
				</params>
				<return type="String">
					значение, содержащее текущую форматную строку по умолчанию для области таблицы
				</return>
			</method>
			<method name="УстановитьТип" alias="AssignType">
				Установить тип для значения ячейки неопределенного вида
				<params>
					<param name="Выражение">
						Тип значения этого выражения будет присвоен области таблицы
					</param>
				</params>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для значения ячейки неопределенного вида
				<params>
					<param name="ИмяТипа" type="TypeName">
						название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления числа
					</param>
					<param name="Точность" type="Number" default="">
						число знаков числа после десятичной точки
					</param>
				</params>
			</method>
			<method name="Доступность" alias="ReadOnly">
				Установка режима редактирования области таблицы
				<params>
					<param name="Режим" type="0;1" default="">
						1-разрешено редактирование области таблицы , 0-запрещено
					</param>
				</params>
				<return type="0;1">
					текущее числовое значение режима редактирования области таблицы
				</return>
			</method>
			<method name="Редактирование" alias="EnableEdit">
				Определяет возможность редактирования значений ячеек области таблицы для полей ввода
				<params>
					<param name="Флаг" type="0;1">
						1-значения ячеек области таблицы редактируется как обычно, 0-значение не редактируется, но может выбираться кнопкой выбора
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Text" alias="Текст" creatable="Текст,Text">
		<methods>
			<method name="КоличествоСтрок" alias="LinesCnt">
				<return type="Number">
					число строк в тексте
				</return>
			</method>
			<method name="ПолучитьСтроку" alias="GetLine">
				<params>
					<param name="НомерСтроки" type="Number">
						номер строки
					</param>
				</params>
				<return type="String">
					строку текста с заданным номером
				</return>
			</method>
			<method name="Открыть" alias="Open">
				Открыть текстовый файл
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем файла
					</param>
				</params>
			</method>
			<method name="Шаблон" alias="Template">
				Установить флаг добавления строк по шаблону
				<params>
					<param name="Флаг" type="0;1">
						1-установить флаг добавления строк по шаблону, 0-отменить
					</param>
				</params>
				<return type="0;1">
					текущее значение флага добавления строк по шаблону
				</return>
			</method>
			<method name="ФиксШаблон" alias="FixTemplate">
				Установить флаг добавления строк по фиксированному шаблону
				<params>
					<param name="Флаг" type="0;1">
						1-установить флаг добавления строк по фиксированному шаблону, 0-отменить
					</param>
				</params>
				<return type="0;1">
					текущее значение флага добавления строк по фиксированному шаблону
				</return>
			</method>
			<method name="ВставитьСтроку" alias="InsertLine">
				Вставить строку с указанным номером
				<params>
					<param name="НомерСтроки" type="Number">
						номер вставляемой строки
					</param>
					<param name="Строка" type="String">
						вставляемая строка
					</param>
				</params>
			</method>
			<method name="ДобавитьСтроку" alias="AddLine">
				Добавить строку в конец текста
				<params>
					<param name="Строка" type="String">
						добавляемая строка
					</param>
				</params>
			</method>
			<method name="ЗаменитьСтроку" alias="ReplaceLine">
					Заменить строку с указанным номером
				<params>
					<param name="НомерСтроки" type="Number">
						номер заменяемой строки
					</param>
					<param name="Строка" type="String">
						заменяющая строка
					</param>
				</params>
			</method>
			<method name="УдалитьСтроку" alias="DeleteLine">
				Удалить строку с указанным номером
				<params>
					<param name="НомерСтроки" type="Number">
						номер удаляемой строки
					</param>
				</params>
			</method>
			<method name="ТолькоПросмотр" alias="ReadOnly">
				Установить флаг возможности редактирования текста
				<params>
					<param name="Флаг" type="0;1">
						1-только просмотр текста, 0-можно редактировать
					</param>
				</params>
				<return type="0;1">
					текущее значение режима редактирования текста
				</return>
			</method>
			<method name="Показать" alias="Show">
				Открыть окно редактирования текста
				<params>
					<param name="Заголовок" type="String" default="">
						заголовок окна редактирования
					</param>
					<param name="ИмяФайла" type="String" default="">
						строка с именем файла
					</param>
				</params>
			</method>
			<method name="Очистить" alias="Clear">
				Очищает содержимое текстового документа
			</method>
			<method name="КодоваяСтраница" alias="CodePage">
				Установить режим кодировки текста
				<params>
					<param name="Режим" type="0;1">
						0-windows-кодировка, 1-DOS-кодировка
					</param>
				</params>
				<return type="0;1">
					текущее значение режима кодировки
				</return>
			</method>
			<method name="Записать" alias="Write">
				Записать текст в файл с указанным именем
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем файла
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Picture" alias="Картинка" creatable="Картинка,Picture">
		<methods>
			<method name="Загрузить" alias="Load">
				Загрузить картинку из файла
				<params>
					<param name="ИмяФайла" type="String">
						выражение, которое может задавать: - идентификатор картинки в библиотеке картинок конфигурации или имя файла картинки
					</param>
				</params>
			</method>
			<method name="Сохранить" alias="Save">
				Сохранить картинку в файле в формате загрузки
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем файла
					</param>
				</params>
			</method>
			<method name="РежимРисования" alias="SetDrawMode">
				Установить режим рисования картинки
				<params>
					<param name="Режим" type="Number">
						1-растягивать, 2-рисовать по центру с оригинальным размером, 3-рисовать, сохраняя оригинальное соотношение размеров
					</param>
				</params>
				<return type="Number">
					текущее значение режима рисования картинки
				</return>
			</method>
			<method name="УстановитьКартинку" alias="SetPicture">
				Переустановить объект типа Картинка
				<params>
					<param name="Объект" type="Picture">
						Выражение, имеющее значение типа объекта картинки встроенного языка, или OLE-объект типа IPicture
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Chart" alias="Диаграмма">
		<attribs>
			<attrib name="Заголовок" alias="TitleText" type="String">
				Атрибут содержит текст заголовка диаграммы
			</attrib>
		</attribs>
		<methods>
			<method name="КоличествоСерий" alias="SeriesCount">
				Явно устанавливает количество серий диаграммы
				<params>
					<param name="количество" type="Number" default="">
						количество серий диаграммы
					</param>
				</params>
				<return type="Number">
					текущее значение количества серий
				</return>
			</method>
			<method name="КоличествоТочек" alias="PointsCount">
				Явно устанавливает количество точек диаграммы
				<params>
					<param name="количество" type="Number" default="">
						количество точек диаграммы
					</param>
				</params>
				<return type="Number">
					текущее значение количества точек
				</return>
			</method>
			<method name="УстановитьИмяСерии" alias="SetSeriesLabel">
				Устанавливает метку &lt;метка&gt; для серии &lt;номер серии&gt;
				<params>
					<param name="номер серии" type="Number">
						номер серии, для которой устанавливается метка
					</param>
					<param name="метка" type="String">
						строка, используемая для обозначения серии в легенде и подписях к координатным осям
					</param>
				</params>
			</method>
			<method name="УстановитьИмяТочки" alias="SetPointLabel">
				Устанавливает метку &lt;метка&gt; для точки &lt;номер точки&gt;
				<params>
					<param name="номер точки" type="Number">
						номер точки, для которой устанавливается метка
					</param>
					<param name="метка" type="String">
						строка, используемая для обозначения точки в подписях к координатным осям
					</param>
				</params>
			</method>
			<method name="ЦветСерии" alias="SetSeriesColor">
				Устанавливает RGB цвет для серии &lt;номер серии&gt;
				<params>
					<param name="номер серии" type="Number">
						номер серии, для которой устанавливается цвет
					</param>
					<param name="R" type="Number">
						число, задающее красную компоненту цвета
					</param>
					<param name="G" type="Number">
						число, задающее зеленую компоненту цвета
					</param>
					<param name="B" type="Number">
						число, задающее синюю компоненту цвета
					</param>
				</params>
			</method>
			<method name="АвтоУстановкаИменСерий" alias="AutoSeriesLabels">
				Устанавливает флаг автоматической генерации меток серий
				<params>
					<param name="флаг" type="0;1">
						1-разрешить, 0-запретить автогенерацию меток
					</param>
				</params>
			</method>
			<method name="АвтоУстановкаИменТочек" alias="AutoPointLabels">
				Устанавливает флаг автоматической генерации меток точек
				<params>
					<param name="флаг" type="0;1">
						1-разрешить, 0-запретить автогенерацию меток
					</param>
				</params>
			</method>
			<method name="УстановитьЗначение" alias="SetValue">
				Установка значения в заданной точке и серии
				<params>
					<param name="номер точки" type="Number">
						номер точки, в которой устанавливается значение серии
					</param>
					<param name="номер серии" type="Number">
						номер серии, для которой устанавливается значение
					</param>
					<param name="значение" type="Number">
						устанавливаемое значение
					</param>
					<param name="расшифровка" default="">
						значение любого типа, используемое для расшифровки диаграммы
					</param>
				</params>
			</method>
			<method name="Обновление" alias="RedrawFlag">
				Установка режима обновления диаграммы
				<params>
					<param name="флаг" type="0;1">
						1-разрешающий, 0-запрещающий перерисовку диаграммы
					</param>
				</params>
			</method>
			<method name="Очистить" alias="Clear">
				очищает диаграмму
			</method>
		</methods>
	</type>
	<type name="FS" alias="ФС" creatable="FS,ФС">
		<methods>
			<method name="ВыбратьФайл" alias="SelectFile">
				Открывает окно диалога выбора/сохранения файла
				<params>
					<param name="ТипДиалога" type="0;1">
						0-диалог типа &quot;открыть&quot;, 1-диалог типа &quot;сохранить&quot;
					</param>
					<param name="ИмяФайла" type="VarName">
						переменная, содержащая на входе строку с именем файла, а на выходе - имя выбранного файла
					</param>
					<param name="ИмяНачКаталога" type="VarName">
						переменная, содержащая на входе строку с  начальным каталогом, а на выходе - имя выбранного каталога
					</param>
					<param name="ЗаголовокОкна" type="String">
						строка с заголовком окна
					</param>
					<param name="Фильтр" type="String">
						строка с фильтром отбора файлов (например: &quot;Все файлы (*.*) |*.*&quot;)
					</param>
					<param name="Расширение" type="String">
						строка с расширением файла по умолчанию
					</param>
					<param name="Таймаут" type="Number" default="0">
						время ожидания отклика пользователя в секундах
					</param>
				</params>
				<return type="0;1">
					0- в окне диалога нажата кнопка &quot;Отмена&quot;, 1- нажата кнопка &quot;ОК&quot;
				</return>
			</method>
			<method name="ВыбратьФайлКартинки" alias="SelectPictFile">
				Открывает окно диалога выбора/сохранения файла картинки
				<params>
					<param name="ТипДиалога" type="0;1">
						0-диалог типа &quot;открыть&quot;, 1-диалог типа &quot;сохранить&quot;
					</param>
					<param name="ИмяФайла" type="VarName">
						переменная, содержащая на входе строку с именем файла, а на выходе - имя выбранного файла
					</param>
					<param name="ИмяНачКаталога" type="VarName">
						переменная, содержащая на входе строку с  начальным каталогом, а на выходе - имя выбранного каталога
					</param>
					<param name="ЗаголовокОкна" type="String">
						строка с заголовком окна
					</param>
					<param name="Фильтр" type="String">
						строка с фильтром отбора файлов (например: &quot;Все файлы (*.*) |*.*&quot;)
					</param>
					<param name="Расширение" type="String">
						строка с расширением файла по умолчанию
					</param>
					<param name="Таймаут" type="Number" default="0">
						время ожидания отклика пользователя в секундах
					</param>
				</params>
				<return type="0;1">
					0- в окне диалога нажата кнопка &quot;Отмена&quot;, 1- нажата кнопка &quot;ОК&quot;
				</return>
			</method>
			<method name="ВыбратьКаталог" alias="SelectDirectory">
				Открывает окно диалога выбора каталога
				<params>
					<param name="ИмяКаталога" type="VarName">
						переменная, содержащая на входе строку с  начальным каталогом, на выходе имя выбранного каталога
					</param>
					<param name="ЗаголовокОкна" type="String">
						строка с заголовком окна
					</param>
					<param name="Таймаут" type="Number" default="0">
						время ожидания отклик пользователя в секундах
					</param>
				</params>
				<return type="0;1">
					0- в окне диалога нажата кнопка &quot;Отмена&quot;, 1- нажата кнопка &quot;ОК&quot;
				</return>
			</method>
			<method name="СуществуетФайл" alias="ExistFile">
				Проверяет существование файла
				<params>
					<param name="ИмяФайла" type="FilePath">
						выражение с именем файла
					</param>
				</params>
				<return type="0;1">
					1-файл существует, 0-не существует
				</return>
			</method>
			<method name="КопироватьФайл" alias="FileCopy">
				Копирует файл
				<params>
					<param name="ИмяФайлаИсточника" type="FilePath">
						строка с именем файла источника
					</param>
					<param name="ИмяФайлаПриемника" type="FilePath">
						строка с именем файла приемника
					</param>
					<param name="ФлагПерезаписи" type="0;1">
						0-существующий файл приемника перезаписать, 1-существующий файл приемника не перезаписывать
					</param>
				</params>
			</method>
			<method name="УдалитьФайл" alias="DeleteFile">
				Удаляет файл
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем удаляемого файла
					</param>
				</params>
			</method>
			<method name="ПереименоватьФайл" alias="MoveFile">
				Переименовать/переместить файл
				<params>
					<param name="ИмяФайлаИсточника" type="FilePath">
						строка с именем файла источника
					</param>
					<param name="ИмяФайлаПриемника" type="FilePath">
						строка с новым именем файла
					</param>
					<param name="ФлагПерезаписи" type="0;1">
						0-запрещает перемещение файла между дисками и существующий файл приемника не перезаписывается, 1-разрешает перемещение файла между дисками (только для файлов) и существующий файл приемника перезаписывается
					</param>
				</params>
			</method>
			<method name="НайтиПервыйФайл" alias="FindFirstFile">
				Открывает выборку файлов по заданной маске и находит первый файл
				<params>
					<param name="МаскаИмени" type="String">
						строка с маской имен файлов
					</param>
				</params>
				<return type="String">
					строку с именем найденного файла
				</return>
			</method>
			<method name="НайтиСледующийФайл" alias="FindNextFile">
				Находит следующий файл по открытой выборке файлов
				<return type="String">
					строку с именем найденного файла
				</return>
			</method>
			<method name="АтрибутыФайла" alias="GetFileAttr">
				Возвращает атрибуты файла (в параметрах)
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем файла
					</param>
					<param name="РазмерФайла" type="VarName">
						переменная, принимающая размер файла в байтах
					</param>
					<param name="АтрибутыФайла" type="VarName">
						переменная, принимающая атрибуты файла
					</param>
					<param name="ВремяСоздания" type="VarName">
						переменная, принимающая строку с датой и временем создания файла
					</param>
					<param name="ВремяПоследнегоДоступа" type="VarName">
						переменная, принимающая строку с датой и временем последнего доступа к файлу
					</param>
					<param name="ВремяПоследнейЗаписи" type="VarName">
						переменная, принимающая строку с датой и временем последней записи файла
					</param>
					<param name="РасширенноеИмяФайла" type="VarName">
						переменная, принимающая строку с полным именем файла
					</param>
				</params>
			</method>
			<method name="СоздатьКаталог" alias="CreateDirectory">
				Создать новый каталог файлов
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем создаваемого каталога
					</param>
				</params>
			</method>
			<method name="УдалитьКаталог" alias="RemoveDirectory">
				Удаляет каталог файлов
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем удаляемого каталога файлов
					</param>
				</params>
			</method>
			<method name="УстТекКаталог" alias="SetCurrentDirectory">
				Устанавливает текущий каталог файлов
				<params>
					<param name="ИмяФайла" type="FilePath">
						строка с именем текущего каталога файлов
					</param>
				</params>
			</method>
			<method name="ТекКаталог" alias="GetCurrentDirectory">
				<return type="FilePath">
					строку с именем текущего каталога файлов
				</return>
			</method>
			<method name="WindowsКаталог" alias="GetWindowsDirectory">
				<return type="FilePath">
					строку с именем Windows директории
				</return>
			</method>
			<method name="СвободноеМестоНаДиске" alias="GetDiskFreeSpace">
				<params>
					<param name="ИмяДиска" type="String">
						строка с именем диска (например, &quot;С:&quot;)
					</param>
				</params>
				<return type="Number">
					размер свободного дискового пространства в байтах
				</return>
			</method>
		</methods>
	</type>
	<type name="XBase" alias="XBase" creatable="XBase">
		<attribs>
			<attrib name="Ключ" alias="Key" type="XBaseKey">
				Предоставляет доступ к агрегатному типу данных типа &quot;Ключ&quot;
			</attrib>
		</attribs>
		<methods>
			<method name="СоздатьФайл" alias="CreateFile">
				Создать новый файл DBF формата
				<params>
					<param name="ПутьКБазе" type="FilePath">
						строковое выражение с путем к файлу базы DBF формата
					</param>
					<param name="ПутьКИндексу" type="FilePath" default="">
						строковое выражение с путем к индексному файлу
					</param>
				</params>
			</method>
			<method name="ОткрытьФайл" alias="OpenFile">
				Открыть существующую базу
				<params>
					<param name="ПутьКБазе" type="FilePath">
						строковое выражение с путем к файлу базы DBF формата
					</param>
					<param name="ПутьКИндексу" type="FilePath" default="">
						строковое выражение с путем к индексному файлу
					</param>
					<param name="ТолькоЧтение" type="0;1" default="0">
						1-только чтение, 0-эксклюзивно
					</param>
				</params>
			</method>
			<method name="Открыта" alias="IsOpen">
				<return type="0;1">
					значение флага открытия файла: 1-база открыта, 0-не открыта
				</return>
			</method>
			<method name="ЗакрытьФайл" alias="CloseFile">
				Закрыть ранее открытую или созданную базу
			</method>
			<method name="ОчиститьФайл" alias="Zap">
				Очистить все записи в базе
			</method>
			<method name="Сжать" alias="Pack">
				Сжать базу, убрав удаленные записи
			</method>
			<method name="Переиндексировать" alias="Reindex">
				Переиндексировать базу
			</method>
			<method name="ПоказыватьУдаленные" alias="ShowDeleted">
				Установить режим показа удаленных записей в базе
				<params>
					<param name="Режим" type="0;1" default="0">
						1-показывать удаленные записи, 0-нет
					</param>
				</params>
				<return type="0;1">
					Текущее значение режима показа удаленных записей в базе
				</return>
			</method>
			<method name="Первая" alias="First">
				Перейти на первую запись
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="Последняя" alias="Last">
				Перейти на последнюю запись
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="Следующая" alias="Next">
				Перейти на следующую запись
				<return type="0;1">
					1-получена следующая запись, 0-иначе
				</return>
			</method>
			<method name="Предыдущая" alias="Prev">
				Перейти на предыдущую запись
				<return type="0;1">
					1-получена предыдущая запись, 0-иначе
				</return>
			</method>
			<method name="НомерЗаписи" alias="RecNo">
				<return type="Number">
					внутренний номер текущей записи
				</return>
			</method>
			<method name="Перейти" alias="GoTo">
				Перейти на запись по ее  номеру записи
				<params>
					<param name="НомерЗаписи" type="Number">
						внутренний номер записи в базе данных
					</param>
				</params>
			</method>
			<method name="ВКонце" alias="EOF">
				<return type="0;1">
					значение флага конца файла (1-конец файла, 0-нет)
				</return>
			</method>
			<method name="ВНачале" alias="BOF">
				<return type="0;1">
					значение флага начала файла (1-начало файла, 0-нет)
				</return>
			</method>
			<method name="ТекущийИндекс" alias="CurrentIndex">
				устанавливает/определяет текущий индекс
				<params>
					<param name="НазваниеИндекса" type="String" default="">
						выражение с названием индекса
					</param>
				</params>
				<return type="String">
					строку с названием текущего индекса
				</return>
			</method>
			<method name="Найти" alias="Find">
				Найти запись по индексу
				<params>
					<param name="Ключ">
						выражение со значением ключа текущего индекса
					</param>
					<param name="Режим" type="Number">
						0- =, 1- &gt;=, 2- &gt;, -1-  &lt;=, -2-&lt;
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="НайтиПоКлючу" alias="FindByKey">
				Найти запись по индексу. Перед вызовом метода следует установить значения всех атрибутов агрегатного объекта типа &quot;Ключ&quot;, которые участвуют в вычислении выражения текущего индекса
				<params>
					<param name="Режим" type="Number">
						0- =, 1- &gt;=, 2- &gt;, -1-  &lt;=, -2-&lt;
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено, 0-действие не выполнено
				</return>
			</method>
			<method name="ПолучитьЗначениеПоля" alias="GetFieldValue">
				<params>
					<param name="НазваниеПоля" type="Number,String">
						выражение с названием поля или с номером поля
					</param>
				</params>
				<return>
					значение поля
				</return>
			</method>
			<method name="УстановитьЗначениеПоля" alias="SetFieldValue">
				Установить значение поля текущей записи
				<params>
					<param name="НазваниеПоля" type="Number,String">
						выражение с названием поля или с номером поля
					</param>
					<param name="Значение">
						значение поля
					</param>
				</params>
			</method>
			<method name="Добавить" alias="Add">
				Добавить новую пустую запись
			</method>
			<method name="Скопировать" alias="Copy">
				Скопировать текущую запись
			</method>
			<method name="АвтоСохранение" alias="AutoSave">
				Установить режим автоматического сохранения изменений в базе
				<params>
					<param name="Режим" type="0;1" default="0">
						1-задает режим автоматического сохранения изменений в базе, 0-снимает
					</param>
				</params>
				<return type="0;1">
					Текущее значение режима автоматического сохранения изменений в базе
				</return>
			</method>
			<method name="Записать" alias="Save">
				Записать изменения в базу
			</method>
			<method name="Отменить" alias="Cancel">
				Отменить запись изменения в базу
			</method>
			<method name="Удалить" alias="Del">
				Удалить текущую запись
			</method>
			<method name="ЗаписьУдалена" alias="RecDeleted">
				<return type="0;1">
					значение флага удаления текущей записи (1-запись удалена, 0-нет)
				</return>
			</method>
			<method name="Восстановить" alias="Recall">
				Восстановить текущую запись
			</method>
			<method name="Очистить" alias="Clear">
				Очистить текущую запись
			</method>
			<method name="КоличествоЗаписей" alias="RecCount">
				<return type="Number">
					количество записей в базе
				</return>
			</method>
			<method name="КоличествоПолей" alias="FieldCount">
				<return type="Number">
					количество полей в записи
				</return>
			</method>
			<method name="КоличествоИндексов" alias="IndexCount">
				<return type="Number">
					количество индексов в базе
				</return>
			</method>
			<method name="ОписаниеПоля" alias="GetFieldInfo">
				Возвращает в параметрах описание поля с заданным номером
				<params>
					<param name="НомерПоля" type="Number">
						номер поля для которого требуется получить описание
					</param>
					<param name="НазваниеПоля" type="VarName" default="">
						идентификатор переменной для названия поля
					</param>
					<param name="Тип" type="VarName" default="">
						идентификатор переменной для типа поля
					</param>
					<param name="Длина" type="VarName" default="">
						идентификатор переменной для длины поля
					</param>
					<param name="Точность" type="VarName" default="">
						идентификатор переменной для числа знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="ОписаниеИндекса" alias="GetIndexInfo">
				Возвращает в параметрах описание индекса с заданным номером
				<params>
					<param name="НомерИндекса" type="Number">
						номер индекса для которого требуется получить описание
					</param>
					<param name="НазваниеИндекса" type="VarName" default="">
						идентификатор переменной для названия индекса
					</param>
					<param name="Выражение" type="VarName" default="">
						идентификатор переменной для ключа индекса
					</param>
					<param name="Уникальность" type="VarName" default="">
						идентификатор переменной для флага уникальности индекса (1-уникальный, 0-нет)
					</param>
					<param name="Убывание" type="VarName" default="">
						идентификатор переменной для флага направления убывания индекса (1-по убыванию значения ключа, 0-по возрастанию)
					</param>
					<param name="Фильтр" type="VarName" default="">
						идентификатор переменной для фильтра индекса в соответствии
					</param>
				</params>
			</method>
			<method name="НомерПоля" alias="FieldNo">
				<params>
					<param name="НазваниеПоля" type="String">
						выражение с названием поля
					</param>
				</params>
				<return type="Number">
					номер поля
				</return>
			</method>
			<method name="ДобавитьПоле" alias="AddField">
				Добавить поле в структуру базы
				<params>
					<param name="Название" type="String">
						строковое выражение, содержащее имя создаваемого поля
					</param>
					<param name="Тип" type="String">
						выражение, содержащее тип создаваемого поля
					</param>
					<param name="Длина" type="Number" default="">
						общая длина создаваемого поля
					</param>
					<param name="Точность" type="Number" default="">
						число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="ДобавитьИндекс" alias="AddIndex">
				Добавить индекс в структуру базы
				<params>
					<param name="Название" type="String">
						строковое выражение, содержащее имя создаваемого индекса
					</param>
					<param name="Выражение" type="String">
						строковое выражение, содержащее ключ индекса
					</param>
					<param name="Уникальность" type="0;1">
						флаг уникальности индекса (1-уникальный, 0-нет)
					</param>
					<param name="Убывание" type="0;1">
						флаг направления убывания индекса (1-по убыванию значения ключа, 0-по возрастанию)
					</param>
					<param name="Фильтр" type="String">
						выражение содержащее фильтр индекса
					</param>
				</params>
			</method>
			<method name="СоздатьИндексныйФайл" alias="CreateIndex">
				Создает индексный файл, содержащий все индексы, которые были созданы методом &quot;ДобавитьИндекс&quot;
				<params>
					<param name="ИмяФайла" type="FilePath">
						строковое выражение с именем создаваемого индексного файла
					</param>
				</params>
			</method>
			<method name="КодоваяСтраница" alias="CodePage">
				Установить режим кодировки для чтения и записи строковых значений в файл
				<params>
					<param name="Режим" type="0;1">
						0-windows-кодировка, 1-DOS-кодировка
					</param>
				</params>
				<return type="0;1">
					текущее числовое значение режима кодировки
				</return>
			</method>
			<method name="КодОшибки" alias="ErrorCode">
				<return type="Number">
					код последней ошибки
				</return>
			</method>
		</methods>
	</type>
	<type name="CorrectEntries" alias="КорректныеПроводки" creatable="CorrectEntries,КорректныеПроводки" components="2">
		<attribs>
			<attrib name="Комментарий" alias="Description" type="String">
				Доступ к значению реквизита &quot;Комментарий&quot; выбранной корректной проводки
			</attrib>
			<attrib name="СчетДт" alias="AccountDt" type="Account">
				Счет дебета корректной проводки
			</attrib>
			<attrib name="СчетКт" alias="AccountDt" type="Account">
				Счет кредита корректной проводки
			</attrib>
		</attribs>
		<methods>
			<method name="Выбрана" alias="Selected">
				выбрана ли какая-нибудь корректная проводка
				<return type="0;1">
					1-выбрана, 0-не выбрана
				</return>
			</method>
			<method name="ВыбратьКорректныеПроводки" alias="SelectCorrectEntries">
				Открыть выборку корректных проводок по плану счетов
				<params>
					<param name="ПланСчетов" type="AccountChart" default="">
						Значение типа &quot;План счетов&quot;. Если не задан, то по всем
					</param>
				</params>
				<return type="0;1">
					1-есть хотя бы одна корректная проводка удовлетворяющая условию, 0-нет ни одной корректной проводки
				</return>
			</method>
			<method name="ВыбратьКорректныеПроводкиПоСчету" alias="SelectCorrectEntriesByAccount">
				Открыть выборку корректных проводок для указанного счета
				<params>
					<param name="Счет" type="String,Account">
						код счета или сам счет, для которого отбирать корректные проводки
					</param>
					<param name="ТипСчета" type="0;1" default="0">
						0- переданный счет является счетом дебета, 1-переданный счет является счетом кредита
					</param>
					<param name="ПланСчетов" type="AccountChart" default="">
						Значение типа &quot;План счетов&quot;
					</param>
				</params>
				<return type="0;1">
					1-есть хотя бы одна корректная проводка удовлетворяющая условию, 0-нет ни одной корректной проводки
				</return>
			</method>
			<method name="ПолучитьКорректнуюПроводку" alias="GetCorrectEntry">
				Получить из выборки следующую корректную проводку
				<return type="0;1">
					1-корректная проводка получена, 0-не получена
				</return>
			</method>
			<method name="Новая" alias="New">
				Добавить новую корректную проводку
			</method>
			<method name="Записать" alias="Write">
				Записать измененную или новую корректную проводку
				<return type="0;1">
					1-корректная проводка успешно записана, 0-не записана
				</return>
			</method>
			<method name="Удалить" alias="Delete">
				Удалить корректную проводку
				<return type="0;1">
					1-корректная проводка успешно удалена, 0-не удалена
				</return>
			</method>
		</methods>
	</type>
	<type name="Calculation" alias="ВидРасчета" components="4">
		<methods>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение конкретного вида расчета по идентификатору
				<params>
					<param name="ИмяВидаРасч" type="String">
						имя конкретного вида расчета , как оно задано в конфигураторе
					</param>
				</params>
				<return type="CalcKind">
					значение конкретного вида расчета
				</return>
			</method>
		</methods>
	</type>
	<type name="RecalculationRules" alias="ПравилаПерерасчета" components="4">
		<attribs>
			<attrib name="Тип" alias="Type" type="0;1;2">
				позволяет прочитать/установить значение типа  правила перерасчета
			</attrib>
			<attrib name="КоличествоПериодов" alias="NumberOfPeriods" type="Number">
				позволяет прочитать/установить количество периодов перерасчета
			</attrib>
		</attribs>
		<methods>
			<method name="КоличествоВедущих" alias="NumberOfLeadings">
				<return type="Number">
					количество &quot;ведущих&quot; видов расчета
				</return>
			</method>
			<method name="ИмеетВедущий" alias="HasLeading">
				Установить принадлежность вида расчета к ведущим для правила перерасчета
				<params>
					<param name="ВидРасчета" type="CalckKind">
						Вид расчета
					</param>
				</params>
				<return type="0;1">
					1-данное правило перерасчета имеет заданный вид расчета в качестве ведущего, 0-не имеет
				</return>
			</method>
			<method name="ПолучитьВедущий" alias="GetLeading">
				<params>
					<param name="НомерВР" type="Number">
						номер вида расчета в списке &quot;ведущих&quot; расчетов
					</param>
				</params>
				<return type="CalcKind">
					Вид расчета с номером &lt;НомерВР&gt; из списка &quot;ведущих&quot; расчетов
				</return>
			</method>
			<method name="ДобавитьКакВедущий" alias="AddAsLeading">
				Добавляет вид расчета в список &quot;ведущих&quot;
				<params>
					<param name="ВидРасчета" type="CalcKind">
						Вид расчета
					</param>
				</params>
			</method>
			<method name="УдалитьВсеВедущие" alias="DeleteAllLeadings">
				Удаляет все виды расчета из списка &quot;ведущих&quot;
			</method>
			<method name="КоличествоПодчиненных" alias="NumberOfDependents">
				<return type="Number">
					количество &quot;подчиненных&quot; видов расчета
				</return>
			</method>
			<method name="ИмеетПодчиненный" alias="HasDependent">
				Установить принадлежность вида расчета к &quot;подчиненным&quot; для правила перерасчета
				<params>
					<param name="ВидРасчета" type="CalcKind">
						Вид расчета
					</param>
				</params>
				<return type="0;1">
					1-данное правило перерасчета имеет заданный вид расчета в качестве подчиненного, 0-не имеет
				</return>
			</method>
			<method name="ПолучитьПодчиненный" alias="GetDependent">
				<params>
					<param name="НомерВР" type="Number">
						номер вида расчета в списке &quot;подчиненных&quot; расчетов
					</param>
				</params>
				<return type="CalcKind">
					Вид расчета с номером &lt;НомерВР&gt; из списка &quot;подчиненных&quot; расчетов
				</return>
			</method>
			<method name="ДобавитьКакПодчиненный" alias="AddAsDependent">
				Добавляет вид расчета в список &quot;подчиненных&quot;
				<params>
					<param name="ВидРасчета" type="CalcKind">
						Вид расчета
					</param>
				</params>
			</method>
			<method name="УдалитьВсеПодчиненные" alias="DeleteAllDependents">
				Удаляет все виды расчета из списка &quot;подчиненных&quot;
			</method>
		</methods>
	</type>
	<type name="ReCalculationRule" alias="ПравилоПерерасчета" components="4">
		<methods>
			<method name="Применять" alias="Use">
				Устанавливает необходимость применять или не применять все правила перерасчетов при вводе новых записей в журнал расчетов
				<params>
					<param name="ФлагПрименения" type="0;1">
						1-применять, 0-не применять
					</param>
				</params>
				<return type="0;1">
					текущее значение флага применения
				</return>
			</method>
		</methods>
	</type>
	<type name="Sequence" alias="Последовательность" components="6">
		<methods>
			<method name="ПолучитьПозицию" alias="GetPosition">
				Получить позицию Границы Последовательности
				<return type="Position">
					32-х символьное строковое значение позиции Границы Последовательности
				</return>
			</method>
			<method name="Получить" alias="Get">
				<return type="String">
					строку описания Границы Последовательности
				</return>
			</method>
			<method name="ПолучитьДокумент" alias="GetDocument">
				<return type="Document">
					документ Границы Последовательности
				</return>
			</method>
			<method name="ПолучитьДату" alias="GetDate">
				<return type="Date">
					дату Границы Последовательности
				</return>
			</method>
			<method name="ПолучитьВремя" alias="GetTime">
				Прочитать время Границы Последовательности
				<params>
					<param name="Часы" type="VarName" default="">
						переменная для приема часа записи ГП
					</param>
					<param name="Минуты" type="VarName" default="">
						переменная для приема минут записи ГП
					</param>
					<param name="Секунды" type="VarName" default="">
						переменная для приема секунд записи ГП
					</param>
				</params>
				<return type="String">
					строковое значение времени ГП в виде &quot;ЧЧ.ММ.СС&quot;
				</return>
			</method>
			<method name="Установить" alias="Set">
				Установить ГП (границу последовательности) на новую дату, документ или позицию
				<params>
					<param name="ПоложениеГП" type="Date,Document,Position">
						дата, документ или позиция документа, на которые устанавливается ГП
					</param>
				</params>
			</method>
			<method name="Сравнить" alias="Compare">
				Сравнить ГП (границу последовательности) с датой, документом или позицией
				<params>
					<param name="Докум" type="Document,Date,Position">
						дата, документ или позиция документа, с которым сравнивается ГП
					</param>
				</params>
				<return type="-1;0;1">
					-1-ГП раньше, 0-равны, 1-позже
				</return>
			</method>
			<method name="ПринадлежитПоследовательности" alias="BelongToSequence">
				Определить, принадлежит ли последовательности заданный документ или вид, заданный строкой
				<params>
					<param name="Докум" type="Document,String">
						выражение типа документ или строка, определяющая вид документа
					</param>
				</params>
				<return type="0;1">
					1-документ принадлежит последовательности, 0-не принадлежит
				</return>
			</method>
			<method name="Проверить" alias="Validate">
				Проверяет, является ли последовательность непрерывной от ГП до заданного документа
				<params>
					<param name="Докум" type="Date,Document,Position">
						выражение типа дата, документ или позиция документа, от которой проверяется непрерывность последовательности
					</param>
				</params>
				<return type="0;1">
					1-последовательность непрерывна, 0-есть проведенные документы между ГП и документом
				</return>
			</method>
		</methods>
	</type>
	<type name="Sequences" alias="ВсеПоследовательности" components="6">
		<methods>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение последовательности по имени
				<params>
					<param name="ИмяПоследовательности" type="String">
						имя последовательности, как оно задано в конфигураторе
					</param>
				</params>
				<return type="Sequence">
					значение последовательности
				</return>
			</method>
		</methods>
	</type>
	<type name="Periodic" alias="Периодический" creatable="Периодический,Periodic">
		<attribs>
			<attrib name="Значение" alias="Value">
				Доступ к значению периодического реквизита справочника или константы
			</attrib>
			<attrib name="ДатаЗнач" alias="DateVal" type="Date">
				Доступ к дате значения периодического реквизита справочника или константы
			</attrib>
		</attribs>
		<methods>
			<method name="ИспользоватьОбъект" alias="UseObject">
				Сопоставляет объект типа &quot;Периодический&quot; периодическому реквизиту справочника или периодической константе
				<params>
					<param name="ИмяРеквизита" type="String">
						строка с названием периодического реквизита справочника или периодической константы
					</param>
					<param name="Объект" type="Reference" default="">
						значение элемента справочника, для которого задается применение периодического реквизита (для констант не нужен)
					</param>
				</params>
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для периодического реквизита справочника или периодической константы неопределенного типа
				<params>
					<param name="ИмяТипа" type="String">
						строковое выражение - название типа данных
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						Число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="ЗначениеНаДату" alias="ValueOnDate">
				<params>
					<param name="Дата" type="Date">
						дата, на которую требуется получить периодический реквизит справочника или периодическую константу
					</param>
				</params>
				<return>
					актуальное значение на заданную дату
				</return>
			</method>
			<method name="НайтиЗначение" alias="FindValue">
				Находит периодическое значение на заданную дату
				<params>
					<param name="Дата" type="Date">
						дата, на которую требуется найти периодический реквизит справочника или периодическую константу
					</param>
					<param name="Режим" type="-1;0;1">
						режим поиска на тот случай, когда на заданную дату не существует значения периодического реквизита
					</param>
				</params>
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
			<method name="ВыбратьЗначения" alias="SelectValues">
				Открыть выборку периодических значений по датам
				<params>
					<param name="ДатаНачала" type="Date" default="">
						дата начала периода выборки
					</param>
					<param name="ДатаКонца" type="Date" default="">
						дата конца периода выборки
					</param>
				</params>
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
			<method name="ВыбратьПоДокументу" alias="SelectByDoc">
				Открыть выборку всех периодических значений (по всем справочникам и реквизитам), заданных документом
				<params>
					<param name="Документ" type="Document">
						значение типа документ
					</param>
				</params>
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
			<method name="ПолучитьЗначение" alias="GetValue">
				Получить из выборки следующий элемент справочника
				<return type="0;1">
					1-элемент выбран, 0-иначе
				</return>
			</method>
			<method name="ОбратныйПорядок" alias="BackwardOrder">
				Установить порядок выборки периодических значений
				<params>
					<param name="Режим" type="Number" default="1">
						порядок выборки: 0-прямой, иначе - обратный
					</param>
				</params>
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
			<method name="ТекущийДокумент" alias="CurrentDocument">
				<return type="Document">
					документ, который задал значение периодического реквизита
				</return>
			</method>
			<method name="ТекущийОбъект" alias="CurrentObj">
				<return type="Reference">
					значение текущего элемента справочника
				</return>
			</method>
			<method name="ТекущийРеквизит" alias="CurrentAttrubute">
				<return type="String">
					наименование текущего реквизита справочника
				</return>
			</method>
			<method name="НомерСтроки" alias="LineNum">
				<return type="Number">
					номер строки текущего документа, изменившего периодическое значение
				</return>
			</method>
			<method name="Записать" alias="Write">
				Записать периодическое значение на заданную дату
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
			<method name="Удалить" alias="Delete">
				Удалить периодическое значение на заданную дату
				<return type="0;1">
					1-вызов метода закончился успешно, 0-иначе
				</return>
			</method>
		</methods>
	</type>
	<type name="Register" alias="Регистр" creatable="Регистр,Register" components="1" abstract="1">
		<methods>
			<method name="ПривязыватьСтроку" alias="LinkLine">
				Записать номер строки документа в движении регистра
				<params>
					<param name="НомерСтроки" type="Number">
						номер строки Документа
					</param>
				</params>
			</method>
			<method name="Вид" alias="Kind">
				<return type="String">
					строку с названием вида регистра
				</return>
			</method>
			<method name="ПредставлениеВида" alias="KindPresent">
				<return type="String">
					пользовательское представление вида регистра
				</return>
			</method>
			<method name="НазначитьТип" alias="SetType">
				Назначить тип для атрибута неопределенного типа
				<params>
					<param name="ИмяРеквизита" type="String">
						наименовани реквизита, как он назван в конфигураторе
					</param>
					<param name="ИмяТипа" type="TypeName">
						название типа данных, который назначается реквизиту
					</param>
					<param name="Длина" type="Number" default="">
						длина поля представления данных
					</param>
					<param name="Точность" type="Number" default="">
						Число знаков после десятичной точки
					</param>
				</params>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						выражение, содержащее устанавливаемое значение атрибута
					</param>
				</params>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяРеквизита" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение атрибута
				</return>
			</method>
			<method name="ВыбратьДвижения" alias="SelectActs">
				Выбрать все движения регистра в заданном интервале дат
				<params>
					<param name="ДатаНачала" type="Date,Document,Position" default="">
						дата, документ или позиция начала временного интервала выбора движений регистра
					</param>
					<param name="ДатаКонца" type="Date,Document,Position" default="">
						дата, документ или позиция конца временного интервала выбора движений регистра
					</param>
					<param name="ГрафаОтбора" type="String" default="">
						Идентификатор графы отбора - установка использования определенной графы отбора
					</param>
				</params>
				<return type="Number">
					1
				</return>
			</method>
			<method name="ВыбратьДвиженияДокумента" alias="SelectDocActs">
				Выбрать все движения регистра по документу
				<params>
					<param name="Документ" type="Documeny">
						значение типа Документ
					</param>
				</params>
				<return type="0;1">
					1-действие выполнено и в выборке есть хотя бы один элемент, 0-действие не выполнено или в выборке нет ни одного элемента
				</return>
			</method>
			<method name="ОбратныйПорядок" alias="BackwardOrder">
				Установить порядок выборки  движений документов
				<params>
					<param name="Режим" type="0;1" default="1">
						1-выбирать движения документов в порядке убывания даты и времени, 0-в порядке возрастания
					</param>
				</params>
				<return type="0;1">
					1-обратный порядок, 0-выборка в порядке возрастания даты и времени
				</return>
			</method>
			<method name="ПолучитьДвижение" alias="GetDocAct">
				Выбрать очередное движение регистра
				<return type="0;1">
					1-движение выбрано, 0-иначе
				</return>
			</method>
			<method name="ТекущийДокумент" alias="CurrentDocument">
				<return type="Document">
					документ, задавший движение регистра
				</return>
			</method>
			<method name="НомерСтроки" alias="LineNum">
				<return type="Number">
					номер строки документа, по которой было выбрано движение
				</return>
			</method>
			<method name="ВыбратьИтоги" alias="SelectTotals">
				Выбрать все остатки регистра
			</method>
			<method name="ПолучитьИтог" alias="GetTotal">
				Выбрать очередной остаток по регистру
				<return type="0;1">
					1-очередной остаток по регистру выбран, 0-иначе
				</return>
			</method>
			<method name="ВременныйРасчет" alias="TempCalc">
				Установить флаг участия регистра во временном расчете
				<params>
					<param name="Флаг" type="0;1" default="1">
						1-установить флаг участия регистра во временном расчете, 0-сбросить флаг
					</param>
				</params>
				<return type="0;1">
					текущее значение флага участия регистра во временном расчете
				</return>
			</method>
			<method name="ВыгрузитьИтоги" alias="RetrieveTotals">
				Выгрузить все итоги регистра с текущим фильтром в таблицу значений
				<params>
					<param name="ТаблЗнач" type="VarName">
						ТаблицаЗначений, куда система выгрузит все итоги регистра
					</param>
					<param name="ВклФильтр" type="0;1" default="0">
						1-в получаемую таблицу включаются измерения, закрепленные фильтром, 0-не включаются
					</param>
					<param name="Очищать" type="Number" default="1">
						1-перед выгрузкой таблица значений очищается, 0-не очищается
					</param>
				</params>
			</method>
			<method name="УстановитьФильтр" alias="SetFilter">
				Назначить фильтр для оптимизации действий с регистром
				<params>
					<param name="Измерен..." default="">
						значения измерений регистра
					</param>
					<param name="Рекв..." default="">
						значениям реквизитов регистра
					</param>
				</params>
			</method>
			<method name="УстановитьЗначениеФильтра" alias="SetFilterValue">
				Установить значение фильтра для оптимизации расчетов
				<params>
					<param name="Идентиф" type="RegIzmRekvName">
						идентификатор измерения или реквизита
					</param>
					<param name="Значен">
						значение или список значений
					</param>
					<param name="Вариант" type="Number" default="1">
						0-не фильтровать, 1-фильтровать по значению, 2- искать вхождение
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="RegisterOb" alias="РегистрОборотов" base="Register" components="1">
		<methods>
			<method name="ИспользоватьПериод" alias="UsePeriod">
				Установить период выборки итогов оборотного регистра. Синтаксис зависит от периодичности регистра
				<params>
					<param name="ДатаГод" type="Date,Number">
						дата или номер года
					</param>
					<param name="КварталМесяцНеделя" type="Number" default="">
						номер месяца, квартала или недели
					</param>
					<param name="ДеньДекада" type="Number" default="">
						номер дня или декады месяца
					</param>
				</params>
			</method>
			<method name="Итог" alias="Total">
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
					<param name="ИмяРесурса" type="RegResursName">
						название требуемого ресурса регистра
					</param>
				</params>
				<return type="Number">
					значение итога заданного ресурса по ранее установленному периоду оборотного регистра
				</return>
			</method>
			<method name="Итоги" alias="Totals">
				Извлечь итоги всех ресурсов оборотного регистра по ранее установленному периоду оборотного регистра
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
				</params>
			</method>
			<method name="СводныйИтог" alias="ConsolidatedTotal">
				<params>
					<param name="Измерен..." default="">
						значения измерений регистра
					</param>
					<param name="ИмяРесурса" type="RegResursName">
						название требуемого ресурса регистра
					</param>
				</params>
				<return type="Number">
					значение сводного итога заданного ресурса по ранее установленному периоду оборотного регистра
				</return>
			</method>
			<method name="СводныеИтоги" alias="ConsolidatedTotals">
				Извлечь сводные итоги всех ресурсов оборотного регистра по ранее установленному периоду оборотного регистра
				<params>
					<param name="Измерен..." default="">
						значения измерений регистра
					</param>
				</params>
			</method>
			<method name="ИтогиПолучить" alias="TotalsGet">
				Получить все ресурсы по регистру
			</method>
			<method name="Движение" alias="Act">
				Выполнить запись движения в оборотный регистр по параметрам
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
					<param name="Ресурс..." type="Number">
						значения приращений ресурсов регистра
					</param>
				</params>
			</method>
			<method name="ДвижениеВыполнить" alias="DoAct">
				Выполнить  запись движения в оборотный регистр по атрибутам
			</method>
		</methods>
	</type>
	<type name="RegisterOst" alias="РегистрОстатков" base="Register" components="1">
		<attribs>
			<attrib name="Приход" alias="Income" type="0;1">
				флаг записи движения регистра &quot;приход&quot;: 1-если текущее движение регистра приход, 0-иначе
			</attrib>
			<attrib name="Расход" alias="Outcome" type="0;1">
				флаг записи движения регистра &quot;расход&quot;: 1, если текущее движение регистра - расход; 0-иначе
			</attrib>
		</attribs>
		<methods>
			<method name="ДвижениеПриход" alias="ActIncome">
				Выполнить запись прихода в регистр по параметрам
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
					<param name="Ресурс..." type="Number">
						значения приращений ресурсов регистра
					</param>
				</params>
			</method>
			<method name="ДвижениеРасход" alias="ActOutcome">
				Выполнить запись расхода в регистр по параметрам
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
					<param name="Ресурс..." type="Number">
						значения приращений ресурсов регистра
					</param>
				</params>
			</method>
			<method name="ДвижениеПриходВыполнить" alias="DoActIncome">
				Выполнить запись прихода в регистр по атрибутам
			</method>
			<method name="ДвижениеРасходВыполнить" alias="DoActOutcome">
				Выполнить запись  расхода в регистр по атрибутам
			</method>
			<method name="Остаток" alias="Rest">
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
					<param name="ИмяРесурса" type="RegResursName">
						название требуемого ресурса регистра
					</param>
				</params>
				<return type="Number">
					значение остатка заданного ресурса регистра
				</return>
			</method>
			<method name="СводныйОстаток" alias="ConsolidatedRest">
				<params>
					<param name="Измерен..." default="">
						значения измерений регистра
					</param>
					<param name="ИмяРесурса" type="RegResursName">
						название требуемого ресурса регистра
					</param>
				</params>
				<return type="Number">
					значение сводного остатка заданного ресурса регистра
				</return>
			</method>
			<method name="Остатки" alias="Rests">
				Извлечь все ресурсы по регистру
				<params>
					<param name="Измерен...">
						значения измерений регистра
					</param>
				</params>
			</method>
			<method name="СводныеОстатки" alias="ConsolidatedRests">
				Извлечь сводные ресурсы по регистру
				<params>
					<param name="Измерен..." default="">
						значения измерений регистра
					</param>
				</params>
			</method>
			<method name="ОстаткиПолучить" alias="GetRests">
				Получить все ресурсы по регистру
			</method>
			<method name="ВыбратьДвиженияСОстатками" alias="SelectActsWithRests">
				Выбрать все движения регистра с остатками
				<params>
					<param name="ДатаКонца" type="Date,Document,Position" default="">
						дата, документ или позиция конца временного интервала выбора движений регистра
					</param>
					<param name="ГрафаОтбора" type="String" default="">
						идентификатор графы отбора - использование определенной графы отбора
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="AllRegs" alias="Регистры" components="1" creatable="Регистры,Registers">
		<methods>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение регистра по имени идентификатора
				<params>
					<param name="ИмяРегистра" type="RegName">
						имя регистра, как оно задано в конфигураторе
					</param>
				</params>
				<return type="Register">
					значение регистра
				</return>
			</method>
			<method name="РассчитатьРегистрыНа" alias="CalcRegsOnBeg">
				Рассчитать все регистры с установленным флагом временного расчета на начало события
				<params>
					<param name="ГраницаРасчета" type="Date,Document,Position">
						значение типа дата | документ | позиция
					</param>
					<param name="ГрафаОтбора" type="String" default="">
						Установка использования графы отбора
					</param>
				</params>
			</method>
			<method name="РассчитатьРегистрыПо" alias="CalcRegsOnEnd">
				Рассчитать все регистры с установленным флагом временного расчета на конец события
				<params>
					<param name="ГраницаРасчета" type="Date.Document,Position">
						значение типа дата | документ | позиция
					</param>
					<param name="ГрафаОтбора" type="String" default="">
						Установка использования графы отбора
					</param>
				</params>
			</method>
			<method name="Актуальность" alias="Actual">
				Устанавливает флаг актуальности временного расчета
				<params>
					<param name="ФлагАктуальности" type="Number" default="">
						1-временный расчет поддерживать в актуальном состоянии, 0-не поддерживать
					</param>
				</params>
				<return type="0;1">
					текущее состояние флага актуальности временного  расчета
				</return>
			</method>
		</methods>
	</type>
	<type name="Calendar" alias="Календарь" creatable="Календарь,Calendar" components="4">
		<attribs>
			<attrib name="Дата" alias="Date" type="Date" InExprOnly="1">
				Дата текущей строки календаря (только для чтения)
			</attrib>
			<attrib name="Значение" alias="Value" type="Number">
				Значение текущей строки календаря
			</attrib>
		</attribs>
		<methods>
			<method name="Вид" alias="Kind">
				<return type="String" InExprOnly="1">
					идентификатор календаря, заданный при конфигурировании
				</return>
			</method>
			<method name="Выбран" alias="Selected">
				<return type="0;1" InExprOnly="1">
					флаг выбора календаря: 1-календарь выбран, 0-не выбран
				</return>
			</method>
			<method name="Дней" alias="Days">
				Получить количество &quot;ненулевых&quot; дней за период
				<params>
					<param name="ДатаНачала" type="Date">
						дата начала периода, в котором определяется количество дней
					</param>
					<param name="ДатаОкончания" type="Date">
						дата окончания периода, в котором определяется количество дней
					</param>
				</params>
				<return type="Number">
					количество дней
				</return>
			</method>
			<method name="Часов" alias="Hours">
				Получить количество &quot;ненулевых&quot; часов за период
				<params>
					<param name="ДатаНачала" type="Date">
						дата начала периода
					</param>
					<param name="ДатаОкончания" type="Date">
						дата окончания периода
					</param>
				</params>
				<return type="Number">
					сумма числовых значений соответствующих тем дням календаря, которые попадают в заданный период
				</return>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяАтрибута" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение атрибута
				</return>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяАтрибута" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						выражение, содержащее устанавливаемое значение атрибута
					</param>
				</params>
			</method>
			<method name="ПолучитьДату" alias="GetDate">
				Получить дату календаря
				<params>
					<param name="ДатаНачала" type="Date">
						дата начала периода, от которой будут отсчитываться дни
					</param>
					<param name="Количество" type="Number">
						количество дней, отсчитываемое от ДатаНачала
					</param>
				</params>
				<return type="Date">
					значение типа &quot;дата&quot;
				</return>
			</method>
			<method name="ВыбратьДаты" alias="SelectDates">
				Открывает выборку записей календаря
				<params>
					<param name="ДатаНачала" type="Date">
						дата начала периода выборки
					</param>
					<param name="ДатаКонца" type="Date">
						дата конца периода выборки
					</param>
				</params>
				<return type="0;1">
					1-выборка открыта и в ней есть хоть одна запись, 0-не обнаружено записей
				</return>
			</method>
			<method name="СледующаяДата" alias="NextDate">
				Выбирает следующий день календаря (позиционируется на очередной записи выборки) в порядке возрастания дат
				<return type="0;1">
					1-получена следующая запись, 0-иначе
				</return>
			</method>
			<method name="Автозаполнение" alias="Autolayout">
				Выполняет автозаполнение календаря в заданном периоде
				<params>
					<param name="ДатаНачала" type="Date">
						дата начала периода автозаполнения
					</param>
					<param name="ДатаКонца" type="Date">
						дата конца периода автозаполнения
					</param>
				</params>
				<return type="0;1">
					1-получилось, 0-не получилось
				</return>
			</method>
			<method name="УчитыватьПраздники" alias="UseHolidays">
				Установка флага учета праздников при автозаполнении
				<params>
					<param name="Флаг" type="0;1" default="">
						1-учитываются праздники при автозаполнении, 0-не учитываются
					</param>
				</params>
				<return type="0;1">
					1-учитываются праздники при автозаполнении, 0-не учитываются
				</return>
			</method>
		</methods>
	</type>
	<type name="Holidays" alias="Праздники" creatable="Праздники,Holidays" components="4">
		<attribs>
			<attrib name="Дата" alias="Date" type="Date" InExprOnly="1">
				Дата текущей строки праздников (только для чтения)
			</attrib>
			<attrib name="Значение" alias="Value" type="Number">
				Значение текущей (на которой позиционирована выборка) строки праздников
			</attrib>
		</attribs>
		<methods>
			<method name="Новый" alias="New">
				Ввести  новый &quot;праздничный&quot; день
				<params>
					<param name="Дата" type="Date">
						дата нового праздника
					</param>
					<param name="Значение" type="Number">
						число с двумя знаками после запятой (не более 100)
					</param>
				</params>
			</method>
			<method name="Удалить" alias="Delete">
				Удаляет &quot;праздничный&quot; день
				<params>
					<param name="Дата" type="Date">
						дата удаляемой строки (праздника)
					</param>
				</params>
			</method>
			<method name="ВыбратьДаты" alias="SelectDates">
				Открывает выборку записей праздников
				<params>
					<param name="ДатаНачала" type="Date">
						дата начала периода выборки
					</param>
					<param name="ДатаКонца" type="Date">
						дата конца периода выборки
					</param>
				</params>
				<return type="0;1">
					1-выборка открыта и в ней есть хоть одна запись, 0-не обнаружено записей
				</return>
			</method>
			<method name="СледующаяДата" alias="NextDate">
				Выбирает следующий день праздников (позиционируется на очередной записи выборки) в порядке возрастания дат
				<return type="0;1">
					1-получена следующая запись, 0-иначе
				</return>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяАтрибута" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
				</params>
				<return>
					значение атрибута
				</return>
			</method>
			<method name="УстановитьАтрибут" alias="SetAttrib">
				Установить значение атрибута по имени идентификатора
				<params>
					<param name="ИмяАтрибута" type="String">
						имя атрибута, как оно задано в конфигураторе
					</param>
					<param name="Значение">
						выражение, содержащее устанавливаемое значение атрибута
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="Calendars" alias="Календари" components="4">
		<methods>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				Получить значение календаря конкретного вида по идентификатору
				<params>
					<param name="ИмяКалендаря" type="CalendarName">
						имя календаря конкретного вида, как оно задано в конфигураторе
					</param>
				</params>
				<return type="Calendar">
					значение календаря конкретного вида
				</return>
			</method>
		</methods>
	</type>
	<type name="Query" alias="Запрос" creatable="Запрос,Query">
		<methods>
			<method name="Выполнить" alias="Execute">
				Выполнить запрос
				<params>
					<param name="ТекстЗапроса" type="String">
						строка с текстом запроса на языке генерации запросов
					</param>
				</params>
				<return type="0;1">
					1-запрос выполнен, 0-иначе
				</return>
			</method>
			<method name="Группировка" alias="Group">
				Получить следующее значение выборки Запроса
				<params>
					<param name="Группировка" type="Number,String" default="">
						выражение, содержащее номер или имя группировки
					</param>
					<param name="Направление" type="-1;1" default="1">
						1-выборка значений группировки по возрастанию, -1- по убыванию
					</param>
				</params>
				<return type="0;1">
					1-получено следующее значение выборки запроса, 0-иначе
				</return>
			</method>
			<method name="ЭтоГруппа" alias="IsItAGroup">
				<params>
					<param name="ИмяГруппировки" type="String">
						выражение, содержащее имя группировки текста запроса
					</param>
				</params>
				<return type="0;1">
					флаг принадлежности группе справочника: 1-если текущая строка выборки соответствует группе справочника, 0-иначе
				</return>
			</method>
			<method name="НачалоПериода" alias="BeginOfPeriod">
				<return type="Date" InExprOnly="1">
					дату начала периода формирования запроса
				</return>
			</method>
			<method name="КонецПериода" alias="EndOfPeriod">
				<return type="Date" InExprOnly="1">
					дату конца периода формирования запроса
				</return>
			</method>
			<method name="Получить" alias="Get">
				Прямое позиционирование на запись в выборке по конкретным значениям группировок
				<params>
					<param name="ЗначенияГруппировкиN..." default="">
						значение параметра N-ой группировки запроса
					</param>
				</params>
				<return type="0;1">
					1-если запись найдена, 0-иначе
				</return>
			</method>
			<method name="вНачалоВыборки" alias="toSelectionBegin">
				Осуществляет прямое позиционирование на начало выборки
				<return type="0;1">
					1-операция выполнена успешно, 0-нет
				</return>
			</method>
			<method name="ИспользоватьГрафуОтбора" alias="UseSelectionColumn">
				Установка использования графы отбора
				<params>
					<param name="ГрафаОтбора" type="String" default="">
						Идентификатор графы отбора
					</param>
				</params>
				<return type="String">
					идентификатор использованной реально графы отбора, если метод вызывается после выполнения запроса
				</return>
			</method>
			<method name="Выгрузить" alias="Unload">
				Выгружает результаты запроса в таблицу значений
				<params>
					<param name="ТаблЗнач" type="VarName">
						Таблица значений, куда выгружаются результаты запроса
					</param>
					<param name="Флаг" type="Number,String" default="0">
						0-значения групп и функций, 1-значения групп и функций, дополнительных переменных, 2-значения упорядочиваний групп и функций, 3-значения упорядочиваний групп и функций, дополнительных переменных, Строка - &quot; Товар(1), Товар(2), Товар, Склад, Приход, Расход&quot;, где Товар(1) - значение первого упорядочивания группировки &quot;Товар&quot;
					</param>
					<param name="Итоги" type="Number" default="1">
						0-не выводить, 1-сверху, 2-снизу, 3-сверху и снизу
					</param>
				</params>
				<return type="0;1">
					1-выгрузка произошла успешно, 0-иначе
				</return>
			</method>
			<method name="ЗначениеУпорядочивания" alias="OrderValue">
				<params>
					<param name="Группировка" type="Number,String">
						номер или имя группировки (номер работает быстрее)
					</param>
					<param name="Упорядочив" type="Number" default="1">
						Порядковый номер параметра упорядочивания указанной группировки
					</param>
				</params>
				<return>
					значение заданного поля упорядочивания текущей группы
				</return>
			</method>
			<method name="ПолучитьАтрибут" alias="GetAttrib">
				<params>
					<param name="ИмяАтрибута" type="String">
						строковое выражение, содержащее значение любого атрибута запроса
					</param>
				</params>
				<return>
					значение атрибута запроса по его имени
				</return>
			</method>
		</methods>
	</type>
	<type name="Metadata" alias="Метаданные">
		<methods>
			<method name="Выбран" alias="Selected">
				Проверяет спозиционирован ли объект типа &quot;Метаданные&quot; на конкретном объекте метаданных или нет
				<return type="0;1">
					1-объект соответствует объекту метаданных, 0-не соответствует
				</return>
			</method>
			<method name="Родитель" alias="Parent">
				<return type="0;1">
					объект метаданных, которому подчинен данный объект
				</return>
			</method>
			<method name="ПолныйИдентификатор" alias="FullIdentifier">
				<return type="String">
					полный идентификатор объекта
				</return>
			</method>
			<method name="Представление" alias="Present">
				<return type="String">
					строковое значение представления объекта
				</return>
			</method>
			<method name="ДлинаПредставленияЗначения" alias="ValuePresentLen">
				<params>
					<param name="Мин" type="Number" default="">
						Метод не будет возвращать значение меньше указанной в данном параметре величины
					</param>
					<param name="Макс" type="Number" default="">
						Метод не будет возвращать значение больше указанной в данном параметре величины
					</param>
					<param name="ДлПоУмолч" type="Number" default="">
						Метод будет возвращать данную величину для метаданных, для которых длина представления не определена
					</param>
				</params>
				<return type="Number">
					длину представления значения
				</return>
			</method>
		</methods>
	</type>
	<type name="MetaDataList" alias="СписокМетаданных">
		<methods>
			<method name="Количество" alias="Count">
				<return type="Number">
					количество ссылок в списке
				</return>
			</method>
			<method name="Получить" alias="Get">
				<params>
					<param name="Номер" type="Number">
						Номер ссылки
					</param>
				</params>
				<return type="MetaData">
					ссылку по заданному номеру
				</return>
			</method>
		</methods>
	</type>
</Types>
