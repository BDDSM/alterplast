.. јвтор: –ыбальченко —тепан aka Steban

.. include:: commonchm.txt

***************************************
_`јктив»кс`
***************************************
..      <chminfo>
                <insert nodes="//common/maininfo/*"/>
                <alinks>
					_1cpp_ativex_ctrl_
					_1cpp_formex_cc_target_
				</alinks>
        </chminfo>

.. contents:: —одержание
        :backlinks: none

=====================================================================
** ласс "јктив»кс" / "ActiveX".**
=====================================================================
..      <chminfo split="0" splitchild="0">
                <insert nodes="//common/propsmethods/*"/>
        </chminfo>

 ласс позвол€ет размещать на формах 1—:ѕредпри€тие элементы управлени€ (далее Ё”) ActiveX
и обрабатывать событи€, возникающие в Ё”.
ѕри возникновении событи€ вызываетс€ процедура модул€ формы с именем::

  <»дентификаторЁлементаƒиалога>_<—обытие>

где »дентификаторЁлементаƒиалога - идентификатор элемента диалога, на месте которого создан Ё”,
и —обытие - наименование событи€ Ё” (например OnClick).
Ќапример, обработчик ѕроцедура »ƒЅраузер_BeforeNavigate2(ѕараметры...)

 ласс может служить базовым классом дл€ классов, определ€емых пользователем.

¬ этом случае, если в модуле реализации  ќѕ-наследника определены процедуры или функции с именами,
совпадающими с именами событий (например, OnClick) без указани€ имени реквизита::

  <—обытие>

где —обытие - наименование событи€ Ё” (например OnClick),
Ќапример, обработчик ѕроцедура BeforeNavigate2(ѕараметры...)

то при возникновении соответствующих событий они будут вызваны.
≈сли определены обработчики в модуле формы и в модуле реализации  ќѕ, то сначала будут вызваны
обработчики из модул€ реализации  ќѕ.
ƒл€ обработки событий в модуле реализации  ќѕ экземпл€р класса должен быть создан следующим образом::

        јтр‘ормы = —оздатьќбъект("јтрибут‘ормы");
        јтр‘ормы.”становитьјтрибут(‘орма,"‘ƒерево");
        ƒерево=—оздатьќбъект("ƒерево");//класс-наследник јктив»кс
        јтр‘ормы.—оздатьЁлемент”правлени€(ƒерево); // —оздатьЁ”
        ƒерево.—оздатьЁ”("MSComctlLib.TreeCtrl");

=====================================================================
—обыти€
=====================================================================
..      <chminfo split="0" splitchild="1">
                <insert nodes="//common/propsmethods/*"/>
        </chminfo>

_`¬ыбор` / Selection
---------------------------------------------------------------------
	**—интаксис дл€ формы:** ¬ыбор( ќбъект )

	**—интаксис дл€  ќѕ:** ¬ыбор()

	**ѕараметры:**

		- ќбъект - тип: јктив»кс или  ќѕ-наследник јктив»кс. ѕараметр ќбъект не передаетс€ в случае нахождени€ обработчика в наследнике јктив»кс.

	**ќписание:** ¬озникает при нажатии Enter или двойном щелчке на элементе јктив»кс в форме.
	ѕосле обработки данного событи€ управление передаетс€ самому Ё”.
	ѕрименение данного событи€ полностью идентично применению штатным событи€м јктив»кс.

=====================================================================
—войства
=====================================================================
..      <chminfo split="0" splitchild="1">
                <insert nodes="//common/propsmethods/*"/>
        </chminfo>

_`ќбъект` / Object
------------------------------------------------
        **ƒоступ:** только чтение.

        **“ип:** OLE объект.

        **ќписание:** ќбеспечивает доступ к свойствам и методам созданного элемента управлени€.

ќбработка—обытий / EventProcessing
------------------------------------------------
        **ƒоступ:** чтение и запись.

        **“ип:** „исло.

        **ќписание:** ”правл€ет вызовом процедур - обработчиков событий.

≈сли 0, то при возникновении событий в элементе управлени€
процедуры-обработчики не вызываютс€. ѕри любых других значени€х обработка событий производитс€.

=====================================================================
ћетоды
=====================================================================
..      <chminfo split="0" splitchild="1">
                <insert nodes="//common/propsmethods/*"/>
        </chminfo>

_`”становитьјтрибут` / AssignAttrib
------------------------------------------------
        **—интаксис:** ”становитьјтрибут(‘орма, »дентификаторЁлементаƒиалога)

        **ѕараметры:**
                - **‘орма** - тип: ‘орма. ‘орма, на которой будет создан элемент ActiveX
                - **»дентификаторЁлементаƒиалога** - тип: —трока. »дентификатор элемента
                  диалога, на месте которого будет создан элемент ActiveX.

        **ќписание:** ”казывает размещение создаваемого элемента,
        а также устанавливает префикс дл€ имен процедур-обработчиков событий, расположенных
        в модуле формы.

имена процедур-обработчиков событий, расположенных в модуле
` ќѕ-наследника <classes.chm::/classes0.html>`_ јктив»кс совпадают с именами событий.

.. important::
   ћетод работает после физического открыти€ окна формы (например - в предопределенной процедуре
   ѕослеќткрыти€). ћетод работает только дл€ реквизитов диалога типа "“екст".

—оздатьЁ” / CreateControl
------------------------------------------------
        **—интаксис:**

        **ѕараметры:**
                - **ProgID** - тип: —трока. ProgID элемента управлени€ как указано в реестре.

        **¬озвращает:** OLE объект созданного элемента управлени€.

        **ќписание:** —оздает в месте, указанном при вызове процедуры `”становитьјтрибут`_
        элемент управлени€ ActiveX с указанным ProgID.

.. important::
   ћетод работает после указани€ расположени€ Ё” вызовом `”становитьјтрибут`_ класса `јктив»кс`_
   или вызовом —оздатьЁ”(—оздать“абличноеѕоле) класса јтрибут‘ормы.

OLE-объект возвращаемый при выполнении метода может быть сохранен в переменной.
¬ дальнейшем доступ к этому объекту может осуществл€тьс€ через свойство `ќбъект`_.

”становить‘окус / SetFocus
------------------------------------------------
        **—интаксис:** ”становить‘окус()

        **ќписание:** ”станавливает фокус ввода.

”ничтожить / Destroy
------------------------------------------------
        **—интаксис:** ”ничтожить()

        **ќписание:** уничтожает элемент управлени€.
