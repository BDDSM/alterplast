
Функция Конт(Конт) Возврат Конт; КонецФункции // :Контекст
Функция Сам() Возврат Конт(Контекст); КонецФункции // :Контекст

Функция ОткрытьФормуСПроверкой(РежимОткрытия)
	Сам = Сам();

	спПараметры=СоздатьОбъект("СписокЗначений");
	Конт=спПараметры;
	фФормаОткрыта=ОткрытьФорму("Отчет", Конт, КаталогИБ()+"ExtForms\ОтчетНовый1.ert");

	Сам.ПроверитьРавенство(фФормаОткрыта, 1);
	Сам.ПроверитьРавенство(ТипЗначенияСтр(Конт), "ГрупповойКонтекст");
	Сам.ПроверитьРавенство(спПараметры.Получить("РежимОткрытия"), РежимОткрытия);
	Возврат Конт;
КонецФункции

Процедура ТестЗакрытияФормы() Экспорт
	Сам = Сам();

	Конт1=ОткрытьФормуСПроверкой("Первое открытие");
	Сам.ПроверитьРавенство(Конт1.ПолеВвода, "");

	Конт1.ПолеВвода="Строковое значение";
	Конт2=ОткрытьФормуСПроверкой("Повторное открытие");
	Сам.ПроверитьРавенство(Конт1, Конт2);
	Сам.ПроверитьРавенство(Конт2.ПолеВвода, "Строковое значение");

	Окна=СоздатьОбъект("Окна");
	Окна.ЗакрытьОкно(Конт2);

	Сам.ПроверитьРавенство(ТипЗначенияСтр(Конт1), "");

	Конт3=ОткрытьФормуСПроверкой("Первое открытие");
	Сам.ПроверитьНеравенство(Конт1, Конт3);
	Сам.ПроверитьРавенство(Конт3.ПолеВвода, "");
	Окна.ЗакрытьОкно(Конт3);
КонецПроцедуры

Процедура ТестЗакрытияФормыДокумента() Экспорт
Перем Конт;
	Сам = Сам();

	ОткрытьФорму("Документ.Новый1", Конт);
	Сам.ПроверитьРавенство(ТипЗначенияСтр(Конт), "ГрупповойКонтекст");
	Сам.ПроверитьРавенство(Конт.Вид(), "Новый1");
	Конт.НомерДок=245;

	Окна=СоздатьОбъект("Окна");
	Результат=Окна.ЗакрытьОкно(Конт);
	Сам.ПроверитьРавенство(Результат, 1);
	Сам.ПроверитьРавенство(ТипЗначенияСтр(Конт), "");
КонецПроцедуры

Процедура ТестЗакрытияФормы_ПроверкаКонтекстФорма_СохраняюВПеременной() Экспорт
	//Перем лФорма, лАтрибут;

	Сам = Сам();

	Конт = ОткрытьФормуСПроверкой("Первое открытие");

	// проверю форму и реквизит контекста после удаления,
	// 1С раньше падала при использовании после закрытия формы
	лФорма = Конт.Форма;
	Сам.ПроверитьРавенство(ТипЗначения(лФорма), 100);
	Сам.ПроверитьРавенство(ТипЗначенияСтр(лФорма.Заголовок()), "Строка");

	Окна=СоздатьОбъект("Окна");
	Окна.ЗакрытьОкно(Конт);
	Сам.ПроверитьРавенство(ТипЗначения(Конт), 0);

	Сам.ПроверитьРавенство(ТипЗначения(лФорма), 0);

	// здесь 1С падала
	Попытка
		лАтрибут = лФорма.Реквизит; // здесь падает
	Исключение
		Ошибка=ОписаниеОшибки();
	КонецПопытки;
	Сам.ПроверитьРавенство(Ошибка, "Значение не представляет агрегатный объект (Реквизит)");

КонецПроцедуры

// вызывается также в тестах класса "Форма",
// потому что могут передать сохранненую где-то ссылку на уже закрытую физически форму
//
Процедура ТестЗакрытияФормы_ПередатьЗакрытуюФормуВМетодКлассаФорма() Экспорт

	Сам = Сам();

	Конт = ОткрытьФормуСПроверкой("Первое открытие");

	// проверю форму и реквизит контекста после удаления,
	// 1С раньше падала при использовании после закрытия формы
	лФорма = Конт.Форма;
	Сам.ПроверитьРавенство(ТипЗначения(лФорма), 100);
	Сам.ПроверитьРавенство(ТипЗначенияСтр(лФорма.Заголовок()), "Строка");

	Окна=СоздатьОбъект("Окна");
	Окна.ЗакрытьОкно(Конт);
	Сам.ПроверитьРавенство(ТипЗначения(Конт), 0);

	Сам.ПроверитьРавенство(ТипЗначения(лФорма), 0);

	оФорма = СоздатьОбъект("Форма");
	Попытка
		оФорма.УстановитьФорму(лФорма);
	Исключение
		Возврат;
	КонецПопытки;

	// далее 1С падала
	ОбъектАктивИкс = СоздатьОбъект("КлассПотомокАктивИкс");
	ОбъектАктивИкс.Инит(СоздатьОбъект("ЖурналВызоваМетодов"));

	оФорма.СоздатьЭлементУправления(ОбъектАктивИкс, "ИДОбъектаАктивИкс");

КонецПроцедуры

// вызывается также в тестах класса "АктивИкс",
// потому что могут передать сохранненую где-то ссылку на уже закрытую физически форму
//
Процедура ТестЗакрытияФормы_ПередатьЗакрытуюФормуВМетодКлассаАктивИкс() Экспорт

	Сам = Сам();

	Конт = "";
	фФормаОткрыта=ОткрытьФорму("Отчет", Конт, КаталогИБ()+ "ExtForms\ОбработкаАктивИкс.ert");

	Сам.ПроверитьРавенство(фФормаОткрыта, 1);
	Сам.КонтекстФормы = Конт;
	
	Сам.ПроверитьРавенство(ТипЗначенияСтр(Конт), "ГрупповойКонтекст");

	// проверю форму и реквизит контекста после удаления,
	// 1С раньше падала при использовании после закрытия формы
	лФорма = Конт.Форма;
	Сам.ПроверитьРавенство(ТипЗначения(лФорма), 100);
	Сам.ПроверитьРавенство(ТипЗначенияСтр(лФорма.Заголовок()), "Строка");

	Окна=СоздатьОбъект("Окна");
	Окна.ЗакрытьОкно(Конт);
	Сам.ПроверитьРавенство(ТипЗначения(Конт), 0);

	Сам.ПроверитьРавенство(ТипЗначения(лФорма), 0);

	// здесь 1С падала
	оАктивИкс = СоздатьОбъект("АктивИкс");
	Попытка
		оАктивИкс.УстановитьАтрибут(лФорма, "Реквизит");
	Исключение
	КонецПопытки;

КонецПроцедуры