
//#include UnitTests\OOP\defcls_bad1.prm


класс ЖурналВызоваМетодов=ЖурналВызоваМетодов.txt
{}

class ООППредок = Предок.txt
{
	void МетодСПараметромПоЗначению_ОпределенныйВ_defcls_prm(Знач Строка Параметр, Строка Параметр2, Знач Строка Параметр3);
	void МетодСПараметромПоЗначениюПоУмолчанию_ОпределенныйВ_defcls_prm(Знач Строка Параметр = "");
	
	Число ФункцияСПараметромПоЗначению_ОпределенныйВ_defcls_prm(Знач Строка Параметр, Строка Параметр2, Знач Строка Параметр3);
	Число ФункцияСПараметромПоЗначениюПоУмолчанию_ОпределенныйВ_defcls_prm(Знач Строка Параметр = "");

	Число ФункцияРеализованнаяКакПроцедура(Парам1, Парам2ПоУмолчанию);
	Число ФункцияСПараметромПоУмолчаниюРеализованнаяКакПроцедура(Парам1, Парам2ПоУмолчанию = 0);
	
	Void ПроцедураОписаннаяВПрмФайлеКакVoid_Регистрозависимость(Парам1);
}

class ООППотомок = Потомок.txt : ООППредок
{}

class ООППредокВОдномФайле = ПредокПотомок.txt
{}

class ООППотомокВОдномФайле = ПредокПотомок.txt : ООППредокВОдномФайле
{}

class ООППредокВОдномФайлеСОдинаковымиМетодами = ПредокПотомокСОдинаковымиМетодами.txt
{}

class ООППотомокВОдномФайлеСОдинаковымиМетодами = ПредокПотомокСОдинаковымиМетодами.txt : ООППредокВОдномФайлеСОдинаковымиМетодами
{}

//class ООПТесты = ООПТесты.txt : ТестовыйСлучайСДанными
class ООПТесты = ООПТесты.txt : ТестовыйСлучайФормы
{}

class ООП_КлассыВОдномФайле_Тесты = ООП_КлассыВОдномФайле_Тесты.txt : ТестовыйСлучайСДанными
{}

class КлассСПустымМодулем = КлассСПустымМодулем.txt
{}

Класс КлассСИсключениемВДеструкторе = КлассСИсключениемВДеструкторе.txt
{}

class СинтаксисТесты = СинтаксисТесты.txt : ТестовыйСлучайСДанными
//class СинтаксисТесты = СинтаксисТесты.txt
{}

class СправочникПотомок = СправочникПотомок.txt : Справочник
{}

class ДокументПотомок = ДокументПотомок.txt : Документ
{}

// специально для множественного наследования (некоторые тесты падали)
class ДокументПотомокКонкретныйДокумент = ДокументПотомок.txt : ДокументПотомок
{}

class ДокументПотомокКонкретныйДокумент1 = ДокументПотомок.txt : ДокументПотомокКонкретныйДокумент
{}

class ДокументПотомокКонкретныйДокумент2 = ДокументПотомок.txt : ДокументПотомокКонкретныйДокумент1
{}

class тестыЗначенияПараметровПоУмолчанию = ЗначенияПараметровПоУмолчанию.txt : ТестовыйСлучай
{
  Строка ПараметрПустаяСтрока(Строка _Парам = "");
  Строка ПараметрСтрока(Строка _Парам = "ПараметрСтрока");

	void Метод1_СПараметромПоУмолчанию(СписокЗначений Список="СписокЗначений");
	void Метод2_СПараметромПоУмолчанию(СписокЗначений Список="СписокЗначений");
	void Метод3_СПараметромПоУмолчанию(ООППредокВОдномФайле Объект="ООППотомокВОдномФайле");
	void Метод4_СПараметромПоУмолчанию(ООППредокВОдномФайле Объект="СписокЗначений");
	void Метод5_СПараметромПоУмолчанию(ООППредокВОдномФайле Объект="525");
	void Метод6_СПараметромПоУмолчанию(ООППредокВОдномФайле Объект="");
	
	void Метод1_СПараметромНеопределенногоТипа(Строка Тип, Неопределенный Значение, Неопределенный Парам = "");
	void Метод2_СПараметромНеопределенногоТипа(Строка Тип, Неопределенный Значение, Неопределенный Парам = "123");
	
	Число Метод_ПараметрыПоУмолчанию_Сложение(Число А = 2, Число Б = 3);
	Число Метод_ШтатныеПараметрыПоУмолчанию_Сложение_3Параметра(Число А = 2, Число Б = 3, Число Ц = 5);
            
	Строка Метод_СПараметромПоУмолчаниюОпределенныйТолькоВПрмФайле(Строка Парам = "ЗначениеПрм");
	Строка Метод_СПараметромПоУмолчаниюОпределенныйВПрмФайлеИВМодулеКласса(Строка Парам = "ЗначениеПрм");
	Строка Метод_СПараметромПоУмолчаниюОпределенныйВМодулеКлассаИОписанныйВПрмФайле(Строка Парам);
	//след. метод определяется только в модуле класса, а не в прм-файле описания класса
	// Строка Метод_СПараметромПоУмолчаниюОпределенныйТолькоВМодулеКласса(Строка Парам = "ЗначениеМодульКласса");
};
                                                           
// указываю любой файл, но не файл предка !
class Наследник_ТестыЗначенияПараметровПоУмолчанию = Предок.txt : тестыЗначенияПараметровПоУмолчанию
{
};

//  проверка бага 2038 http://cvs.alterplast.ru/bugs/show_bug.cgi?id=2038
class Документ_Новый2 = Документ_Новый2.txt : Документ.Новый2
{}
      
//  проверка бага 1689 http://cvs.alterplast.ru/bugs/show_bug.cgi?id=1689
class Документ_Записать = Документ_Записать.txt : Документ
{
	void   Записать();
}

//  проверка бага 1868 http://cvs.alterplast.ru/bugs/show_bug.cgi?id=1868
класс Тесты_ПарамПоУмолчаниюC_3ТочкамиВнутри = Тесты_ПарамПоУмолчаниюC_3ТочкамиВнутри.txt  : ТестовыйСлучай
{
	число Метод_3Точки_ВКонце(Дата Значение, Строка Загол = "Введите дату...", Число ТаймАут=0);
	число Метод_3Точки_ВСередине(Дата Значение, Строка Загол = "Введите дату... и еще что-то", Число ТаймАут=0);
	число Метод_3Точки_ВНачале(Дата Значение, Строка Загол = "...Введите дату", Число ТаймАут=0);
	число Метод_Только_3Точки(Дата Значение, Строка Загол = "...", Число ТаймАут=0);
	
	число Метод_СНеопределеннымКоличествомПараметров(Дата Значение, ...);
	
	void Метод_СНеопределеннымКоличествомПараметров_ВМодулеПередачаЧерезЗнач(Строка Значение, ...);
	void Метод_СНеопределеннымКоличествомПараметров_ВМодулеПередачаЧерезЗначВПрмФайле(Знач Строка Значение, ...);

	Неопределенный Метод_СНеопределеннымКоличествомПараметров_вирт(...);
	
	Функция_СНеопределеннымКоличествомПараметров_БезВозвращаемогоЗначенияВ_PrmФайле(...);
	Процедура_СНеопределеннымКоличествомПараметров_БезВозвращаемогоЗначенияВ_PrmФайле(...);
};

Класс Тесты_КомпиляцияКласса = Тесты_КомпиляцияКласса.ert : ТестовыйСлучай 
{}

Класс ИзменчивыйКласс = ИзменчивыйКласс.txt 
{}

Класс Тесты_НаследникГрупповойКонтекст = Тесты_НаследникГрупповойКонтекст.txt  : ТестовыйСлучайФормы
{} 

Класс ПотомокНесуществующегоКласса = ПредокПотомок.txt : НесуществующийКласс
{}

Класс РегистрыПотомок = РегистрыПотомок.txt : Регистры
{}

class Класс_МножественныеПредки = РегистрыПотомок.txt : РегистрыПотомок, ИндексированнаяТаблица
{}

class СериализуемыйКласс = ПредокПотомок.txt
{}

class СериализуемыйКлассСоСвойством = ПредокПотомок.txt
{}

class СериализуемыйКлассСИсключениемВМетодеЗагрузитьИзСтроки = ПредокПотомок.txt
{}

class СериализуемыйКлассСИсключениемВМетодеКлассСохраняемый = ПредокПотомок.txt
{}

class СериализуемыйКлассСИсключениемВМетодеСохранитьКлассВСтроку = ПредокПотомок.txt
{}


//Класс РегистрПотомок = РегистрыПотомок.txt : Регистр
//{}
Класс Тесты_Фабрика = Тесты_Фабрика.txt : ТестовыйСлучай
{}

Класс КлассСКонструкторами = КлассСКонструкторами.txt
{}

Класс КлассСКонструкторами_Наследник = КлассСКонструкторами.txt : КлассСКонструкторами
{}

class КлассСоСвойством = КлассыСДинамическимиСвойствами.txt
{}

class КлассСДинамическимСвойством = КлассыСДинамическимиСвойствами.txt
{}

class КлассСДинамическимСвойством_Наследник = КлассыСДинамическимиСвойствами.txt : КлассСДинамическимСвойством
{}

class ООП_ДинамическиеКлассыТесты = ООП_ДинамическиеКлассыТесты.txt : ТестовыйСлучай
{}

class НаследникВК = НаследникВК.txt : Addin.V7HttpReader
{}

class ПотомокОтВстроенногоКлассаСОграничениемДоступаКСвойству = ПредокПотомок.txt : ODBCRecordSet
{}

class КлассСФункциейВирт = ПредокПотомок.txt
{}

class КлассСФункциейВиртНаследник = ПредокПотомок.txt : КлассСФункциейВирт
{}

class Класс_ResultLoader = Класс_ResultLoader.txt
{}