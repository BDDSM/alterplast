Функция Конт(Конт) Возврат Конт; КонецФункции
Функция Сам() Возврат Конт(Контекст); КонецФункции
Функция _Объект() Возврат СоздатьОбъект("Math"); КонецФункции
//______________________________________________________________________________
//
Процедура тестLong() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.Long(100), 100);
	Сам.ПроверитьРавенство(_math.Long("100"), 100);
	Сам.ПроверитьРавенство(_math.Long("0100"), 64);
	Сам.ПроверитьРавенство(_math.Long("0x100"), 256);
	Сам.ПроверитьРавенство(_math.Long("100", 2), 4);
	Сам.ПроверитьРавенство(_math.Long("-100", 30), -900);

	Сам.ПроверитьРавенство(_math.Число(100), 100);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестDouble() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.Double("-1.5e+3"), -1500);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестPI() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенствоСТочностью(_math.PI(), 3.1415926535897932, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестABS() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.ABS(1400.22), 1400.22);
	Сам.ПроверитьРавенство(_math.ABS(-1400.22), 1400.22);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестACOS() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенствоСТочностью(_math.ACOS(0), _pi/2, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестASIN() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенствоСТочностью(_math.ASIN(-1), -_pi/2, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестATAN() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенствоСТочностью(_math.ATAN(1), _pi/4, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестATAN2() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенствоСТочностью(_math.ATAN2(_math.SIN(_pi/3), _math.COS(_pi/3)), _pi/3, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестCEIL() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенствоСТочностью(_math.CEIL(-1.3135), -1,  10);
	Сам.ПроверитьРавенствоСТочностью(_math.CEIL(1.3135), 2,  10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестCOPYSIGN() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.COPYSIGN(1.333, -2002),  -1.333);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестCOS() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенство(_math.COS(_pi/3), 0.5);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестCOSH() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.COSH(0), 1);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестEXP() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенствоСТочностью(_math.EXP(1), 2.7182818, 5);
КонецПроцедуры
//______________________________________________________________________________
//
//Процедура тестFABS() Экспорт
//	Сам =Сам();
//	_math = _Объект();
//
//	Сам.ПроверитьРавенство(_math.FABS(-231.245), 231.245);
//КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестFLOOR() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.FLOOR(12.245), 12);
	Сам.ПроверитьРавенство(_math.FLOOR(-12.245), -13);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестFMOD() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенствоСТочностью(_math.FMOD(12434.13123, 15.43), 12434.13123 -Цел(12434.13123 /15.43) *15.43, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестFREXP() Экспорт
	Сам =Сам();
	_math = _Объект();
	
	_exp =0;
	_mant =_math.FREXP(64.1, _exp);
	Сам.ПроверитьРавенствоСТочностью(_mant, 0.5, 2);
	Сам.ПроверитьРавенство(_exp, 7);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестHYPOT() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.HYPOT(3, 4), 5);
КонецПроцедуры
//______________________________________________________________________________
//
//Процедура тестLABS() Экспорт
//	Сам =Сам();
//	_math = _Объект();
//
//	Сам.ПроверитьРавенство(_math.LABS(-188), 188);
//КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестLDEXP() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.LDEXP(1.5, 3), 12);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестLDIV() Экспорт
	Сам =Сам();
	_math = _Объект();

	_rem =0;
	_quot =_math.LDIV(35, 11, _rem);
	Сам.ПроверитьРавенство(_quot, 3);
	Сам.ПроверитьРавенство(_rem, 2);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестLOG() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенствоСТочностью(_math.LOG(2.7182818), 1, 5);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестLOG10() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.LOG10(1000), 3);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестMODF() Экспорт
	Сам =Сам();
	_math = _Объект();

	_int =0;
	_fract =_math.MODF(1234.5678, _int);
	Сам.ПроверитьРавенство(_int, 1234);
	Сам.ПроверитьРавенствоСТочностью(_fract, 0.5678, 5);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестPOW() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.POW(3,4), 81);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестRAND() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьНеравенство(_math.RAND(), _math.RAND());
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестRAND1() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьНеравенство(_math.RAND1(), _math.RAND1());
	Сам.ПроверитьБольше(_math.RAND1(), 0);
	Сам.ПроверитьМеньше(_math.RAND1(), 1);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестROTL() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.ROTL(2, 3), 16);
	Сам.ПроверитьРавенство(_math.ROTL("0x40000001", 2), 5);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестROTR() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.ROTR(1, 2), _math.Long("0x40000000"));
КонецПроцедуры
//______________________________________________________________________________
//
//Процедура тестSCALB() Экспорт
//	Сам =Сам();
//	_math = _Объект();
//
//	Сам.ПроверитьРавенство(_math.SCALB(1.5, 3), 12);
//КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестSHL() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.SHL(2, 3), 16);
	Сам.ПроверитьРавенство(_math.SHL("0x40000001", 2), 4);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестSHR() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.SHR(9, 2), 2);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестSIN() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенствоСТочностью(_math.SIN(_pi /6), 0.5, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестSINH() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.SINH(0), 0);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестSQRT() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.SQRT(25), 5);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестSRAND() Экспорт
	Сам =Сам();
	_math = _Объект();
    _seed =_GetPerformanceCounter();
	
	_math.SRAND(_seed);
	_z1 =_math.RAND();
	_math.SRAND(_seed);
	_z2 =_math.RAND();

	Сам.ПроверитьРавенство(_z1, _z2);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестTAN() Экспорт
	Сам =Сам();
	_math = _Объект();
	_pi =_math.PI();

	Сам.ПроверитьРавенствоСТочностью(_math.TAN(_pi/4), 1, 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестTANH() Экспорт
	Сам =Сам();
	_math = _Объект();
	_e1 =_math.EXP(1.32);
	_e2 =_math.EXP(-1.32);
	
	Сам.ПроверитьРавенствоСТочностью(_math.TANH(1.32), (_e1 -_e2)/(_e1 +_e2), 10);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестBITOR() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.BITOR("0x01010101", "0x20202020"), _math.Long("0x21212121"));
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестBITAND() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.BITAND("0x1547", "0x3712"), _math.Long("0x1502"));
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестCOMPL() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.COMPL(3), -4);
КонецПроцедуры
//______________________________________________________________________________
//
Процедура тестXOR() Экспорт
	Сам =Сам();
	_math = _Объект();

	Сам.ПроверитьРавенство(_math.XOR("0x1547", "0x3712"), _math.Long("0x2255"));
КонецПроцедуры
//______________________________________________________________________________
//
