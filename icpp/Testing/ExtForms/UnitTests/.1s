Перем Журнал Экспорт;

//#if _NOW_PREPARE_CLASS
Перем База;

Перем ФлагУдачноеПроведениеДокумента Экспорт;
Перем ФлагВызыватьОригинальноеСобытиеПроведенияДокумента Экспорт;

//#else 
//#endif

//#if _NOW_PREPARE_CLASS

Функция Конт(Конт) Возврат Конт; КонецФункции // : Контекст
Функция Сам() Возврат Конт(Контекст); КонецФункции // : Контекст

Процедура Деструктор()
	Журнал.ДобавитьЗапись("КОП::Деструктор");
КонецПроцедуры	// Деструктор

Процедура Инициализация(конт, Журнал1) Экспорт
	База = Конт;

	Журнал = Журнал1;
	Журнал.ДобавитьЗапись("КОП::Инициализация");

	ФлагУдачноеПроведениеДокумента = 1;
	ФлагВызыватьОригинальноеСобытиеПроведенияДокумента = 1;
КонецПроцедуры

//Процедура ПриНачалеВыбораЗначения(ИдентификаторЭлемента, Флаг) Экспорт
//	Сообщить("КОП::ПриНачалеВыбораЗначения");
//	База.ПриНачалеВыбораЗначения(ИдентификаторЭлемента, Флаг);
//КонецПроцедуры

Процедура ПриЗакрытии() Экспорт
	Журнал.ДобавитьЗапись("КОП::ПриЗакрытии");

	Перехватчик = СоздатьОбъект("Перехватчик");
	//СписокАргументов = СоздатьОбъект("СписокЗначений");
	//Перехватчик.ВызватьОригинальноеСобытиеГК(База, "ПриЗакрытии", СписокАргументов);
	Перехватчик.ВыполнитьОригинальноеСобытиеГК(База,"ПриЗакрытии");

	Журнал.ДобавитьЗапись("КОП::ПриЗакрытии (конец)");
	
КонецПроцедуры
        
Функция ОбработкаПроведения(Док) Экспорт
	// Док // : Документ
	//Информатор = СоздатьОбъект("Информатор");
	//Тип = Информатор.ТипЗначенияСтрВнутр(Док);
	//Сообщить("КОП::Тип = <"+Тип+">");
	
	ПредставлениеДокумента = Док.Вид()+" № "+СокрЛП(Док.НомерДок)+" от "+Док.ДатаДок;
	Журнал.ДобавитьЗапись("КОП::ОбработкаПроведения<"+ПредставлениеДокумента+">"+Док.ГрупповаяОбработка());
	//Док.НеПроводитьДокумент();

	Если ФлагВызыватьОригинальноеСобытиеПроведенияДокумента = 1 Тогда
		Перехватчик = СоздатьОбъект("Перехватчик");
		Перехватчик.ВыполнитьОригинальноеСобытиеГК(Док,"ОбработкаПроведения", Журнал);
	КонецЕсли;
	
	Возврат ФлагУдачноеПроведениеДокумента;
	
КонецФункции

Функция ОбработкаУдаленияПроведения(Док) Экспорт
//Предупреждение("КОП::ОбработкаУдаленияПроведения");	
	ПредставлениеДокумента = Док.Вид()+" № "+СокрЛП(Док.НомерДок)+" от "+Док.ДатаДок;
	Журнал.ДобавитьЗапись("КОП::ОбработкаУдаленияПроведения<"+ПредставлениеДокумента+">"+Док.ГрупповаяОбработка());

	Если ФлагВызыватьОригинальноеСобытиеПроведенияДокумента = 1 Тогда
		Перехватчик = СоздатьОбъект("Перехватчик");
		Перехватчик.ВыполнитьОригинальноеСобытиеГК(Док,"ОбработкаУдаленияПроведения", Журнал);
	КонецЕсли;
	
	Возврат ФлагУдачноеПроведениеДокумента;
КонецФункции	// ОбработкаПроведения

//Процедура ПриНажатииКнопкиКлавиатуры(КодКлавиши, Alt, Shift, Ctrl, Символ, ФСО) Экспорт
//	Сообщить("КОП::ПриНажатииКнопкиКлавиатуры КодКлавиши = <"+КодКлавиши+">, Символ = <"+Символ+">" );
////	Если фРедактирование=1 Тогда
////		// если активным является атрибут с идентификатором равным редактируемой колонки,
////		// то проверим что, собственно, нажато и не потеряет ли реквизит фокус
////		Если КодКлавиши=9 Тогда //Tab
////			ПриОкончанииРедактированияЯчейки();
////
////		ИначеЕсли КодКлавиши=13 Тогда //Enter
////			Конт.Активизировать(стрАктивныйЭлементТЗ); // для того чтобы (вобщем так надо :))
////			ПриОкончанииРедактированияЯчейки();
////			ФСО=0;
////			
////		ИначеЕсли КодКлавиши=27 Тогда //Esc
////			ПриОкончанииРедактированияЯчейки(0); // обрабатываем это как отмену ввода в ТЗ
////			ФСО=0; // дальнейшую обработку отменяем
////		КонецЕсли;
////	КонецЕсли;
////
////	// МОЖНО РЕАЛИЗОВАТЬ ДОБАВЛЕНИЕ УДАЛЕНИЕ СТРОК
////	
////	//стрАктивныйЭлемент=Конт.Форма.АктивныйЭлемент();
////	//АтрибутФормы=РасширениеФормы.ПолучитьАтрибут(стрАктивныйЭлемент);
////	//Если АтрибутФормы.Тип=15 Тогда //ТаблицаЗначений
////	//	Если КодКлавиши=45 Тогда //Ins
////    //    	// можно реализовать добавление строк
////	//	ИначеЕсли КодКлавиши=46 Тогда //Del
////	//		// можно реализовать удаление строк
////	//	КонецЕсли;
////	//КонецЕсли;
//КонецПроцедуры
//
//Процедура ПослеОткрытия()
//	Сообщить("КОП::ПослеОткрытия");	
//КонецПроцедуры

//#else
// работа с формой

//Процедура ПриНажатииКнопкиКлавиатуры1(КодКлавиши, Alt, Shift, Ctrl, Символ, ФСО) // Экспорт
//	Сообщить("Форма::ПриНажатииКнопкиКлавиатуры КодКлавиши = <"+КодКлавиши+">, Символ = <"+Символ+">" );
//КонецПроцедуры

Процедура ПриОткрытии()
//Предупреждение("Форма::ПриОткрытии");	
	//Журнал=СоздатьОбъект("ЖурналВызоваМетодов");
	Если ТипЗначенияСтр(Форма.Параметр) = "ЖурналВызоваМетодов" Тогда
		Журнал = Форма.Параметр;
	Иначе
		Журнал=СоздатьОбъект("ЖурналВызоваМетодов");
	КонецЕсли;
	Журнал.ДобавитьЗапись("Форма::ПриОткрытии");

	Форма.Параметр = Журнал;
	
	//КлассПерехватчикГК = СоздатьОбъект("КлассПерехватчикГК");
	//КлассПерехватчикГК.Инициализация(Контекст, Журнал);
	//
	//Перехватчик = СоздатьОбъект("Перехватчик");
	//Перехватчик.ПерехватитьСобытияГК(Контекст, КлассПерехватчикГК);
	
	
КонецПроцедуры
               
// !! если оставить ВводНового - внешняя форма просто не откроется :( даже если не загружен 1С++ !!
//Процедура ВводНового(Копир)
//Предупреждение("Форма::ВводНового");	
//	Журнал.ДобавитьЗапись("Форма::ВводНового");
//КонецПроцедуры // ВводНового 

Процедура ПриЗакрытии()
	Журнал.ДобавитьЗапись("Форма::ПриЗакрытии");
КонецПроцедуры

//*******************************************
Процедура Сформировать()

КонецПроцедуры

//#endif