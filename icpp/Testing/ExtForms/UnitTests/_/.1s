// основное отличие - наличие в классе метода Событие_ПриЗакрытии, а не ПриЗакрытии 

Перем Журнал Экспорт;

//#if _NOW_PREPARE_CLASS
Перем База;

//#else 
//#endif

//#if _NOW_PREPARE_CLASS

Функция Конт(Конт) Возврат Конт; КонецФункции // : Контекст
Функция Сам() Возврат Конт(Контекст); КонецФункции // : Контекст

Процедура Деструктор()
	Журнал.ДобавитьЗапись("КОП::Деструктор");
КонецПроцедуры	// Деструктор

Процедура Инициализация(конт, Журнал1) Экспорт
	База = Конт;

	Журнал = Журнал1;
	Журнал.ДобавитьЗапись("КОП::Инициализация");

КонецПроцедуры
            
Процедура ПриЗакрытии() // !! Специально без Экспорт - это событие не должно сработать !!
	Журнал.ДобавитьЗапись("КОП::ПриЗакрытии");

	//Перехватчик = СоздатьОбъект("Перехватчик");
	////СписокАргументов = СоздатьОбъект("СписокЗначений");
	////Перехватчик.ВызватьОригинальноеСобытиеГК(База, "ПриЗакрытии", СписокАргументов);
	//Перехватчик.ВыполнитьОригинальноеСобытиеГК(База, "ПриЗакрытии");
	
КонецПроцедуры

Процедура Событие_ПриЗакрытии() Экспорт // а вот это должно !!
	Журнал.ДобавитьЗапись("КОП::Событие_ПриЗакрытии");

	Перехватчик = СоздатьОбъект("Перехватчик");
	//СписокАргументов = СоздатьОбъект("СписокЗначений");
	//Перехватчик.ВызватьОригинальноеСобытиеГК(База, "ПриЗакрытии", СписокАргументов);
	Перехватчик.ВыполнитьОригинальноеСобытиеГК(База, "ПриЗакрытии");
КонецПроцедуры

//#else 
// работа с формой

Процедура ПриОткрытии()
	Журнал=СоздатьОбъект("ЖурналВызоваМетодов");
	Журнал.ДобавитьЗапись("Форма::ПриОткрытии");

	Форма.Параметр = Журнал;
	
КонецПроцедуры
      
Процедура ПриЗакрытии()
	Журнал.ДобавитьЗапись("Форма::ПриЗакрытии");
КонецПроцедуры

//*******************************************
Процедура Сформировать()

КонецПроцедуры

//#endif